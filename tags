!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
-sourcedir	sparsehash-2.0.2/packages/deb/rules	/^	dh_install --sourcedir=debian\/tmp$/;"	m
1	sparsehash-2.0.2/doc/dense_hash_map.html	/^<P><A name="1">[1]<\/A>$/;"	a
1	sparsehash-2.0.2/doc/dense_hash_set.html	/^<P><A name="1">[1]<\/A>$/;"	a
1	sparsehash-2.0.2/doc/sparse_hash_map.html	/^<P><A name="1">[1]<\/A>$/;"	a
1	sparsehash-2.0.2/doc/sparse_hash_set.html	/^<P><A name="1">[1]<\/A>$/;"	a
1	sparsehash-2.0.2/doc/sparsetable.html	/^<P><A name="1">[1]<\/A>$/;"	a
2	sparsehash-2.0.2/doc/dense_hash_map.html	/^<P><A name="2">[2]<\/A>$/;"	a
2	sparsehash-2.0.2/doc/dense_hash_set.html	/^<P><A name="2">[2]<\/A>$/;"	a
2	sparsehash-2.0.2/doc/sparse_hash_map.html	/^<P><A name="2">[2]<\/A>$/;"	a
2	sparsehash-2.0.2/doc/sparse_hash_set.html	/^<P><A name="2">[2]<\/A>$/;"	a
2	sparsehash-2.0.2/doc/sparsetable.html	/^<P><A name="2">[2]<\/A>$/;"	a
3	sparsehash-2.0.2/doc/dense_hash_map.html	/^<P><A name="3">[3]<\/A>$/;"	a
3	sparsehash-2.0.2/doc/dense_hash_set.html	/^<P><A name="3">[3]<\/A>$/;"	a
3	sparsehash-2.0.2/doc/sparse_hash_map.html	/^<P><A name="3">[3]<\/A>$/;"	a
3	sparsehash-2.0.2/doc/sparse_hash_set.html	/^<P><A name="3">[3]<\/A>$/;"	a
4	sparsehash-2.0.2/doc/dense_hash_map.html	/^<P><A name="4">[4]<\/A>$/;"	a
4	sparsehash-2.0.2/doc/dense_hash_set.html	/^<P><A name="4">[4]<\/A>$/;"	a
4	sparsehash-2.0.2/doc/sparse_hash_map.html	/^<P><A name="4">[4]<\/A>$/;"	a
4	sparsehash-2.0.2/doc/sparse_hash_set.html	/^<P><A name="4">[4]<\/A>$/;"	a
5	sparsehash-2.0.2/doc/dense_hash_map.html	/^<P><A name="5">[5]<\/A>$/;"	a
5	sparsehash-2.0.2/doc/sparse_hash_map.html	/^<P><A name="5">[5]<\/A>$/;"	a
6	sparsehash-2.0.2/doc/dense_hash_map.html	/^<P><A name="6">[6]<\/A>$/;"	a
6	sparsehash-2.0.2/doc/sparse_hash_map.html	/^<P><A name="6">[6]<\/A>$/;"	a
7	sparsehash-2.0.2/doc/dense_hash_map.html	/^<P><A name="7">[7]<\/A>$/;"	a
A	sparsehash-2.0.2/src/type_traits_unittest.cc	/^struct A {$/;"	s	file:
ACCESSBRANCHBROTHER	streemac.h	26;"	d
ACCESSDEPTH	streemac.h	22;"	d
ACCESSFIRSTCHILD	streemac.h	25;"	d
ACCESSHEADPOS	streemac.h	23;"	d
ACCESSSUFFIXLINK	streemac.h	24;"	d
ACLOCAL	sparsehash-2.0.2/Makefile	/^ACLOCAL = ${SHELL} \/home\/jcgarcia\/Toci\/sparsehash-2.0.2\/missing --run aclocal-1.11$/;"	m
ACLOCAL_AMFLAGS	sparsehash-2.0.2/Makefile	/^ACLOCAL_AMFLAGS = -I m4$/;"	m
ACLOCAL_M4	sparsehash-2.0.2/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ADDAMOUNT	depthtab.cpp	17;"	d	file:
ADDFACTOR	construct.cpp	71;"	d	file:
ADDOPTION	optdesc.h	45;"	d
ALLOCSPACE	spacedef.h	70;"	d
ALLOCVIAFATAL	space.cpp	51;"	d	file:
AMTAR	sparsehash-2.0.2/Makefile	/^AMTAR = ${SHELL} \/home\/jcgarcia\/Toci\/sparsehash-2.0.2\/missing --run tar$/;"	m
AM_CPPFLAGS	sparsehash-2.0.2/Makefile	/^AM_CPPFLAGS = -I$(top_srcdir)\/src$/;"	m
AM_CXXFLAGS	sparsehash-2.0.2/Makefile	/^AM_CXXFLAGS = -Wall -W -Wwrite-strings -Woverloaded-virtual -Wshadow$/;"	m
ARGS_H	args.h	12;"	d
ARRAYDEF_H	arraydef.h	12;"	d
ASSIGNDEFAULTSHOWDESC	multidef.h	74;"	d
ASSIGNMAXMATCOMPLEMENT	procmaxmat.cpp	127;"	d	file:
AUTOCONF	sparsehash-2.0.2/Makefile	/^AUTOCONF = ${SHELL} \/home\/jcgarcia\/Toci\/sparsehash-2.0.2\/missing --run autoconf$/;"	m
AUTOHEADER	sparsehash-2.0.2/Makefile	/^AUTOHEADER = ${SHELL} \/home\/jcgarcia\/Toci\/sparsehash-2.0.2\/missing --run autoheader$/;"	m
AUTOMAKE	sparsehash-2.0.2/Makefile	/^AUTOMAKE = ${SHELL} \/home\/jcgarcia\/Toci\/sparsehash-2.0.2\/missing --run automake-1.11$/;"	m
AWK	sparsehash-2.0.2/Makefile	/^AWK = gawk$/;"	m
AllHashtables	sparsehash-2.0.2/src/hashtable_test.cc	/^                            CHARSTAR_HASHTABLES> AllHashtables;$/;"	t	namespace:__anon5	file:
Alloc	sparsehash-2.0.2/src/hashtable_test.cc	/^  Alloc(const Alloc<U, SizeT, MAX_SIZE>& that)$/;"	f	struct:__anon4::Alloc
Alloc	sparsehash-2.0.2/src/hashtable_test.cc	/^  explicit Alloc(int i=0, int* count=NULL) : id_(i), count_(count) {}$/;"	f	struct:__anon4::Alloc
Alloc	sparsehash-2.0.2/src/hashtable_test.cc	/^struct Alloc {$/;"	s	namespace:__anon4	file:
AllocateHashTable	sparsehash-2.0.2/experimental/libchash.c	/^HashTable *AllocateHashTable(int cchKey, int fSaveKeys)$/;"	f
ArrayCharacters	arraydef.h	/^typedef ArrayUchar ArrayCharacters;     \/\/ \\Typedef{ArrayCharacters}$/;"	t
ArrayPosition	arraydef.h	/^typedef ArrayUint  ArrayPosition;       \/\/ \\Typedef{ArrayPosition}$/;"	t
ArrayStrings	arraydef.h	/^struct ArrayStrings$/;"	s
AsString	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^inline string AsString(int n) {$/;"	f
AssertTypesEq	sparsehash-2.0.2/src/type_traits_unittest.cc	/^template<typename T> struct AssertTypesEq<T, T> {};$/;"	s	file:
B	sparsehash-2.0.2/src/type_traits_unittest.cc	/^  explicit B(int n) : n_(n) { }$/;"	f	class:B
B	sparsehash-2.0.2/src/type_traits_unittest.cc	/^class B {$/;"	c	file:
BASE_TEMPLATE_UTIL_H_	sparsehash-2.0.2/src/sparsehash/template_util.h	50;"	d
BASE_TYPE_TRAITS_H_	sparsehash-2.0.2/src/sparsehash/type_traits.h	58;"	d
BM_BYTES	sparsehash-2.0.2/experimental/libchash.c	179;"	d	file:
BRADDR2NUM	streemac.h	60;"	d
BUILT_SOURCES	sparsehash-2.0.2/Makefile	/^BUILT_SOURCES = src\/sparsehash\/internal\/sparseconfig.h$/;"	m
Background	papers/APBC2012/wga_APBC2012.tex	/^        \\paragraph*{Background:} $/;"	P
Background	papers/APBC2012/wga_APBC2012.tex	/^\\section*{Background}$/;"	s
Base	sparsehash-2.0.2/src/type_traits_unittest.cc	/^class Base {$/;"	c	namespace:__anon7	file:
BaseHashtableInterface	sparsehash-2.0.2/src/hash_test_interface.h	/^  BaseHashtableInterface(InputIterator f, InputIterator l, key_type empty_k,$/;"	f	class:BaseHashtableInterface
BaseHashtableInterface	sparsehash-2.0.2/src/hash_test_interface.h	/^  BaseHashtableInterface(InputIterator f, InputIterator l,$/;"	f	class:BaseHashtableInterface
BaseHashtableInterface	sparsehash-2.0.2/src/hash_test_interface.h	/^  BaseHashtableInterface(size_type expected_max_items_in_table,$/;"	f	class:BaseHashtableInterface
BaseHashtableInterface	sparsehash-2.0.2/src/hash_test_interface.h	/^class BaseHashtableInterface {$/;"	c
Blockdescription	space.cpp	/^struct Blockdescription$/;"	s	file:
Branchinfo	streetyp.h	/^struct Branchinfo$/;"	s
Bref	streetyp.h	/^DECLAREARRAYSTRUCT(Bref);$/;"	v
Bref	streetyp.h	/^typedef Uint * Bref;    \/\/ \\Typedef{Bref}$/;"	t
Bref	types.h	/^typedef Uint * Bref;    $/;"	t
By_Q	findmumcand.cpp	/^static int  By_Q (const void * A, const void * B)$/;"	f	file:
By_R	findmumcand.cpp	/^static int  By_R (const void * A, const void * B)$/;"	f	file:
C	sparsehash-2.0.2/src/type_traits_unittest.cc	/^  explicit C(int n) : n_(n) { }$/;"	f	class:C
C	sparsehash-2.0.2/src/type_traits_unittest.cc	/^class C {$/;"	c	file:
CC	Makefile	/^CC = g++$/;"	m
CC	sparsehash-2.0.2/Makefile	/^CC = gcc$/;"	m
CCDEPMODE	sparsehash-2.0.2/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	sparsehash-2.0.2/Makefile	/^CCLD = $(CC)$/;"	m
CFLAGS	Makefile	/^CFLAGS  = -std=gnu++0x -m64 -fopenmp -fno-permissive -Wno-write-strings -Wno-format -msse4.2 -g$/;"	m
CFLAGS	sparsehash-2.0.2/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	sparsehash-2.0.2/packages/deb/rules	/^CFLAGS = -Wall -g$/;"	m
CHARDEF_H	chardef.h	12;"	d
CHARSTAR_HASHTABLES	sparsehash-2.0.2/src/hashtable_test.cc	480;"	d	file:
CHECKADDR	streemac.h	66;"	d
CHECKARGNUM	args.h	28;"	d
CHECKARRAYSPACE	arraydef.h	63;"	d
CHECKARRAYSPACEMULTI	arraydef.h	81;"	d
CHECKIFLOCATIONISVALID	findmaxmat.cpp	131;"	d	file:
CHECKSTEP	construct.cpp	696;"	d	file:
CHECKSTEP	construct.cpp	811;"	d	file:
CHECKSTEP	findmaxmat.cpp	38;"	d	file:
CHECKTEXTLEN	construct.cpp	26;"	d	file:
CHECK_IFF	sparsehash-2.0.2/src/simple_compat_test.cc	47;"	d	file:
CHECK_IFF	sparsehash-2.0.2/src/simple_test.cc	47;"	d	file:
CLEANFILES	sparsehash-2.0.2/Makefile	/^CLEANFILES = src\/sparsehash\/internal\/sparseconfig.h $(pkgconfig_DATA)$/;"	m
CLEARBITTAB	intbits.h	74;"	d
CLEAR_BITMAP	sparsehash-2.0.2/experimental/libchash.c	188;"	d	file:
COMPILE	sparsehash-2.0.2/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE_ASSERT_TYPES_EQ	sparsehash-2.0.2/src/type_traits_unittest.cc	76;"	d	file:
COMPLETELARGEFIRST	construct.cpp	692;"	d	file:
COMPLETELARGEFIRST	construct.cpp	808;"	d	file:
COMPLETELARGESECOND	construct.cpp	693;"	d	file:
COMPLETELARGESECOND	construct.cpp	809;"	d	file:
CONFIG_CLEAN_FILES	sparsehash-2.0.2/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	sparsehash-2.0.2/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	sparsehash-2.0.2/Makefile	/^CONFIG_HEADER = $(top_builddir)\/src\/config.h$/;"	m
CONSTRUCTSTREE	streemac.h	33;"	d
COPYMULTISEQ	multiseq.cpp	51;"	d	file:
COPY_KEY	sparsehash-2.0.2/experimental/libchash.c	150;"	d	file:
CPP	sparsehash-2.0.2/Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	sparsehash-2.0.2/Makefile	/^CPPFLAGS = $/;"	m
CREATEMEMORYMAP	spacedef.h	96;"	d
CREATEMEMORYMAPFORFILEDESC	spacedef.h	99;"	d
CTAGS	sparsehash-2.0.2/Makefile	/^CTAGS = ctags$/;"	m
CXX	sparsehash-2.0.2/Makefile	/^CXX = g++$/;"	m
CXXCOMPILE	sparsehash-2.0.2/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCPP	sparsehash-2.0.2/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXDEPMODE	sparsehash-2.0.2/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXFLAGS	sparsehash-2.0.2/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXLD	sparsehash-2.0.2/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLINK	sparsehash-2.0.2/Makefile	/^CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \\$/;"	m
CYGPATH_W	sparsehash-2.0.2/Makefile	/^CYGPATH_W = echo$/;"	m
Capital	sparsehash-2.0.2/src/hashtable_test.cc	/^struct Capital {$/;"	s	namespace:__anon4	file:
CharStarHashtables	sparsehash-2.0.2/src/hashtable_test.cc	/^typedef testing::TypeList6<CHARSTAR_HASHTABLES> CharStarHashtables;$/;"	t	namespace:__anon5	file:
ClearHashTable	sparsehash-2.0.2/experimental/libchash.c	/^void ClearHashTable(HashTable *ht)$/;"	f
Conclusions	eval2012/evaluation2012.tex	/^\\section{Conclusions}$/;"	s
Conclusions	papers/APBC2012/wga_APBC2012.tex	/^        \\paragraph*{Conclusions:} $/;"	P
Conclusions	papers/APBC2012/wga_APBC2012.tex	/^\\section*{Conclusions}$/;"	s
Conclusions	presentations/LLEIDA/wga_hpc.tex	/^\\section{Conclusions}$/;"	s
ConvertHelper	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^struct ConvertHelper {$/;"	s	namespace:internal
CurrentMemoryUsage	sparsehash-2.0.2/src/time_hash_map.cc	/^static size_t CurrentMemoryUsage() { return 0; }$/;"	f	file:
CurrentMemoryUsage	sparsehash-2.0.2/src/time_hash_map.cc	/^static size_t CurrentMemoryUsage() {$/;"	f	file:
D	sparsehash-2.0.2/src/type_traits_unittest.cc	/^  explicit D(int n) : n_(n) { }$/;"	f	class:D
D	sparsehash-2.0.2/src/type_traits_unittest.cc	/^class D {$/;"	c	file:
DATA	sparsehash-2.0.2/Makefile	/^DATA = $(dist_doc_DATA) $(pkgconfig_DATA)$/;"	m
DEB_BUILD_GNU_TYPE	sparsehash-2.0.2/packages/deb/rules	/^DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)$/;"	m
DEB_HOST_GNU_TYPE	sparsehash-2.0.2/packages/deb/rules	/^DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)$/;"	m
DECLAREARRAYSTRUCT	arraydef.h	41;"	d
DECLAREEXTRA	construct.cpp	680;"	d	file:
DECLAREEXTRA	construct.cpp	807;"	d	file:
DECLAREEXTRA	findmaxmat.cpp	26;"	d	file:
DECLARE_NESTED_POD	sparsehash-2.0.2/src/sparsehash/type_traits.h	337;"	d
DECLARE_POD	sparsehash-2.0.2/src/sparsehash/type_traits.h	336;"	d
DEFAULTCHUNK	maxmatopt.cpp	39;"	d	file:
DEFAULTMINUNIQUEMATCHLEN	maxmatopt.cpp	33;"	d	file:
DEFAULT_GROUP_SIZE	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^static const u_int16_t DEFAULT_GROUP_SIZE = 48;   \/\/ fits in 1.5 words$/;"	v
DEFAULT_INCLUDES	sparsehash-2.0.2/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)\/src$/;"	m
DEFS	sparsehash-2.0.2/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DELETED	sparsehash-2.0.2/experimental/libchash.h	162;"	d
DELETEMEMORYMAP	spacedef.h	102;"	d
DENSE_IS_EMPTY	sparsehash-2.0.2/experimental/libchash.c	673;"	d	file:
DENSE_SET_EMPTY	sparsehash-2.0.2/experimental/libchash.c	674;"	d	file:
DENSE_SET_OCCUPIED	sparsehash-2.0.2/experimental/libchash.c	675;"	d	file:
DEPDIR	sparsehash-2.0.2/Makefile	/^DEPDIR = .deps$/;"	m
DESCRIPTIONLENGTH	multidef.h	66;"	d
DESCRIPTIONPTR	multidef.h	63;"	d
DESCRIPTIONSTARTDESC	multidef.h	60;"	d
DFSstate	streetyp.h	/^struct DFSstate$/;"	s
DISTFILES	sparsehash-2.0.2/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTRIBUTE_H	distribute.h	19;"	d
DIST_ARCHIVES	sparsehash-2.0.2/Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz $(distdir).zip$/;"	m
DIST_COMMON	sparsehash-2.0.2/Makefile	/^DIST_COMMON = README $(am__configure_deps) $(dist_doc_DATA) \\$/;"	m
DIST_SOURCES	sparsehash-2.0.2/Makefile	/^DIST_SOURCES = $(hashtable_test_SOURCES) \\$/;"	m
DIV2	types.h	40;"	d
DIVBYSMALLINTS	streehuge.h	33;"	d
DIVWORDSIZE	intbits.h	47;"	d
DIV_NUM_ENTRIES	sparsehash-2.0.2/experimental/libchash.c	182;"	d	file:
DYNAMICSTRDUP	spacedef.h	93;"	d
Delete	sparsehash-2.0.2/experimental/libchash.c	/^static int Delete(HashTable *ht, ulong key, int fShrink, int fLastFindSet)$/;"	f	file:
DenseAllocate	sparsehash-2.0.2/experimental/libchash.c	/^static ulong DenseAllocate(DenseBin **pbin, ulong cBuckets)$/;"	f	file:
DenseBin	sparsehash-2.0.2/experimental/libchash.c	/^typedef struct DenseBin {       \/* needs to be a struct for C typing reasons *\/$/;"	s	file:
DenseBin	sparsehash-2.0.2/experimental/libchash.c	/^} DenseBin;$/;"	t	typeref:struct:DenseBin	file:
DenseBucket	sparsehash-2.0.2/experimental/libchash.c	660;"	d	file:
DenseClear	sparsehash-2.0.2/experimental/libchash.c	/^static void DenseClear(DenseBin *bin, ulong cBuckets)$/;"	f	file:
DenseFind	sparsehash-2.0.2/experimental/libchash.c	/^static DenseBucket *DenseFind(DenseBin *bin, ulong location)$/;"	f	file:
DenseFirstBucket	sparsehash-2.0.2/experimental/libchash.c	/^static DenseBucket *DenseFirstBucket(DenseIterator *iter,$/;"	f	file:
DenseFree	sparsehash-2.0.2/experimental/libchash.c	/^static DenseBin *DenseFree(DenseBin *bin, ulong cBuckets)$/;"	f	file:
DenseInsert	sparsehash-2.0.2/experimental/libchash.c	/^static DenseBucket *DenseInsert(DenseBin *bin, DenseBucket *bckInsert,$/;"	f	file:
DenseIntMap	sparsehash-2.0.2/src/hashtable_test.cc	/^  DenseIntMap() { this->set_empty_key(0); }$/;"	f	class:__anon6::DenseIntMap
DenseIntMap	sparsehash-2.0.2/src/hashtable_test.cc	/^template<typename T> class DenseIntMap : public dense_hash_map<int, T> {$/;"	c	namespace:__anon6	file:
DenseIsEmpty	sparsehash-2.0.2/experimental/libchash.c	/^static int DenseIsEmpty(DenseBin *bin, ulong location)$/;"	f	file:
DenseIterator	sparsehash-2.0.2/experimental/libchash.c	/^typedef struct DenseIterator {$/;"	s	file:
DenseIterator	sparsehash-2.0.2/experimental/libchash.c	/^} DenseIterator;$/;"	t	typeref:struct:DenseIterator	file:
DenseMemory	sparsehash-2.0.2/experimental/libchash.c	/^static ulong DenseMemory(ulong cBuckets, ulong cOccupied)$/;"	f	file:
DenseNextBucket	sparsehash-2.0.2/experimental/libchash.c	/^static DenseBucket *DenseNextBucket(DenseIterator *iter)$/;"	f	file:
DenseRead	sparsehash-2.0.2/experimental/libchash.c	/^static ulong DenseRead(FILE *fp, DenseBin **pbin)$/;"	f	file:
DenseStringSet	sparsehash-2.0.2/src/hashtable_test.cc	/^  DenseStringSet() { this->set_empty_key(string("")); }$/;"	f	class:__anon6::DenseStringSet
DenseStringSet	sparsehash-2.0.2/src/hashtable_test.cc	/^class DenseStringSet : public dense_hash_set<string, Hasher, Hasher> {$/;"	c	namespace:__anon6	file:
DenseWrite	sparsehash-2.0.2/experimental/libchash.c	/^static void DenseWrite(FILE *fp, DenseBin *bin, ulong cBuckets)$/;"	f	file:
Derived	sparsehash-2.0.2/src/type_traits_unittest.cc	/^class Derived : public Base {$/;"	c	namespace:__anon7	file:
Distributed and parallel search of maximal matches	eval2012/evaluation2012.tex	/^\\section{Distributed and parallel search of maximal matches}$/;"	s
Distributed suffix tree	eval2012/evaluation2012.tex	/^\\section{Distributed suffix tree}$/;"	s
Drawbacks	papers/APBC2012/wga_APBC2012.tex	/^\\subsection*{Drawbacks}$/;"	b
E	sparsehash-2.0.2/src/type_traits_unittest.cc	/^class E {$/;"	c	file:
ECHO_C	sparsehash-2.0.2/Makefile	/^ECHO_C = $/;"	m
ECHO_N	sparsehash-2.0.2/Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	sparsehash-2.0.2/Makefile	/^ECHO_T = $/;"	m
EGREP	sparsehash-2.0.2/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EMPTY	sparsehash-2.0.2/experimental/libchash.h	175;"	d
ENFORCE_POD	sparsehash-2.0.2/src/sparsehash/type_traits.h	340;"	d
ERROR0	errordef.h	60;"	d
ERROR1	errordef.h	63;"	d
ERROR2	errordef.h	66;"	d
ERROR3	errordef.h	69;"	d
ERROR4	errordef.h	72;"	d
ERROR5	errordef.h	75;"	d
ERRORDEF_H	errordef.h	12;"	d
ETAGS	sparsehash-2.0.2/Makefile	/^ETAGS = etags$/;"	m
EXCEPTFIRSTBIT	intbits.h	41;"	d
EXCEPTFIRSTTHREEBITS	intbits.h	45;"	d
EXCEPTFIRSTTWOBITS	intbits.h	43;"	d
EXEEXT	sparsehash-2.0.2/Makefile	/^EXEEXT = $/;"	m
EXPECT_DEATH	sparsehash-2.0.2/src/testutil.h	65;"	d
EXPECT_EQ	sparsehash-2.0.2/src/testutil.h	58;"	d
EXPECT_FALSE	sparsehash-2.0.2/src/testutil.h	57;"	d
EXPECT_GE	sparsehash-2.0.2/src/testutil.h	63;"	d
EXPECT_GT	sparsehash-2.0.2/src/testutil.h	61;"	d
EXPECT_LE	sparsehash-2.0.2/src/testutil.h	62;"	d
EXPECT_LT	sparsehash-2.0.2/src/testutil.h	60;"	d
EXPECT_NE	sparsehash-2.0.2/src/testutil.h	59;"	d
EXPECT_TRUE	sparsehash-2.0.2/src/testutil.h	50;"	d
EXTRA_DIST	sparsehash-2.0.2/Makefile	/^EXTRA_DIST = packages\/rpm.sh packages\/rpm\/rpm.spec packages\/deb.sh packages\/deb \\$/;"	m
EasyUseDenseHashMap	sparsehash-2.0.2/src/time_hash_map.cc	/^  EasyUseDenseHashMap() {$/;"	f	class:EasyUseDenseHashMap
EasyUseDenseHashMap	sparsehash-2.0.2/src/time_hash_map.cc	/^class EasyUseDenseHashMap : public dense_hash_map<K,V,H> {$/;"	c	file:
EasyUseDenseHashMap	sparsehash-2.0.2/src/time_hash_map.cc	/^class EasyUseDenseHashMap<K*, V, H> : public dense_hash_map<K*,V,H> {$/;"	c	file:
EasyUseHashMap	sparsehash-2.0.2/src/time_hash_map.cc	/^class EasyUseHashMap : public hash_map<K,V,H> {$/;"	c	file:
EasyUseHashMap	sparsehash-2.0.2/src/time_hash_map.cc	/^class EasyUseHashMap : public unordered_map<K,V,H> {$/;"	c	file:
EasyUseMap	sparsehash-2.0.2/src/time_hash_map.cc	/^class EasyUseMap : public map<K,V> {$/;"	c	file:
EasyUseSparseHashMap	sparsehash-2.0.2/src/time_hash_map.cc	/^  EasyUseSparseHashMap() { }$/;"	f	class:EasyUseSparseHashMap
EasyUseSparseHashMap	sparsehash-2.0.2/src/time_hash_map.cc	/^  EasyUseSparseHashMap() {$/;"	f	class:EasyUseSparseHashMap
EasyUseSparseHashMap	sparsehash-2.0.2/src/time_hash_map.cc	/^class EasyUseSparseHashMap : public sparse_hash_map<K,V,H> {$/;"	c	file:
EasyUseSparseHashMap	sparsehash-2.0.2/src/time_hash_map.cc	/^class EasyUseSparseHashMap<K*, V, H> : public sparse_hash_map<K*,V,H> {$/;"	c	file:
EntriesUpto	sparsehash-2.0.2/experimental/libchash.c	/^static HTOffset EntriesUpto(HTBitmapPart *bm, int i)$/;"	f	file:
F	sparsehash-2.0.2/src/type_traits_unittest.cc	/^  explicit F(int n) : n_(n) { }$/;"	f	class:F
F	sparsehash-2.0.2/src/type_traits_unittest.cc	/^class F {$/;"	c	file:
FASTASEPARATOR	multidef.h	52;"	d
FAST_DELETE	sparsehash-2.0.2/experimental/libchash.h	146;"	d
FINALPROGRESS	construct.cpp	714;"	d	file:
FINALPROGRESS	construct.cpp	812;"	d	file:
FIRSTBIT	intbits.h	29;"	d
FIRSTTWOBITS	intbits.h	39;"	d
FLAGS_test_16_bytes	sparsehash-2.0.2/src/time_hash_map.cc	/^static bool FLAGS_test_16_bytes = true;$/;"	v	file:
FLAGS_test_256_bytes	sparsehash-2.0.2/src/time_hash_map.cc	/^static bool FLAGS_test_256_bytes = true;$/;"	v	file:
FLAGS_test_4_bytes	sparsehash-2.0.2/src/time_hash_map.cc	/^static bool FLAGS_test_4_bytes = true;$/;"	v	file:
FLAGS_test_8_bytes	sparsehash-2.0.2/src/time_hash_map.cc	/^static bool FLAGS_test_8_bytes = true;$/;"	v	file:
FLAGS_test_dense_hash_map	sparsehash-2.0.2/src/time_hash_map.cc	/^static bool FLAGS_test_dense_hash_map = true;$/;"	v	file:
FLAGS_test_hash_map	sparsehash-2.0.2/src/time_hash_map.cc	/^static bool FLAGS_test_hash_map = true;$/;"	v	file:
FLAGS_test_map	sparsehash-2.0.2/src/time_hash_map.cc	/^static bool FLAGS_test_map = true;$/;"	v	file:
FLAGS_test_sparse_hash_map	sparsehash-2.0.2/src/time_hash_map.cc	/^static bool FLAGS_test_sparse_hash_map = true;$/;"	v	file:
FLAGS_test_tmpdir	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^string FLAGS_test_tmpdir = "\/tmp\/";$/;"	v
FOLLOWSUFFIXLINK	streeacc.h	157;"	d
FREEARRAY	arraydef.h	116;"	d
FREESPACE	spacedef.h	80;"	d
FREE_KEY	sparsehash-2.0.2/experimental/libchash.c	165;"	d	file:
Filter_Matches	findmumcand.cpp	/^static void  Filter_Matches (Match_t * A, int & N)$/;"	f	file:
Find	sparsehash-2.0.2/experimental/libchash.c	/^static HTItem *Find(HashTable *ht, ulong key, ulong *piEmpty)$/;"	f	file:
Finding MUMs in a suffix tree	papers/BBC2013/mum-multithread.tex	/^\\subsubsection{Finding MUMs in a suffix tree} $/;"	b
Findmatchfunction	procmaxmat.cpp	/^typedef Sint (*Findmatchfunction)(Uchar *,$/;"	t	file:
FreeHashTable	sparsehash-2.0.2/experimental/libchash.c	/^void FreeHashTable(HashTable *ht)$/;"	f
G	sparsehash-2.0.2/src/type_traits_unittest.cc	/^enum G {};$/;"	g	file:
GENERROR	errordef.h	45;"	d
GETBOTH	streeacc.h	42;"	d
GETBRANCHINDEX	streehuge.h	56;"	d
GETBROTHER	streehuge.h	63;"	d
GETCHAINEND	streehuge.h	85;"	d
GETCHILD	streehuge.h	62;"	d
GETDEPTH	streehuge.h	65;"	d
GETDEPTHAFTERHEADPOS	streeacc.h	108;"	d
GETDISTANCE	streehuge.h	64;"	d
GETHEADPOS	streehuge.h	66;"	d
GETHEADPOSAFTERDEPTH	streeacc.h	123;"	d
GETLEAFINDEX	streehuge.h	55;"	d
GETNEXTFREEINARRAY	arraydef.h	98;"	d
GETONLYDEPTH	streeacc.h	90;"	d
GETONLYHEADPOS	streeacc.h	72;"	d
GETSUFFIXLINK	streehuge.h	67;"	d
GOOGLE_NAMESPACE	sparsehash-2.0.2/src/config.h	5;"	d
GOOGLE_NAMESPACE	sparsehash-2.0.2/src/sparsehash/internal/sparseconfig.h	7;"	d
GOOGLE_NAMESPACE	sparsehash-2.0.2/src/windows/config.h	7;"	d
GOOGLE_NAMESPACE	sparsehash-2.0.2/src/windows/google/sparsehash/sparseconfig.h	7;"	d
GOOGLE_NAMESPACE	sparsehash-2.0.2/src/windows/sparsehash/internal/sparseconfig.h	7;"	d
GOOGLE_SPARSEHASH_WINDOWS_CONFIG_H_	sparsehash-2.0.2/src/windows/config.h	2;"	d
GREP	sparsehash-2.0.2/Makefile	/^GREP = \/bin\/grep$/;"	m
GZIP_ENV	sparsehash-2.0.2/Makefile	/^GZIP_ENV = --best$/;"	m
Good	arraydef.h	/^   unsigned int  Good : 1;$/;"	m	struct:Match_t
H	sparsehash-2.0.2/src/type_traits_unittest.cc	/^union H {};$/;"	u	file:
HASH_FUN_H	sparsehash-2.0.2/src/config.h	8;"	d
HASH_FUN_H	sparsehash-2.0.2/src/sparsehash/internal/sparseconfig.h	10;"	d
HASH_FUN_H	sparsehash-2.0.2/src/windows/config.h	10;"	d
HASH_FUN_H	sparsehash-2.0.2/src/windows/google/sparsehash/sparseconfig.h	10;"	d
HASH_FUN_H	sparsehash-2.0.2/src/windows/sparsehash/internal/sparseconfig.h	10;"	d
HASH_MAP_H	sparsehash-2.0.2/src/config.h	11;"	d
HASH_MAP_H	sparsehash-2.0.2/src/windows/config.h	13;"	d
HASH_NAMESPACE	sparsehash-2.0.2/src/config.h	14;"	d
HASH_NAMESPACE	sparsehash-2.0.2/src/sparsehash/internal/sparseconfig.h	13;"	d
HASH_NAMESPACE	sparsehash-2.0.2/src/windows/config.h	16;"	d
HASH_NAMESPACE	sparsehash-2.0.2/src/windows/google/sparsehash/sparseconfig.h	13;"	d
HASH_NAMESPACE	sparsehash-2.0.2/src/windows/sparsehash/internal/sparseconfig.h	13;"	d
HASH_SET_H	sparsehash-2.0.2/src/config.h	17;"	d
HASH_SET_H	sparsehash-2.0.2/src/windows/config.h	19;"	d
HAVE_GOOGLE_MALLOC_EXTENSION_H	sparsehash-2.0.2/src/windows/config.h	22;"	d
HAVE_HASH_MAP	sparsehash-2.0.2/src/config.h	23;"	d
HAVE_HASH_MAP	sparsehash-2.0.2/src/windows/config.h	25;"	d
HAVE_HASH_SET	sparsehash-2.0.2/src/config.h	26;"	d
HAVE_HASH_SET	sparsehash-2.0.2/src/windows/config.h	28;"	d
HAVE_INTTYPES_H	sparsehash-2.0.2/src/config.h	29;"	d
HAVE_INTTYPES_H	sparsehash-2.0.2/src/sparsehash/internal/sparseconfig.h	16;"	d
HAVE_INTTYPES_H	sparsehash-2.0.2/src/windows/config.h	31;"	d
HAVE_INTTYPES_H	sparsehash-2.0.2/src/windows/google/sparsehash/sparseconfig.h	16;"	d
HAVE_INTTYPES_H	sparsehash-2.0.2/src/windows/sparsehash/internal/sparseconfig.h	16;"	d
HAVE_LONG_LONG	sparsehash-2.0.2/src/config.h	32;"	d
HAVE_LONG_LONG	sparsehash-2.0.2/src/sparsehash/internal/sparseconfig.h	19;"	d
HAVE_LONG_LONG	sparsehash-2.0.2/src/windows/config.h	34;"	d
HAVE_LONG_LONG	sparsehash-2.0.2/src/windows/google/sparsehash/sparseconfig.h	19;"	d
HAVE_LONG_LONG	sparsehash-2.0.2/src/windows/sparsehash/internal/sparseconfig.h	19;"	d
HAVE_MEMCPY	sparsehash-2.0.2/src/config.h	35;"	d
HAVE_MEMCPY	sparsehash-2.0.2/src/sparsehash/internal/sparseconfig.h	22;"	d
HAVE_MEMCPY	sparsehash-2.0.2/src/windows/config.h	37;"	d
HAVE_MEMCPY	sparsehash-2.0.2/src/windows/google/sparsehash/sparseconfig.h	22;"	d
HAVE_MEMCPY	sparsehash-2.0.2/src/windows/sparsehash/internal/sparseconfig.h	22;"	d
HAVE_MEMMOVE	sparsehash-2.0.2/src/config.h	38;"	d
HAVE_MEMMOVE	sparsehash-2.0.2/src/windows/config.h	40;"	d
HAVE_MEMORY_H	sparsehash-2.0.2/src/config.h	41;"	d
HAVE_MEMORY_H	sparsehash-2.0.2/src/windows/config.h	43;"	d
HAVE_NAMESPACES	sparsehash-2.0.2/src/config.h	44;"	d
HAVE_NAMESPACES	sparsehash-2.0.2/src/windows/config.h	46;"	d
HAVE_PTHREAD	sparsehash-2.0.2/src/windows/config.h	49;"	d
HAVE_STDINT_H	sparsehash-2.0.2/src/config.h	50;"	d
HAVE_STDINT_H	sparsehash-2.0.2/src/sparsehash/internal/sparseconfig.h	25;"	d
HAVE_STDINT_H	sparsehash-2.0.2/src/windows/config.h	52;"	d
HAVE_STDINT_H	sparsehash-2.0.2/src/windows/google/sparsehash/sparseconfig.h	25;"	d
HAVE_STDINT_H	sparsehash-2.0.2/src/windows/sparsehash/internal/sparseconfig.h	25;"	d
HAVE_STDLIB_H	sparsehash-2.0.2/src/config.h	53;"	d
HAVE_STDLIB_H	sparsehash-2.0.2/src/windows/config.h	55;"	d
HAVE_STRINGS_H	sparsehash-2.0.2/src/config.h	56;"	d
HAVE_STRINGS_H	sparsehash-2.0.2/src/windows/config.h	58;"	d
HAVE_STRING_H	sparsehash-2.0.2/src/config.h	59;"	d
HAVE_STRING_H	sparsehash-2.0.2/src/windows/config.h	61;"	d
HAVE_SYS_RESOURCE_H	sparsehash-2.0.2/src/config.h	62;"	d
HAVE_SYS_RESOURCE_H	sparsehash-2.0.2/src/windows/config.h	64;"	d
HAVE_SYS_STAT_H	sparsehash-2.0.2/src/config.h	65;"	d
HAVE_SYS_STAT_H	sparsehash-2.0.2/src/windows/config.h	67;"	d
HAVE_SYS_TIME_H	sparsehash-2.0.2/src/config.h	68;"	d
HAVE_SYS_TIME_H	sparsehash-2.0.2/src/windows/config.h	70;"	d
HAVE_SYS_TYPES_H	sparsehash-2.0.2/src/config.h	71;"	d
HAVE_SYS_TYPES_H	sparsehash-2.0.2/src/sparsehash/internal/sparseconfig.h	28;"	d
HAVE_SYS_TYPES_H	sparsehash-2.0.2/src/windows/config.h	73;"	d
HAVE_SYS_TYPES_H	sparsehash-2.0.2/src/windows/google/sparsehash/sparseconfig.h	28;"	d
HAVE_SYS_TYPES_H	sparsehash-2.0.2/src/windows/sparsehash/internal/sparseconfig.h	28;"	d
HAVE_SYS_UTSNAME_H	sparsehash-2.0.2/src/config.h	74;"	d
HAVE_SYS_UTSNAME_H	sparsehash-2.0.2/src/windows/config.h	76;"	d
HAVE_UINT16_T	sparsehash-2.0.2/src/config.h	77;"	d
HAVE_UINT16_T	sparsehash-2.0.2/src/sparsehash/internal/sparseconfig.h	31;"	d
HAVE_UINT16_T	sparsehash-2.0.2/src/windows/config.h	79;"	d
HAVE_UINT16_T	sparsehash-2.0.2/src/windows/google/sparsehash/sparseconfig.h	31;"	d
HAVE_UINT16_T	sparsehash-2.0.2/src/windows/sparsehash/internal/sparseconfig.h	31;"	d
HAVE_UNISTD_H	sparsehash-2.0.2/src/config.h	80;"	d
HAVE_UNISTD_H	sparsehash-2.0.2/src/windows/config.h	82;"	d
HAVE_UNORDERED_MAP	sparsehash-2.0.2/src/config.h	83;"	d
HAVE_UNORDERED_MAP	sparsehash-2.0.2/src/windows/config.h	85;"	d
HAVE_U_INT16_T	sparsehash-2.0.2/src/config.h	86;"	d
HAVE_U_INT16_T	sparsehash-2.0.2/src/sparsehash/internal/sparseconfig.h	34;"	d
HAVE_U_INT16_T	sparsehash-2.0.2/src/windows/config.h	88;"	d
HAVE_U_INT16_T	sparsehash-2.0.2/src/windows/google/sparsehash/sparseconfig.h	34;"	d
HAVE_U_INT16_T	sparsehash-2.0.2/src/windows/sparsehash/internal/sparseconfig.h	34;"	d
HAVE_WINDOWS_H	sparsehash-2.0.2/src/windows/config.h	140;"	d
HAVE___UINT16	sparsehash-2.0.2/src/windows/config.h	91;"	d
HAVE___UINT16	sparsehash-2.0.2/src/windows/google/sparsehash/sparseconfig.h	37;"	d
HAVE___UINT16	sparsehash-2.0.2/src/windows/sparsehash/internal/sparseconfig.h	37;"	d
HEADERS	sparsehash-2.0.2/Makefile	/^HEADERS = $(googleinclude_HEADERS) $(googleinternalinclude_HEADERS) \\$/;"	m
HIGHESTVISIBLE	visible.h	34;"	d
HTBitmap	sparsehash-2.0.2/experimental/libchash.c	/^typedef HTBitmapPart   HTBitmap[1<<LOG_BM_WORDS];$/;"	t	file:
HTBitmapPart	sparsehash-2.0.2/experimental/libchash.c	/^typedef ulong          HTBitmapPart;  \/* this has to be unsigned, for >> *\/$/;"	t	file:
HTItem	sparsehash-2.0.2/experimental/libchash.h	/^} HTItem;$/;"	t	typeref:struct:__anon2
HTOffset	sparsehash-2.0.2/experimental/libchash.c	/^typedef ulong          HTOffset; \/* something big enough to hold offsets *\/$/;"	t	file:
HTSetupKeyTrunc	sparsehash-2.0.2/experimental/libchash.c	/^static void HTSetupKeyTrunc(void)$/;"	f	file:
HT_DEFAULT_STARTING_BUCKETS	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  static const size_type HT_DEFAULT_STARTING_BUCKETS = 32;$/;"	m	class:dense_hashtable
HT_DEFAULT_STARTING_BUCKETS	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  static const size_type HT_DEFAULT_STARTING_BUCKETS = 32;$/;"	m	class:sparse_hashtable
HT_EMPTY_PCT	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  static const int HT_EMPTY_PCT;      \/\/ defined at the bottom of this file$/;"	m	class:dense_hashtable
HT_EMPTY_PCT	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^const int dense_hashtable<V,K,HF,ExK,SetK,EqK,A>::HT_EMPTY_PCT$/;"	m	class:dense_hashtable
HT_EMPTY_PCT	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  static const int HT_EMPTY_PCT; \/\/ = 0.4 * HT_OCCUPANCY_PCT;$/;"	m	class:sparse_hashtable
HT_EMPTY_PCT	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^const int sparse_hashtable<V,K,HF,ExK,SetK,EqK,A>::HT_EMPTY_PCT$/;"	m	class:sparse_hashtable
HT_MIN_BUCKETS	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  static const size_type HT_MIN_BUCKETS = 4;$/;"	m	class:dense_hashtable
HT_MIN_BUCKETS	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  static const size_type HT_MIN_BUCKETS = 4;$/;"	m	class:sparse_hashtable
HT_OCCUPANCY_PCT	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  static const int HT_OCCUPANCY_PCT;  \/\/ defined at the bottom of this file$/;"	m	class:dense_hashtable
HT_OCCUPANCY_PCT	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^const int dense_hashtable<V,K,HF,ExK,SetK,EqK,A>::HT_OCCUPANCY_PCT = 50;$/;"	m	class:dense_hashtable
HT_OCCUPANCY_PCT	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  static const int HT_OCCUPANCY_PCT; \/\/ = 80 (out of 100);$/;"	m	class:sparse_hashtable
HT_OCCUPANCY_PCT	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^const int sparse_hashtable<V,K,HF,ExK,SetK,EqK,A>::HT_OCCUPANCY_PCT = 80;$/;"	m	class:sparse_hashtable
HTcopy	sparsehash-2.0.2/experimental/libchash.c	/^unsigned long HTcopy(char *ul)$/;"	f
HTfree	sparsehash-2.0.2/experimental/libchash.c	/^static void HTfree(void *ptr, unsigned long size)$/;"	f	file:
HTscalloc	sparsehash-2.0.2/experimental/libchash.c	/^static void *HTscalloc(unsigned long size)$/;"	f	file:
HTsmalloc	sparsehash-2.0.2/experimental/libchash.c	/^static void *HTsmalloc(unsigned long size)$/;"	f	file:
HTsrealloc	sparsehash-2.0.2/experimental/libchash.c	/^static void *HTsrealloc(void *ptr, unsigned long new_size, long delta)$/;"	f	file:
Hash	sparsehash-2.0.2/experimental/libchash.c	/^static ulong Hash(HashTable *ht, char *key, ulong cBuckets)$/;"	f	file:
Hash	sparsehash-2.0.2/src/time_hash_map.cc	/^  size_t Hash() const {$/;"	f	class:HashObject
HashDelete	sparsehash-2.0.2/experimental/libchash.c	/^int HashDelete(HashTable *ht, ulong key)$/;"	f
HashDeleteLast	sparsehash-2.0.2/experimental/libchash.c	/^int HashDeleteLast(HashTable *ht)$/;"	f
HashDoLoad	sparsehash-2.0.2/experimental/libchash.c	/^static HashTable *HashDoLoad(FILE *fp, char * (*dataRead)(FILE *, int), $/;"	f	file:
HashFind	sparsehash-2.0.2/experimental/libchash.c	/^HTItem *HashFind(HashTable *ht, ulong key)$/;"	f
HashFindLast	sparsehash-2.0.2/experimental/libchash.c	/^HTItem *HashFindLast(HashTable *ht)$/;"	f
HashFindOrInsert	sparsehash-2.0.2/experimental/libchash.c	/^HTItem *HashFindOrInsert(HashTable *ht, ulong key, ulong dataInsert)$/;"	f
HashFindOrInsertItem	sparsehash-2.0.2/experimental/libchash.c	/^HTItem *HashFindOrInsertItem(HashTable *ht, HTItem *pItem)$/;"	f
HashFirstBucket	sparsehash-2.0.2/experimental/libchash.c	/^HTItem *HashFirstBucket(HashTable *ht)$/;"	f
HashFn	sparsehash-2.0.2/src/time_hash_map.cc	/^class HashFn {$/;"	c	file:
HashInsert	sparsehash-2.0.2/experimental/libchash.c	/^HTItem *HashInsert(HashTable *ht, ulong key, ulong data)$/;"	f
HashInsertItem	sparsehash-2.0.2/experimental/libchash.c	/^HTItem *HashInsertItem(HashTable *ht, HTItem *pItem)$/;"	f
HashKeySize	sparsehash-2.0.2/experimental/libchash.h	215;"	d
HashLoad	sparsehash-2.0.2/experimental/libchash.c	/^HashTable *HashLoad(FILE *fp, char * (*dataRead)(FILE *, int))$/;"	f
HashLoadKeys	sparsehash-2.0.2/experimental/libchash.c	/^HashTable *HashLoadKeys(FILE *fp, char * (*dataRead)(FILE *, int))$/;"	f
HashNextBucket	sparsehash-2.0.2/experimental/libchash.c	/^HTItem *HashNextBucket(HashTable *ht)$/;"	f
HashObject	sparsehash-2.0.2/src/time_hash_map.cc	/^  HashObject() {}$/;"	f	class:HashObject
HashObject	sparsehash-2.0.2/src/time_hash_map.cc	/^  HashObject(const HashObject& that) {$/;"	f	class:HashObject
HashObject	sparsehash-2.0.2/src/time_hash_map.cc	/^  HashObject(int i) : i_(i) {$/;"	f	class:HashObject
HashObject	sparsehash-2.0.2/src/time_hash_map.cc	/^  HashObject(int i) : i_(i) {}$/;"	f	class:HashObject
HashObject	sparsehash-2.0.2/src/time_hash_map.cc	/^template<> class HashObject<sizeof(int), sizeof(int)> {$/;"	c	file:
HashObject	sparsehash-2.0.2/src/time_hash_map.cc	/^template<int Size, int Hashsize> class HashObject {$/;"	c	file:
HashSave	sparsehash-2.0.2/experimental/libchash.c	/^void HashSave(FILE *fp, HashTable *ht, int (*dataWrite)(FILE *, char *))$/;"	f
HashSetDeltaGoalSize	sparsehash-2.0.2/experimental/libchash.c	/^int HashSetDeltaGoalSize(HashTable *ht, int delta)$/;"	f
HashSize	sparsehash-2.0.2/experimental/libchash.h	216;"	d
HashTable	sparsehash-2.0.2/experimental/libchash.h	/^typedef struct HashTable {$/;"	s
HashTable	sparsehash-2.0.2/experimental/libchash.h	/^} HashTable;$/;"	t	typeref:struct:HashTable
Hasher	sparsehash-2.0.2/src/hashtable_test.cc	/^  explicit Hasher(int i=0) : id_(i), num_hashes_(0), num_compares_(0) { }$/;"	f	struct:__anon4::Hasher
Hasher	sparsehash-2.0.2/src/hashtable_test.cc	/^struct Hasher {$/;"	s	namespace:__anon4	file:
HashtableAllTest	sparsehash-2.0.2/src/hashtable_test.cc	/^template <typename HashtableType> class HashtableAllTest$/;"	c	namespace:__anon5	file:
HashtableCharStarTest	sparsehash-2.0.2/src/hashtable_test.cc	/^template <typename HashtableType> class HashtableCharStarTest$/;"	c	namespace:__anon5	file:
HashtableIntTest	sparsehash-2.0.2/src/hashtable_test.cc	/^template <typename HashtableType> class HashtableIntTest$/;"	c	namespace:__anon5	file:
HashtableInterface_DenseHashMap	sparsehash-2.0.2/src/hash_test_interface.h	/^  HashtableInterface_DenseHashMap($/;"	f	class:HashtableInterface_DenseHashMap
HashtableInterface_DenseHashMap	sparsehash-2.0.2/src/hash_test_interface.h	/^  explicit HashtableInterface_DenseHashMap($/;"	f	class:HashtableInterface_DenseHashMap
HashtableInterface_DenseHashMap	sparsehash-2.0.2/src/hash_test_interface.h	/^class HashtableInterface_DenseHashMap$/;"	c
HashtableInterface_DenseHashSet	sparsehash-2.0.2/src/hash_test_interface.h	/^  HashtableInterface_DenseHashSet($/;"	f	class:HashtableInterface_DenseHashSet
HashtableInterface_DenseHashSet	sparsehash-2.0.2/src/hash_test_interface.h	/^  explicit HashtableInterface_DenseHashSet($/;"	f	class:HashtableInterface_DenseHashSet
HashtableInterface_DenseHashSet	sparsehash-2.0.2/src/hash_test_interface.h	/^class HashtableInterface_DenseHashSet$/;"	c
HashtableInterface_DenseHashtable	sparsehash-2.0.2/src/hash_test_interface.h	/^  HashtableInterface_DenseHashtable($/;"	f	class:HashtableInterface_DenseHashtable
HashtableInterface_DenseHashtable	sparsehash-2.0.2/src/hash_test_interface.h	/^  explicit HashtableInterface_DenseHashtable($/;"	f	class:HashtableInterface_DenseHashtable
HashtableInterface_DenseHashtable	sparsehash-2.0.2/src/hash_test_interface.h	/^class HashtableInterface_DenseHashtable$/;"	c
HashtableInterface_SparseHashMap	sparsehash-2.0.2/src/hash_test_interface.h	/^  HashtableInterface_SparseHashMap($/;"	f	class:HashtableInterface_SparseHashMap
HashtableInterface_SparseHashMap	sparsehash-2.0.2/src/hash_test_interface.h	/^  explicit HashtableInterface_SparseHashMap($/;"	f	class:HashtableInterface_SparseHashMap
HashtableInterface_SparseHashMap	sparsehash-2.0.2/src/hash_test_interface.h	/^class HashtableInterface_SparseHashMap$/;"	c
HashtableInterface_SparseHashSet	sparsehash-2.0.2/src/hash_test_interface.h	/^  HashtableInterface_SparseHashSet($/;"	f	class:HashtableInterface_SparseHashSet
HashtableInterface_SparseHashSet	sparsehash-2.0.2/src/hash_test_interface.h	/^  explicit HashtableInterface_SparseHashSet($/;"	f	class:HashtableInterface_SparseHashSet
HashtableInterface_SparseHashSet	sparsehash-2.0.2/src/hash_test_interface.h	/^class HashtableInterface_SparseHashSet$/;"	c
HashtableInterface_SparseHashtable	sparsehash-2.0.2/src/hash_test_interface.h	/^  HashtableInterface_SparseHashtable($/;"	f	class:HashtableInterface_SparseHashtable
HashtableInterface_SparseHashtable	sparsehash-2.0.2/src/hash_test_interface.h	/^  explicit HashtableInterface_SparseHashtable($/;"	f	class:HashtableInterface_SparseHashtable
HashtableInterface_SparseHashtable	sparsehash-2.0.2/src/hash_test_interface.h	/^class HashtableInterface_SparseHashtable$/;"	c
HashtableStringTest	sparsehash-2.0.2/src/hashtable_test.cc	/^template <typename HashtableType> class HashtableStringTest$/;"	c	namespace:__anon5	file:
HashtableTest	sparsehash-2.0.2/src/hashtable_test.cc	/^  HashtableTest() : ht_() { }$/;"	f	class:__anon4::HashtableTest
HashtableTest	sparsehash-2.0.2/src/hashtable_test.cc	/^class HashtableTest : public ::testing::Test {$/;"	c	namespace:__anon4	file:
I	sparsehash-2.0.2/src/type_traits_unittest.cc	/^class I {$/;"	c	file:
ILLEGAL_BUCKET	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  dense_hashtable<V,K,HF,ExK,SetK,EqK,A>::ILLEGAL_BUCKET;$/;"	m	class:dense_hashtable
ILLEGAL_BUCKET	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  static const size_type ILLEGAL_BUCKET = size_type(-1);$/;"	m	class:dense_hashtable
ILLEGAL_BUCKET	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  sparse_hashtable<V,K,HF,ExK,SetK,EqK,A>::ILLEGAL_BUCKET;$/;"	m	class:sparse_hashtable
ILLEGAL_BUCKET	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  static const size_type ILLEGAL_BUCKET = size_type(-1);$/;"	m	class:sparse_hashtable
INCLUDE	Makefile	/^INCLUDE = -I\/soft\/papi-5.0.1\/include\/ -I$(OMPP)\/include\/$/;"	m
INITARRAY	arraydef.h	52;"	d
INITBITTAB	intbits.h	59;"	d
INSTALL	sparsehash-2.0.2/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	sparsehash-2.0.2/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	sparsehash-2.0.2/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	sparsehash-2.0.2/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	sparsehash-2.0.2/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	sparsehash-2.0.2/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INTBITS_H	intbits.h	12;"	d
INTWORDSIZE	intbits.h	27;"	d
INT_HASHTABLES	sparsehash-2.0.2/src/hashtable_test.cc	441;"	d	file:
INVISIBLE	visible.h	40;"	d
INVISIBLECHAR	visible.h	54;"	d
ISBITSET	intbits.h	31;"	d
ISBRANCHUSED	streedbg.cpp	22;"	d	file:
ISIBITSET	intbits.h	103;"	d
ISLARGE	streehuge.h	50;"	d
ISLEAF	streehuge.h	49;"	d
ISLEAFUSED	streedbg.cpp	19;"	d	file:
ISNOTSPECIAL	chardef.h	26;"	d
ISSET	optdesc.h	55;"	d
ISSPECIAL	chardef.h	25;"	d
IS_BCK_DELETED	sparsehash-2.0.2/experimental/libchash.h	163;"	d
IS_BCK_DELETED	sparsehash-2.0.2/experimental/libchash.h	167;"	d
ITHBIT	intbits.h	33;"	d
Identity	sparsehash-2.0.2/src/hashtable_test.cc	/^struct Identity {   \/\/ lame, I know, but an important case to test.$/;"	s	namespace:__anon4	file:
Insert	sparsehash-2.0.2/experimental/libchash.c	/^static HTItem *Insert(HashTable *ht, ulong key, ulong data, int fOverwrite)$/;"	f	file:
IntHashtables	sparsehash-2.0.2/src/hashtable_test.cc	/^typedef testing::TypeList6<INT_HASHTABLES> IntHashtables;$/;"	t	namespace:__anon5	file:
Introduction	papers/BBC2013/procs-sample.tex	/^\\section{Introduction}$/;"	s
J	sparsehash-2.0.2/src/type_traits_unittest.cc	/^class J {$/;"	c	file:
JUMP	sparsehash-2.0.2/experimental/libchash.h	140;"	d
JUMP_	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	119;"	d
JUMP_	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	1295;"	d
JUMP_	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	1227;"	d
JUMP_	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	123;"	d
KEY_CMP	sparsehash-2.0.2/experimental/libchash.c	143;"	d	file:
KEY_PTR	sparsehash-2.0.2/experimental/libchash.h	220;"	d
KEY_TRUNC	sparsehash-2.0.2/experimental/libchash.c	133;"	d	file:
KeyInfo	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^    KeyInfo(const ExtractKey& ek, const SetKey& sk, const EqualKey& eq)$/;"	f	class:dense_hashtable::KeyInfo
KeyInfo	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  class KeyInfo : public ExtractKey, public SetKey, public EqualKey {$/;"	c	class:dense_hashtable
KeyInfo	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^    KeyInfo(const ExtractKey& ek, const SetKey& sk, const EqualKey& eq)$/;"	f	class:sparse_hashtable::KeyInfo
KeyInfo	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  class KeyInfo : public ExtractKey, public SetKey, public EqualKey {$/;"	c	class:sparse_hashtable
LARGEINTS	streehuge.h	31;"	d
LARGESTCHARINDEX	streehuge.h	96;"	d
LARGESTCHARINDEX	streehuge.h	98;"	d
LDFLAGS	Makefile	/^LDFLAGS	= -L\/soft\/papi-5.0.1\/lib -L$(OMPP)\/lib\/$/;"	m
LDFLAGS	sparsehash-2.0.2/Makefile	/^LDFLAGS = $/;"	m
LEADLEVEL	streeacc.h	201;"	d
LEAFADDR2NUM	streemac.h	61;"	d
LEAFBIT	streehuge.h	35;"	d
LEAFBROTHERVAL	streehuge.h	82;"	d
LEASTSHOWPROGRESS	construct.cpp	677;"	d	file:
LEASTSHOWPROGRESS	findmaxmat.cpp	23;"	d	file:
LEFT	sparsehash-2.0.2/src/sparsetable_unittest.cc	63;"	d	file:
LIBOBJS	sparsehash-2.0.2/Makefile	/^LIBOBJS = $/;"	m
LIBS	Makefile	/^LIBS    = -lstdc++ -lpapi$/;"	m
LIBS	sparsehash-2.0.2/Makefile	/^LIBS = $/;"	m
LINK	sparsehash-2.0.2/Makefile	/^LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@$/;"	m
LOAD_AND_RETURN	sparsehash-2.0.2/experimental/libchash.c	206;"	d	file:
LOGWORDSIZE	types.h	35;"	d
LOG_BM_WORDS	sparsehash-2.0.2/experimental/libchash.h	135;"	d
LOG_LOW_BIN_SIZE	sparsehash-2.0.2/experimental/libchash.c	377;"	d	file:
LOG_WORD_SIZE	sparsehash-2.0.2/experimental/libchash.h	126;"	d
LOG_WORD_SIZE	sparsehash-2.0.2/experimental/libchash.h	128;"	d
LOWESTVISIBLE	visible.h	28;"	d
LTLIBOBJS	sparsehash-2.0.2/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBRARIES	sparsehash-2.0.2/Makefile	/^LTLIBRARIES = $(lib_LTLIBRARIES)$/;"	m
Leafinfo	streetyp.h	/^typedef Reference Leafinfo;  \/\/ \\Typedef{Leafinfo}$/;"	t
Len	arraydef.h	/^   long int Len = -1;$/;"	m	struct:Match_t
ListType	types.h	/^struct ListType$/;"	s
Location	streetyp.h	/^struct Location$/;"	s
Lref	streetyp.h	/^typedef Uint * Lref;    \/\/ \\Typedef{Lref}$/;"	t
Lref	types.h	/^typedef Uint * Lref;  $/;"	t
MAGIC_KEY	sparsehash-2.0.2/experimental/libchash.h	122;"	d
MAGIC_NUMBER	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  static const MagicNumberType MAGIC_NUMBER = 0x13578642;$/;"	m	class:dense_hashtable
MAKEBRANCHADDR	streehuge.h	86;"	d
MAKEINFO	sparsehash-2.0.2/Makefile	/^MAKEINFO = ${SHELL} \/home\/jcgarcia\/Toci\/sparsehash-2.0.2\/missing --run makeinfo$/;"	m
MAKELARGE	streehuge.h	52;"	d
MAKELARGELEAF	streehuge.h	53;"	d
MAKELEAF	streehuge.h	51;"	d
MAX	minmax.h	22;"	d
MAXDISTANCE	streehuge.h	39;"	d
MAXERRORMSG	seterror.cpp	27;"	d	file:
MAXINDEX	streehuge.h	38;"	d
MAXMAPPEDFILES	mapfile.cpp	25;"	d	file:
MAXMATDEF_H	maxmatdef.h	12;"	d
MAXNUMOFQUERYFILES	maxmatdef.h	47;"	d
MAXTEXTLEN	streehuge.h	60;"	d
MIN	minmax.h	26;"	d
MINEXTRA	construct.cpp	72;"	d	file:
MINMAX_H	minmax.h	12;"	d
MIN_HASH_SIZE	sparsehash-2.0.2/experimental/libchash.h	155;"	d
MKDIR_P	sparsehash-2.0.2/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MMREPLACEMENTCHARQUERY	maxmatdef.h	41;"	d
MMREPLACEMENTCHARSUBJECT	maxmatdef.h	40;"	d
MMcallinfo	maxmatdef.h	/^struct MMcallinfo$/;"	s
MOD2	sparsehash-2.0.2/experimental/libchash.c	181;"	d	file:
MODBIT	sparsehash-2.0.2/experimental/libchash.c	184;"	d	file:
MODWORDSIZE	intbits.h	49;"	d
MOD_NUM_ENTRIES	sparsehash-2.0.2/experimental/libchash.c	183;"	d	file:
MULTBYSMALLINTS	streehuge.h	32;"	d
MULTIDEF_H	multidef.h	12;"	d
MULWORDSIZE	intbits.h	51;"	d
MUMCAND_H	mumcand.h	12;"	d
MUMcandidate	mumcand.h	/^DECLAREARRAYSTRUCT(MUMcandidate);$/;"	v
MUMcandidate	mumcand.h	/^struct MUMcandidate$/;"	s
MUMmer	papers/APBC2012/wga_APBC2012.tex	/^\\subsection{MUMmer}$/;"	b
MagicNumberType	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef unsigned long MagicNumberType;$/;"	t	class:dense_hashtable
Match_t	arraydef.h	/^struct  Match_t$/;"	s
Matchprocessinfo	maxmatdef.h	/^struct Matchprocessinfo$/;"	s
Maxmatchinfo	findmaxmat.cpp	/^struct Maxmatchinfo$/;"	s	file:
Memmove	sparsehash-2.0.2/src/hashtable_test.cc	/^  Memmove(): i(0) {}$/;"	f	struct:__anon5::Memmove
Memmove	sparsehash-2.0.2/src/hashtable_test.cc	/^  Memmove(const Memmove& that) { this->i = that.i; num_copies++; }$/;"	f	struct:__anon5::Memmove
Memmove	sparsehash-2.0.2/src/hashtable_test.cc	/^  explicit Memmove(int ival): i(ival) {}$/;"	f	struct:__anon5::Memmove
Memmove	sparsehash-2.0.2/src/hashtable_test.cc	/^struct Memmove {$/;"	s	namespace:__anon5	file:
Methods	papers/APBC2012/wga_APBC2012.tex	/^\\section*{Methods}$/;"	s
MoveDontCopy	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  enum MoveDontCopyT {MoveDontCopy, MoveDontGrow};$/;"	e	enum:sparse_hashtable::MoveDontCopyT
MoveDontCopyT	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  enum MoveDontCopyT {MoveDontCopy, MoveDontGrow};$/;"	g	class:sparse_hashtable
MoveDontGrow	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  enum MoveDontCopyT {MoveDontCopy, MoveDontGrow};$/;"	e	enum:sparse_hashtable::MoveDontCopyT
Multiseq	multidef.h	/^struct Multiseq$/;"	s
MungedHash	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^    static size_t MungedHash(size_t hash) {$/;"	f	class:sparsehash_internal::sh_hashtable_settings::hash_munger
NEWLINE	multiseq.cpp	39;"	d	file:
NEXTNODE	streeacc.h	139;"	d
NILBIT	streehuge.h	37;"	d
NILPTR	streehuge.h	58;"	d
NORMAL_INSTALL	sparsehash-2.0.2/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	sparsehash-2.0.2/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NOTSUPPOSED	errordef.h	110;"	d
NOTSUPPOSEDTOBENULL	errordef.h	120;"	d
NULL_TERMINATED	sparsehash-2.0.2/experimental/libchash.c	139;"	d	file:
NUMOFCALLS	construct.cpp	678;"	d	file:
NUMOFCALLS	findmaxmat.cpp	24;"	d	file:
NUMOFOPTIONS	maxmatopt.cpp	/^  NUMOFOPTIONS$/;"	e	enum:__anon1	file:
Negation	sparsehash-2.0.2/src/hashtable_test.cc	/^struct Negation {$/;"	s	namespace:__anon4	file:
NextPow2	sparsehash-2.0.2/experimental/libchash.c	/^static ulong NextPow2(ulong x)    \/* returns next power of 2 > x, or 2^31 *\/$/;"	f	file:
NoMemmove	sparsehash-2.0.2/src/hashtable_test.cc	/^  NoMemmove(): i(0) {}$/;"	f	struct:__anon5::NoMemmove
NoMemmove	sparsehash-2.0.2/src/hashtable_test.cc	/^  NoMemmove(const NoMemmove& that) { this->i = that.i; num_copies++; }$/;"	f	struct:__anon5::NoMemmove
NoMemmove	sparsehash-2.0.2/src/hashtable_test.cc	/^  explicit NoMemmove(int ival): i(ival) {}$/;"	f	struct:__anon5::NoMemmove
NoMemmove	sparsehash-2.0.2/src/hashtable_test.cc	/^struct NoMemmove {$/;"	s	namespace:__anon5	file:
Nodeinfo	findmaxmat.cpp	/^DECLAREARRAYSTRUCT(Nodeinfo);$/;"	v
Nodeinfo	findmaxmat.cpp	/^struct Nodeinfo$/;"	s	file:
NopointerSerializer	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef typename ht::NopointerSerializer NopointerSerializer;$/;"	t	class:HashtableInterface_DenseHashMap
NopointerSerializer	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef typename ht::NopointerSerializer NopointerSerializer;$/;"	t	class:HashtableInterface_DenseHashSet
NopointerSerializer	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef typename ht::NopointerSerializer NopointerSerializer;$/;"	t	class:HashtableInterface_DenseHashtable
NopointerSerializer	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef typename ht::NopointerSerializer NopointerSerializer;$/;"	t	class:HashtableInterface_SparseHashMap
NopointerSerializer	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef typename ht::NopointerSerializer NopointerSerializer;$/;"	t	class:HashtableInterface_SparseHashSet
NopointerSerializer	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef typename ht::NopointerSerializer NopointerSerializer;$/;"	t	class:HashtableInterface_SparseHashtable
NopointerSerializer	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef sparsehash_internal::pod_serializer<value_type> NopointerSerializer;$/;"	t	class:dense_hashtable
NopointerSerializer	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef sparsehash_internal::pod_serializer<value_type> NopointerSerializer;$/;"	t	class:sparse_hashtable
NumCopiesSinceLastCall	sparsehash-2.0.2/src/time_hash_map.cc	/^int NumCopiesSinceLastCall() {$/;"	f
NumHashesSinceLastCall	sparsehash-2.0.2/src/time_hash_map.cc	/^int NumHashesSinceLastCall() {$/;"	f
OBJEXT	sparsehash-2.0.2/Makefile	/^OBJEXT = o$/;"	m
OCCUPANCY_PCT	sparsehash-2.0.2/experimental/libchash.h	152;"	d
OMPP	Makefile	/^OMPP=$(HOME)\/ompp$/;"	m
OPTCHUNKS	maxmatopt.cpp	/^  OPTCHUNKS,$/;"	e	enum:__anon1	file:
OPTCOMPUTEBOTHDIRECTIONS	maxmatopt.cpp	/^  OPTCOMPUTEBOTHDIRECTIONS,$/;"	e	enum:__anon1	file:
OPTDESC_H	optdesc.h	12;"	d
OPTFOURCOLUMN	maxmatopt.cpp	/^  OPTFOURCOLUMN,$/;"	e	enum:__anon1	file:
OPTH	maxmatopt.cpp	/^  OPTH,$/;"	e	enum:__anon1	file:
OPTHELP	maxmatopt.cpp	/^  OPTHELP,$/;"	e	enum:__anon1	file:
OPTION	optdesc.h	32;"	d
OPTIONEXCLUDE	optdesc.h	128;"	d
OPTIONIMPLY	optdesc.h	75;"	d
OPTIONIMPLYEITHER2	optdesc.h	83;"	d
OPTIONIMPLYEITHER3	optdesc.h	94;"	d
OPTIONIMPLYEITHER4	optdesc.h	108;"	d
OPTIONMANDATORY	optdesc.h	62;"	d
OPTLEASTLENGTH	maxmatopt.cpp	/^  OPTLEASTLENGTH,$/;"	e	enum:__anon1	file:
OPTMATCHNUCLEOTIDESONLY	maxmatopt.cpp	/^  OPTMATCHNUCLEOTIDESONLY,$/;"	e	enum:__anon1	file:
OPTMAXMATCH	maxmatopt.cpp	/^  OPTMAXMATCH,$/;"	e	enum:__anon1	file:
OPTMUM	maxmatopt.cpp	/^  OPTMUM = 0,$/;"	e	enum:__anon1	file:
OPTMUMCAND	maxmatopt.cpp	/^  OPTMUMCAND,$/;"	e	enum:__anon1	file:
OPTMUMREF	maxmatopt.cpp	/^  OPTMUMREF,$/;"	e	enum:__anon1	file:
OPTONLYREVERSECOMPLEMENT	maxmatopt.cpp	/^  OPTONLYREVERSECOMPLEMENT,$/;"	e	enum:__anon1	file:
OPTPREFIXLENGTH	maxmatopt.cpp	/^  OPTPREFIXLENGTH,$/;"	e	enum:__anon1	file:
OPTSHOWREVERSEPOSITIONS	maxmatopt.cpp	/^  OPTSHOWREVERSEPOSITIONS,$/;"	e	enum:__anon1	file:
OPTSHOWSEQUENCELENGTHS	maxmatopt.cpp	/^  OPTSHOWSEQUENCELENGTHS,$/;"	e	enum:__anon1	file:
OPTSHOWSTRING	maxmatopt.cpp	/^  OPTSHOWSTRING,$/;"	e	enum:__anon1	file:
Objectives	eval2012/evaluation2012.tex	/^\\section{Objectives}$/;"	s
Objectives	presentations/LLEIDA/wga_hpc.tex	/^\\section{Objectives}$/;"	s
OptionDescription	optdesc.h	/^struct OptionDescription$/;"	s
Optionnumber	maxmatopt.cpp	/^} Optionnumber;$/;"	t	typeref:enum:__anon1	file:
PACKAGE	sparsehash-2.0.2/Makefile	/^PACKAGE = sparsehash$/;"	m
PACKAGE	sparsehash-2.0.2/src/config.h	92;"	d
PACKAGE	sparsehash-2.0.2/src/windows/config.h	94;"	d
PACKAGE_BUGREPORT	sparsehash-2.0.2/Makefile	/^PACKAGE_BUGREPORT = google-sparsehash@googlegroups.com$/;"	m
PACKAGE_BUGREPORT	sparsehash-2.0.2/src/config.h	95;"	d
PACKAGE_BUGREPORT	sparsehash-2.0.2/src/windows/config.h	97;"	d
PACKAGE_NAME	sparsehash-2.0.2/Makefile	/^PACKAGE_NAME = sparsehash$/;"	m
PACKAGE_NAME	sparsehash-2.0.2/src/config.h	98;"	d
PACKAGE_NAME	sparsehash-2.0.2/src/windows/config.h	100;"	d
PACKAGE_STRING	sparsehash-2.0.2/Makefile	/^PACKAGE_STRING = sparsehash 2.0.2$/;"	m
PACKAGE_STRING	sparsehash-2.0.2/src/config.h	101;"	d
PACKAGE_STRING	sparsehash-2.0.2/src/windows/config.h	103;"	d
PACKAGE_TARNAME	sparsehash-2.0.2/Makefile	/^PACKAGE_TARNAME = sparsehash$/;"	m
PACKAGE_TARNAME	sparsehash-2.0.2/src/config.h	104;"	d
PACKAGE_TARNAME	sparsehash-2.0.2/src/windows/config.h	106;"	d
PACKAGE_URL	sparsehash-2.0.2/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	sparsehash-2.0.2/src/config.h	107;"	d
PACKAGE_URL	sparsehash-2.0.2/src/windows/config.h	109;"	d
PACKAGE_VERSION	sparsehash-2.0.2/Makefile	/^PACKAGE_VERSION = 2.0.2$/;"	m
PACKAGE_VERSION	sparsehash-2.0.2/src/config.h	110;"	d
PACKAGE_VERSION	sparsehash-2.0.2/src/windows/config.h	112;"	d
PARSEFLOATARG	args.h	53;"	d
PARSEINTARG	args.h	40;"	d
PATH_SEPARATOR	sparsehash-2.0.2/Makefile	/^PATH_SEPARATOR = :$/;"	m
POST_INSTALL	sparsehash-2.0.2/Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	sparsehash-2.0.2/Makefile	/^POST_UNINSTALL = :$/;"	m
PRE_INSTALL	sparsehash-2.0.2/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	sparsehash-2.0.2/Makefile	/^PRE_UNINSTALL = :$/;"	m
PROCESSALL	streedbg.cpp	24;"	d	file:
PROCESSBRANCH1	dfs.cpp	135;"	d	file:
PROCESSBRANCH1	dfs.cpp	137;"	d	file:
PROCESSBRANCH1	dfs.cpp	59;"	d	file:
PROCESSBRANCH2	dfs.cpp	136;"	d	file:
PROCESSBRANCH2	dfs.cpp	138;"	d	file:
PROCESSBRANCH2	dfs.cpp	60;"	d	file:
PROCESSHEAD	construct.cpp	694;"	d	file:
PROCESSHEAD	construct.cpp	810;"	d	file:
PROCESSREALMUMS	procmaxmat.cpp	107;"	d	file:
PROGRAMS	sparsehash-2.0.2/Makefile	/^PROGRAMS = $(noinst_PROGRAMS)$/;"	m
PROPAGATE_POD_FROM_TEMPLATE_ARGUMENT	sparsehash-2.0.2/src/sparsehash/type_traits.h	338;"	d
PROTODEF_H	protodef.h	10;"	d
PTHREAD_CC	sparsehash-2.0.2/Makefile	/^PTHREAD_CC = $/;"	m
PTHREAD_CFLAGS	sparsehash-2.0.2/Makefile	/^PTHREAD_CFLAGS = $/;"	m
PTHREAD_CREATE_JOINABLE	sparsehash-2.0.2/src/windows/config.h	116;"	d
PTHREAD_LIBS	sparsehash-2.0.2/Makefile	/^PTHREAD_LIBS = $/;"	m
PTR_KEY	sparsehash-2.0.2/experimental/libchash.h	222;"	d
PTR_KEY	sparsehash-2.0.2/experimental/libchash.h	224;"	d
PairUint	arraydef.h	/^DECLAREARRAYSTRUCT(PairUint);$/;"	v
PairUint	types.h	/^struct PairUint$/;"	s
Parallel search of maximal unique matches	presentations/LLEIDA/wga_hpc.tex	/^\\section{Parallel search of maximal unique matches}$/;"	s
Parallelism technique	papers/JP2012/wga_parallelization.tex	/^\\section{Parallelism technique}$/;"	s
Pathinfo	streetyp.h	/^DECLAREARRAYSTRUCT(Pathinfo);$/;"	v
Pathinfo	streetyp.h	/^struct Pathinfo$/;"	s
PrintHashTable	sparsehash-2.0.2/experimental/libchash.c	/^ulong PrintHashTable(HashTable *ht, double time, int iForm)$/;"	f
Problem definition	eval2012/evaluation2012.tex	/^\\section{Problem definition}$/;"	s
Problem definition	presentations/LLEIDA/wga_hpc.tex	/^\\section{Problem definition}$/;"	s
Process_Matches	findmumcand.cpp	/^static void  Process_Matches (Match_t * A, int N) \/\/  Process matches  A [1 .. N].$/;"	f	file:
Processmatchfunction	maxmatdef.h	/^typedef Sint (*Processmatchfunction)$/;"	t
Q	arraydef.h	/^   long int  R, Q; $/;"	m	struct:Match_t
Qsortcomparefunction	types.h	/^typedef int (*Qsortcomparefunction)(const void *,const void *);$/;"	t
R	arraydef.h	/^   long int  R, Q; $/;"	m	struct:Match_t
READ_UL	sparsehash-2.0.2/experimental/libchash.c	191;"	d	file:
RECALLBRANCHADDRESS	streeacc.h	189;"	d
RECALLLEAFADDRESS	streeacc.h	187;"	d
RECALLNEWLEAFADDRESS	streeacc.h	185;"	d
RECALLSUCC	streeacc.h	177;"	d
ROOT	streemac.h	45;"	d
ROOTLOCATION	streemac.h	52;"	d
Read	sparsehash-2.0.2/src/hashtable_test.cc	/^  size_t Read(void* buf, size_t len) {$/;"	f	class:__anon5::StringIO
Reference	streetyp.h	/^struct Reference$/;"	s
References	papers/BBC2013/procs-sample.tex	/^\\section*{References}$/;"	s
Rehash	sparsehash-2.0.2/experimental/libchash.c	/^static HTItem *Rehash(HashTable *ht, ulong cNewBuckets, HTItem *bckWatch)$/;"	f	file:
Reset	sparsehash-2.0.2/src/time_hash_map.cc	/^inline void Rusage::Reset() {$/;"	f	class:Rusage
ResetAllocatorCounters	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^void ResetAllocatorCounters() {$/;"	f
Results	papers/APBC2012/wga_APBC2012.tex	/^        \\paragraph*{Results:} We evaluate several genome sizes in order to test if our novel parallelization reduces the execution time and it produces the same set of matches than the serial execution. A data level parallelism is used in the reference and query genome.$/;"	P
Results and Discussion	papers/APBC2012/wga_APBC2012.tex	/^\\section*{Results and Discussion}$/;"	s
Rusage	sparsehash-2.0.2/src/time_hash_map.cc	/^  Rusage() { Reset(); }$/;"	f	class:Rusage
Rusage	sparsehash-2.0.2/src/time_hash_map.cc	/^class Rusage {$/;"	c	file:
SAMEKEY_OVERWRITE	sparsehash-2.0.2/experimental/libchash.h	149;"	d
SECONDBIT	intbits.h	35;"	d
SEPARATOR	chardef.h	22;"	d
SETBRANCHNODEOFFSET	streehuge.h	87;"	d
SETBRANCHUSED	streedbg.cpp	21;"	d	file:
SETBROTHER	streehuge.h	69;"	d
SETCHILD	streehuge.h	68;"	d
SETCURRENT	dfs.cpp	15;"	d	file:
SETDEPTHHEADPOS	streehuge.h	73;"	d
SETDISTANCE	streehuge.h	71;"	d
SETIBIT	intbits.h	89;"	d
SETLEAFBROTHER	streehuge.h	83;"	d
SETLEAFUSED	streedbg.cpp	18;"	d	file:
SETMAXBRANCHDEPTH	streeacc.h	194;"	d
SETNEWCHILD	streehuge.h	76;"	d
SETNEWCHILDBROTHER	streehuge.h	77;"	d
SETNILBIT	streeacc.h	192;"	d
SETSUFFIXLINK	streehuge.h	80;"	d
SETVAL	streeacc.h	18;"	d
SET_BCK_DELETED	sparsehash-2.0.2/experimental/libchash.h	164;"	d
SET_BCK_DELETED	sparsehash-2.0.2/experimental/libchash.h	168;"	d
SET_BITMAP	sparsehash-2.0.2/experimental/libchash.c	187;"	d	file:
SET_MAKE	sparsehash-2.0.2/Makefile	/^SET_MAKE = $/;"	m
SHELL	sparsehash-2.0.2/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHOWBOOL	types.h	33;"	d
SHOWCHAR	visible.h	76;"	d
SHOWCHARFP	visible.h	62;"	d
SHOWINDEX	streeacc.h	204;"	d
SHOWREF	streedbg.cpp	511;"	d	file:
SHOWVAL	streeacc.h	17;"	d
SIMPLESTANDARDMESSAGE	errordef.h	101;"	d
SMALLBIT	streehuge.h	36;"	d
SMALLINTS	streehuge.h	30;"	d
SOURCES	sparsehash-2.0.2/Makefile	/^SOURCES = $(hashtable_test_SOURCES) $(nodist_hashtable_test_SOURCES) \\$/;"	m
SPACEDEF_H	spacedef.h	12;"	d
SPARSEHASH_COMPILE_ASSERT	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	378;"	d
SPARSEHASH_COMPILE_ASSERT	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	53;"	d
SPARSEHASH_HASH	sparsehash-2.0.2/src/config.h	117;"	d
SPARSEHASH_HASH	sparsehash-2.0.2/src/sparsehash/internal/sparseconfig.h	40;"	d
SPARSEHASH_HASH	sparsehash-2.0.2/src/windows/config.h	119;"	d
SPARSEHASH_HASH	sparsehash-2.0.2/src/windows/google/sparsehash/sparseconfig.h	40;"	d
SPARSEHASH_HASH	sparsehash-2.0.2/src/windows/sparsehash/internal/sparseconfig.h	40;"	d
SPARSEHASH_HASH_NO_NAMESPACE	sparsehash-2.0.2/src/config.h	120;"	d
SPARSEHASH_HASH_NO_NAMESPACE	sparsehash-2.0.2/src/windows/config.h	122;"	d
SPARSEHASH_HASH_NO_NAMESPACE	sparsehash-2.0.2/src/windows/google/sparsehash/sparseconfig.h	43;"	d
SPARSEHASH_HASH_NO_NAMESPACE	sparsehash-2.0.2/src/windows/sparsehash/internal/sparseconfig.h	43;"	d
SPARSEHASH_STAT_UPDATE	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	116;"	d
SPARSEHASH_TEST_UTIL_H_	sparsehash-2.0.2/src/testutil.h	38;"	d
SPARSEHASH_WINDOWS_PORT_H_	sparsehash-2.0.2/src/windows/port.h	42;"	d
SPARSE_BUCKET	sparsehash-2.0.2/experimental/libchash.c	473;"	d	file:
SPARSE_GROUPS	sparsehash-2.0.2/experimental/libchash.c	378;"	d	file:
SPARSE_POS_TO_OFFSET	sparsehash-2.0.2/experimental/libchash.c	472;"	d	file:
STANDARDMESSAGE	errordef.h	97;"	d
STARTFACTOR	construct.cpp	68;"	d	file:
STDC_HEADERS	sparsehash-2.0.2/src/config.h	123;"	d
STDC_HEADERS	sparsehash-2.0.2/src/windows/config.h	125;"	d
STOREINARRAY	arraydef.h	108;"	d
STORESTARTDESC	maxmatinp.cpp	37;"	d	file:
STORESTARTDESC	multiseq.cpp	57;"	d	file:
STORES_PTR	sparsehash-2.0.2/experimental/libchash.h	218;"	d
STREEACC_H	streeacc.h	10;"	d
STREEDEF_H	streedef.h	10;"	d
STREEHUGE_H	streehuge.h	16;"	d
STREEMAC_H	streemac.h	10;"	d
STREETYP_H	streetyp.h	10;"	d
STRING_HASHTABLES	sparsehash-2.0.2/src/hashtable_test.cc	459;"	d	file:
STRIP	sparsehash-2.0.2/Makefile	/^STRIP = $/;"	m
SYMBOL	symboldef.h	/^typedef Uchar SYMBOL;$/;"	t
SYMBOL	symboldef.h	/^typedef Uint SYMBOL;$/;"	t
SYMBOL	symboldef.h	/^typedef Ushort SYMBOL;$/;"	t
SYMBOLBYTES	symboldef.h	13;"	d
SYMBOLDEF_H	symboldef.h	10;"	d
Safe_malloc	distribute.cpp	/^void *  Safe_malloc  (size_t Len)$/;"	f
Safe_realloc	distribute.cpp	/^void *  Safe_realloc  (void * Q, size_t Len)$/;"	f
Seqinfo	multidef.h	/^struct Seqinfo$/;"	s
SetKey	sparsehash-2.0.2/src/hashtable_test.cc	/^struct SetKey {$/;"	s	namespace:__anon4	file:
Settings	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^    explicit Settings(const hasher& hf)$/;"	f	struct:dense_hashtable::Settings
Settings	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  struct Settings :$/;"	s	class:dense_hashtable
Settings	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^    explicit Settings(const hasher& hf)$/;"	f	struct:sparse_hashtable::Settings
Settings	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  struct Settings :$/;"	s	class:sparse_hashtable
Showdescinfo	multidef.h	/^struct Showdescinfo$/;"	s
Simpleloc	streetyp.h	/^DECLAREARRAYSTRUCT(Simpleloc);$/;"	v
Simpleloc	streetyp.h	/^struct Simpleloc$/;"	s
Sint	arraydef.h	/^DECLAREARRAYSTRUCT(Sint);$/;"	v
Sint	types.h	/^typedef signed long Sint;$/;"	t
SparseAllocate	sparsehash-2.0.2/experimental/libchash.c	/^static ulong SparseAllocate(SparseBin **pbinSparse, ulong cBuckets)$/;"	f	file:
SparseBin	sparsehash-2.0.2/experimental/libchash.c	/^typedef struct SparseBin {$/;"	s	file:
SparseBin	sparsehash-2.0.2/experimental/libchash.c	/^} SparseBin;$/;"	t	typeref:struct:SparseBin	file:
SparseBucket	sparsehash-2.0.2/experimental/libchash.c	361;"	d	file:
SparseFind	sparsehash-2.0.2/experimental/libchash.c	/^static SparseBucket *SparseFind(SparseBin *binSparse, ulong location)$/;"	f	file:
SparseFirstBucket	sparsehash-2.0.2/experimental/libchash.c	/^static SparseBucket *SparseFirstBucket(SparseIterator *iter,$/;"	f	file:
SparseFree	sparsehash-2.0.2/experimental/libchash.c	/^static SparseBin *SparseFree(SparseBin *binSparse, ulong cBuckets)$/;"	f	file:
SparseInsert	sparsehash-2.0.2/experimental/libchash.c	/^static SparseBucket *SparseInsert(SparseBin *binSparse, SparseBucket *bckInsert,$/;"	f	file:
SparseIsEmpty	sparsehash-2.0.2/experimental/libchash.c	/^static int SparseIsEmpty(SparseBin *binSparse, ulong location)$/;"	f	file:
SparseIterator	sparsehash-2.0.2/experimental/libchash.c	/^typedef struct SparseIterator {$/;"	s	file:
SparseIterator	sparsehash-2.0.2/experimental/libchash.c	/^} SparseIterator;$/;"	t	typeref:struct:SparseIterator	file:
SparseMemory	sparsehash-2.0.2/experimental/libchash.c	/^static ulong SparseMemory(ulong cBuckets, ulong cOccupied)$/;"	f	file:
SparseNextBucket	sparsehash-2.0.2/experimental/libchash.c	/^static SparseBucket *SparseNextBucket(SparseIterator *iter)$/;"	f	file:
SparseRead	sparsehash-2.0.2/experimental/libchash.c	/^static ulong SparseRead(FILE *fp, SparseBin **pbinSparse)$/;"	f	file:
SparseWrite	sparsehash-2.0.2/experimental/libchash.c	/^static void SparseWrite(FILE *fp, SparseBin *binSparse, ulong cBuckets)$/;"	f	file:
SparsehashCompileAssert	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^template <bool> struct SparsehashCompileAssert { };$/;"	s
Sparsehash_Package	sparsehash-2.0.2/doc/index.html	/^<h1> <a name="Sparsehash_Package"><\/a>Sparsehash Package (formerly$/;"	a
StringHashtables	sparsehash-2.0.2/src/hashtable_test.cc	/^typedef testing::TypeList6<STRING_HASHTABLES> StringHashtables;$/;"	t	namespace:__anon5	file:
StringIO	sparsehash-2.0.2/src/hashtable_test.cc	/^  explicit StringIO(string* s) : s_(s) {}$/;"	f	class:__anon5::StringIO
StringIO	sparsehash-2.0.2/src/hashtable_test.cc	/^class StringIO {$/;"	c	namespace:__anon5	file:
Stringtype	types.h	/^typedef ListType Stringtype;$/;"	t
Structure	papers/BBC2013/procs-sample.tex	/^\\subsection{Structure}$/;"	b
Suffixes	maxmatdef.h	/^typedef multimap<Uint, vector<Uint> > Suffixes;$/;"	t
Suffixtree	streetyp.h	/^struct Suffixtree$/;"	s
TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TEST(HashtableCommonTest, HashMunging) {$/;"	f	namespace:__anon5
TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TEST(HashtableDeathTest, InsertMaxSizeOverflow) {$/;"	f	namespace:__anon6
TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TEST(HashtableDeathTest, InsertSizeTypeOverflow) {$/;"	f	namespace:__anon6
TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TEST(HashtableDeathTest, ResizeDeltaOverflow) {$/;"	f	namespace:__anon6
TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TEST(HashtableDeathTest, ResizeOverflow) {$/;"	f	namespace:__anon6
TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TEST(HashtableDeathTest, ResizeSizeTypeOverflow) {$/;"	f	namespace:__anon6
TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TEST(HashtableTest, ConstKey) {$/;"	f	namespace:__anon6
TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TEST(HashtableTest, InsertValueToMap) {$/;"	f	namespace:__anon5
TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TEST(HashtableTest, IntIO) {$/;"	f	namespace:__anon5
TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TEST(HashtableTest, MaxSizeAndMaxBucketCount) {$/;"	f	namespace:__anon5
TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TEST(HashtableTest, ModifyViaIterator) {$/;"	f	namespace:__anon5
TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TEST(HashtableTest, NestedHashtables) {$/;"	f	namespace:__anon6
TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TEST(HashtableTest, SimpleDataTypeOptimizations) {$/;"	f	namespace:__anon6
TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TEST(HashtableTest, StringIO) {$/;"	f	namespace:__anon5
TEST	sparsehash-2.0.2/src/libc_allocator_with_realloc_test.cc	/^TEST(LibcAllocatorWithReallocTest, Allocate) {$/;"	f	namespace:__anon3
TEST	sparsehash-2.0.2/src/libc_allocator_with_realloc_test.cc	/^TEST(LibcAllocatorWithReallocTest, TestSTL) {$/;"	f	namespace:__anon3
TEST	sparsehash-2.0.2/src/sparsetable_unittest.cc	65;"	d	file:
TEST	sparsehash-2.0.2/src/template_util_unittest.cc	/^TEST(TemplateUtilTest, TestIdentity) {$/;"	f	namespace:__anon8
TEST	sparsehash-2.0.2/src/template_util_unittest.cc	/^TEST(TemplateUtilTest, TestIntegralConstants) {$/;"	f	namespace:__anon8
TEST	sparsehash-2.0.2/src/template_util_unittest.cc	/^TEST(TemplateUtilTest, TestSize) {$/;"	f	namespace:__anon8
TEST	sparsehash-2.0.2/src/template_util_unittest.cc	/^TEST(TemplateUtilTest, TestTemplateAndOr) {$/;"	f	namespace:__anon8
TEST	sparsehash-2.0.2/src/template_util_unittest.cc	/^TEST(TemplateUtilTest, TestTemplateIf) {$/;"	f	namespace:__anon8
TEST	sparsehash-2.0.2/src/template_util_unittest.cc	/^TEST(TemplateUtilTest, TestTemplateTypeEquals) {$/;"	f	namespace:__anon8
TEST	sparsehash-2.0.2/src/testutil.h	73;"	d
TEST	sparsehash-2.0.2/src/type_traits_unittest.cc	/^TEST(TypeTraitsTest, TestAddReference) {$/;"	f	namespace:__anon7
TEST	sparsehash-2.0.2/src/type_traits_unittest.cc	/^TEST(TypeTraitsTest, TestConvertible) {$/;"	f	namespace:__anon7
TEST	sparsehash-2.0.2/src/type_traits_unittest.cc	/^TEST(TypeTraitsTest, TestHasTrivialAssign) {$/;"	f	namespace:__anon7
TEST	sparsehash-2.0.2/src/type_traits_unittest.cc	/^TEST(TypeTraitsTest, TestHasTrivialConstructor) {$/;"	f	namespace:__anon7
TEST	sparsehash-2.0.2/src/type_traits_unittest.cc	/^TEST(TypeTraitsTest, TestHasTrivialCopy) {$/;"	f	namespace:__anon7
TEST	sparsehash-2.0.2/src/type_traits_unittest.cc	/^TEST(TypeTraitsTest, TestHasTrivialDestructor) {$/;"	f	namespace:__anon7
TEST	sparsehash-2.0.2/src/type_traits_unittest.cc	/^TEST(TypeTraitsTest, TestIsEnum) {$/;"	f	namespace:__anon7
TEST	sparsehash-2.0.2/src/type_traits_unittest.cc	/^TEST(TypeTraitsTest, TestIsFloating) {$/;"	f	namespace:__anon7
TEST	sparsehash-2.0.2/src/type_traits_unittest.cc	/^TEST(TypeTraitsTest, TestIsInteger) {$/;"	f	namespace:__anon7
TEST	sparsehash-2.0.2/src/type_traits_unittest.cc	/^TEST(TypeTraitsTest, TestIsPod) {$/;"	f	namespace:__anon7
TEST	sparsehash-2.0.2/src/type_traits_unittest.cc	/^TEST(TypeTraitsTest, TestIsPointer) {$/;"	f	namespace:__anon7
TEST	sparsehash-2.0.2/src/type_traits_unittest.cc	/^TEST(TypeTraitsTest, TestIsReference) {$/;"	f	namespace:__anon7
TEST	sparsehash-2.0.2/src/type_traits_unittest.cc	/^TEST(TypeTraitsTest, TestIsSame) {$/;"	f	namespace:__anon7
TEST	sparsehash-2.0.2/src/type_traits_unittest.cc	/^TEST(TypeTraitsTest, TestRemoveCV) {$/;"	f	namespace:__anon7
TEST	sparsehash-2.0.2/src/type_traits_unittest.cc	/^TEST(TypeTraitsTest, TestRemoveConst) {$/;"	f	namespace:__anon7
TEST	sparsehash-2.0.2/src/type_traits_unittest.cc	/^TEST(TypeTraitsTest, TestRemovePointer) {$/;"	f	namespace:__anon7
TEST	sparsehash-2.0.2/src/type_traits_unittest.cc	/^TEST(TypeTraitsTest, TestRemoveReference) {$/;"	f	namespace:__anon7
TEST	sparsehash-2.0.2/src/type_traits_unittest.cc	/^TEST(TypeTraitsTest, TestRemoveVolatile) {$/;"	f	namespace:__anon7
TESTS	sparsehash-2.0.2/Makefile	/^TESTS = template_util_unittest$(EXEEXT) type_traits_unittest$(EXEEXT) \\$/;"	m
TESTS_ENVIRONMENT	sparsehash-2.0.2/Makefile	/^TESTS_ENVIRONMENT = $/;"	m
TEST_BITMAP	sparsehash-2.0.2/experimental/libchash.c	186;"	d	file:
THIRDBIT	intbits.h	37;"	d
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, BracketInsert) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, BracketOperatorCrashing) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, BucketAndBucketSize) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, BucketCount) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, ClassSizes) {$/;"	f	namespace:__anon6
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, Clear) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, ClearNoResize) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, ConstIterators) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, ConstLocalIterators) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, DeletedKey) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, Empty) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, Equals) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, Erase) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, EraseDoesNotResize) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, FindAndCountAndEqualRange) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, InsertValue) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, Iterating) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, LoadFactor) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, LocalIterators) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, MetadataSerializationAndEndianness) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, NormalIterators) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, OperatorEquals) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, ResizeActuallyResizes) {$/;"	f	namespace:__anon6
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, ResizeAndRehash) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, ResizeHysteresis) {$/;"	f	namespace:__anon6
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, Serialization) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, Size) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableAllTest, Swap) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableIntTest, Constructors) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableIntTest, InsertRange) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableIntTest, NopointerSerialization) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableIntTest, SerializingToString) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableIntTest, SerializingToStringStream) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableIntTest, Typedefs) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/hashtable_test.cc	/^TYPED_TEST(HashtableStringTest, EmptyKey) {$/;"	f	namespace:__anon5
TYPED_TEST	sparsehash-2.0.2/src/testutil.h	165;"	d
TYPED_TEST_CASE_18	sparsehash-2.0.2/src/testutil.h	144;"	d
TYPED_TEST_CASE_6	sparsehash-2.0.2/src/testutil.h	99;"	d
TYPES_H	types.h	20;"	d
Table	maxmatdef.h	/^typedef unordered_map<Uint, Suffixes > Table;$/;"	t
Table	sparsehash-2.0.2/experimental/libchash.h	/^typedef struct Table(Bin)       Table;        \/* Expands to SparseBin, etc *\/$/;"	t	typeref:struct:
Table	sparsehash-2.0.2/experimental/libchash.h	143;"	d
Table	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef sparsetable<value_type, DEFAULT_GROUP_SIZE, value_alloc_type> Table;$/;"	t	class:sparse_hashtable
TableIterator	sparsehash-2.0.2/experimental/libchash.h	/^typedef struct Table(Iterator)  TableIterator;$/;"	t	typeref:struct:
Tables	papers/BBC2013/procs-sample.tex	/^\\subsection{Tables}$/;"	b
Tentative	arraydef.h	/^   unsigned int  Tentative : 1;$/;"	m	struct:Match_t
Test	presentations/LLEIDA/alg.tex	/^\\section{Test}$/;"	s
Test	sparsehash-2.0.2/src/testutil.h	/^class Test { };$/;"	c	namespace:testing
TestAllocator	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^void TestAllocator() {$/;"	f
TestFindOrInsert	sparsehash-2.0.2/experimental/example.c	/^static void TestFindOrInsert() {$/;"	f	file:
TestInsert	sparsehash-2.0.2/experimental/example.c	/^static void TestInsert() {$/;"	f	file:
TestInt	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^void TestInt() {$/;"	f
TestString	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^void TestString() {$/;"	f
The MUM an heuristic approach	papers/BBC2013/mum-multithread.tex	/^\\subsection{The  MUM: an heuristic approach}$/;"	b
ThreeUint	arraydef.h	/^DECLAREARRAYSTRUCT(ThreeUint);$/;"	v
ThreeUint	types.h	/^struct ThreeUint$/;"	s
TmpFile	sparsehash-2.0.2/src/hashtable_test.cc	/^static string TmpFile(const char* basename) {$/;"	f	namespace:__anon4
TmpFile	sparsehash-2.0.2/src/windows/port.cc	/^std::string TmpFile(const char* basename) {$/;"	f
TypeList18	sparsehash-2.0.2/src/testutil.h	/^         typename C16, typename C17, typename C18> struct TypeList18 {$/;"	s	namespace:testing
TypeList6	sparsehash-2.0.2/src/testutil.h	/^         typename C6> struct TypeList6 {$/;"	s	namespace:testing
UL	sparsehash-2.0.2/src/sparsetable_unittest.cc	58;"	d	file:
UNDEFCHAR	chardef.h	24;"	d
UNDEFFILESEP	multidef.h	85;"	d
UNDEFINEDREFERENCE	streehuge.h	59;"	d
UNDEFNUMOFDBSEQ	multiseq.cpp	45;"	d	file:
UNSETIBIT	intbits.h	96;"	d
USAGEOUT	errordef.h	86;"	d
UTIL_GTL_HASHTABLE_COMMON_H_	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	41;"	d
UTIL_GTL_HASH_TEST_INTERFACE_H_	sparsehash-2.0.2/src/hash_test_interface.h	46;"	d
UTIL_GTL_LIBC_ALLOCATOR_WITH_REALLOC_H_	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	33;"	d
Uchar	types.h	/^typedef unsigned char Uchar;$/;"	t
Uint	arraydef.h	/^DECLAREARRAYSTRUCT(Uint);$/;"	v
Uint	types.h	/^typedef unsigned long Uint;$/;"	t
UintConst	types.h	/^typedef const unsigned long UintConst;$/;"	t
UniqueKey	sparsehash-2.0.2/src/hashtable_test.cc	/^  typename HashtableType::key_type UniqueKey(int index) {$/;"	f	class:__anon4::HashtableTest
UniqueMumQ	findmumcand.cpp	/^static void UniqueMumQ (Match_t * A, int N)$/;"	f	file:
UniqueMumR	findmumcand.cpp	/^static void UniqueMumR (Match_t * A, int N)$/;"	f	file:
UniqueObject	sparsehash-2.0.2/src/hashtable_test.cc	/^  typename HashtableType::value_type UniqueObject(int index) {$/;"	f	class:__anon4::HashtableTest
UniqueObjectHelper	sparsehash-2.0.2/src/hashtable_test.cc	/^template<> ValueType UniqueObjectHelper(int index) {$/;"	f	namespace:__anon4
UniqueObjectHelper	sparsehash-2.0.2/src/hashtable_test.cc	/^template<> char* UniqueObjectHelper(int index) {$/;"	f	namespace:__anon4
UniqueObjectHelper	sparsehash-2.0.2/src/hashtable_test.cc	/^template<> const char* UniqueObjectHelper(int index) {$/;"	f	namespace:__anon4
UniqueObjectHelper	sparsehash-2.0.2/src/hashtable_test.cc	/^template<> int UniqueObjectHelper(int index) {$/;"	f	namespace:__anon4
UniqueObjectHelper	sparsehash-2.0.2/src/hashtable_test.cc	/^template<> pair<const char* const,ValueType> UniqueObjectHelper(int index) {$/;"	f	namespace:__anon4
UniqueObjectHelper	sparsehash-2.0.2/src/hashtable_test.cc	/^template<> pair<const int, int> UniqueObjectHelper(int index) {$/;"	f	namespace:__anon4
UniqueObjectHelper	sparsehash-2.0.2/src/hashtable_test.cc	/^template<> pair<const string, string> UniqueObjectHelper(int index) {$/;"	f	namespace:__anon4
UniqueObjectHelper	sparsehash-2.0.2/src/hashtable_test.cc	/^template<> string UniqueObjectHelper(int index) {$/;"	f	namespace:__anon4
UserTime	sparsehash-2.0.2/src/time_hash_map.cc	/^inline double Rusage::UserTime() {$/;"	f	class:Rusage
Ushort	arraydef.h	/^DECLAREARRAYSTRUCT(Ushort);$/;"	v
Ushort	types.h	/^typedef unsigned short Ushort;$/;"	t
VALIDINIT	construct.cpp	24;"	d	file:
VERSION	sparsehash-2.0.2/Makefile	/^VERSION = 2.0.2$/;"	m
VERSION	sparsehash-2.0.2/src/config.h	126;"	d
VERSION	sparsehash-2.0.2/src/windows/config.h	128;"	d
VISIBLECHAR	visible.h	48;"	d
VISIBLE_H	visible.h	13;"	d
ValInfo	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^    ValInfo(const ValInfo& v)$/;"	f	class:dense_hashtable::ValInfo
ValInfo	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^    ValInfo(const alloc_impl<value_alloc_type>& a)$/;"	f	class:dense_hashtable::ValInfo
ValInfo	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  class ValInfo : public alloc_impl<value_alloc_type> {$/;"	c	class:dense_hashtable
ValueSerializer	sparsehash-2.0.2/src/hashtable_test.cc	/^class ValueSerializer {$/;"	c	namespace:__anon4	file:
ValueType	sparsehash-2.0.2/src/hashtable_test.cc	/^  ValueType() : s_(kDefault) { }$/;"	f	struct:__anon4::ValueType
ValueType	sparsehash-2.0.2/src/hashtable_test.cc	/^  ValueType(const ValueType& that) : s_(kDefault) { operator=(that); }$/;"	f	struct:__anon4::ValueType
ValueType	sparsehash-2.0.2/src/hashtable_test.cc	/^  ValueType(const char* init_s) : s_(kDefault) { set_s(init_s); }$/;"	f	struct:__anon4::ValueType
ValueType	sparsehash-2.0.2/src/hashtable_test.cc	/^struct ValueType {$/;"	s	namespace:__anon4	file:
WILDCARD	chardef.h	23;"	d
WIN32_LEAN_AND_MEAN	sparsehash-2.0.2/src/windows/port.h	49;"	d
WINDOWS_PROJECTS	sparsehash-2.0.2/Makefile	/^WINDOWS_PROJECTS = sparsehash.sln \\$/;"	m
WORD_AT	sparsehash-2.0.2/experimental/libchash.c	849;"	d	file:
WORD_AT	sparsehash-2.0.2/experimental/libchash.c	851;"	d	file:
WORD_AT	sparsehash-2.0.2/experimental/libchash.c	873;"	d	file:
WORD_AT	sparsehash-2.0.2/experimental/libchash.c	875;"	d	file:
WORD_ROUND	sparsehash-2.0.2/experimental/libchash.c	138;"	d	file:
WRITE_UL	sparsehash-2.0.2/experimental/libchash.c	198;"	d	file:
Write	sparsehash-2.0.2/src/hashtable_test.cc	/^  size_t Write(const void* buf, size_t len) {$/;"	f	class:__anon5::StringIO
_DENSEHASHTABLE_H_	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	90;"	d
_END_GOOGLE_NAMESPACE_	sparsehash-2.0.2/src/config.h	129;"	d
_END_GOOGLE_NAMESPACE_	sparsehash-2.0.2/src/sparsehash/internal/sparseconfig.h	43;"	d
_END_GOOGLE_NAMESPACE_	sparsehash-2.0.2/src/windows/config.h	131;"	d
_END_GOOGLE_NAMESPACE_	sparsehash-2.0.2/src/windows/google/sparsehash/sparseconfig.h	46;"	d
_END_GOOGLE_NAMESPACE_	sparsehash-2.0.2/src/windows/sparsehash/internal/sparseconfig.h	46;"	d
_SPARSEHASHTABLE_H_	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	96;"	d
_START_GOOGLE_NAMESPACE_	sparsehash-2.0.2/src/config.h	132;"	d
_START_GOOGLE_NAMESPACE_	sparsehash-2.0.2/src/sparsehash/internal/sparseconfig.h	46;"	d
_START_GOOGLE_NAMESPACE_	sparsehash-2.0.2/src/windows/config.h	134;"	d
_START_GOOGLE_NAMESPACE_	sparsehash-2.0.2/src/windows/google/sparsehash/sparseconfig.h	49;"	d
_START_GOOGLE_NAMESPACE_	sparsehash-2.0.2/src/windows/sparsehash/internal/sparseconfig.h	49;"	d
abs_builddir	sparsehash-2.0.2/Makefile	/^abs_builddir = \/home\/jcgarcia\/Toci\/sparsehash-2.0.2$/;"	m
abs_srcdir	sparsehash-2.0.2/Makefile	/^abs_srcdir = \/home\/jcgarcia\/Toci\/sparsehash-2.0.2$/;"	m
abs_top_builddir	sparsehash-2.0.2/Makefile	/^abs_top_builddir = \/home\/jcgarcia\/Toci\/sparsehash-2.0.2$/;"	m
abs_top_srcdir	sparsehash-2.0.2/Makefile	/^abs_top_srcdir = \/home\/jcgarcia\/Toci\/sparsehash-2.0.2$/;"	m
ac_ct_CC	sparsehash-2.0.2/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CXX	sparsehash-2.0.2/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_fn_c_check_func	sparsehash-2.0.2/configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	sparsehash-2.0.2/configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	sparsehash-2.0.2/configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_type	sparsehash-2.0.2/configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_try_compile	sparsehash-2.0.2/configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	sparsehash-2.0.2/configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	sparsehash-2.0.2/configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	sparsehash-2.0.2/configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_cxx_check_header_mongrel	sparsehash-2.0.2/configure	/^ac_fn_cxx_check_header_mongrel ()$/;"	f
ac_fn_cxx_try_compile	sparsehash-2.0.2/configure	/^ac_fn_cxx_try_compile ()$/;"	f
ac_fn_cxx_try_cpp	sparsehash-2.0.2/configure	/^ac_fn_cxx_try_cpp ()$/;"	f
activeblocks	space.cpp	/^void activeblocks(void)$/;"	f
acx_pthread_config	sparsehash-2.0.2/Makefile	/^acx_pthread_config = $/;"	m
add_reference	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <typename T> struct add_reference { typedef T& type; };$/;"	s
add_reference	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <typename T> struct add_reference<T&> { typedef T& type; };$/;"	s
addoption	procopt.cpp	/^Sint addoption(OptionDescription *options,Uint numofoptions,$/;"	f
address	sparsehash-2.0.2/src/hashtable_test.cc	/^  const_pointer address(const_reference r) const  { return &r; }$/;"	f	struct:__anon4::Alloc
address	sparsehash-2.0.2/src/hashtable_test.cc	/^  pointer address(reference r) const  { return &r; }$/;"	f	struct:__anon4::Alloc
address	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  const_pointer address(const_reference r) const  { return &r; }$/;"	f	class:libc_allocator_with_realloc
address	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  pointer address(reference r) const  { return &r; }$/;"	f	class:libc_allocator_with_realloc
address	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^  const_pointer address(const_reference r) const  { return &r; }$/;"	f	class:instrumented_allocator
address	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^  pointer address(reference r) const  { return &r; }$/;"	f	class:instrumented_allocator
address	streetyp.h	/^  Uint *address;$/;"	m	struct:Reference
addspace	space.cpp	/^static void addspace(Uint space)$/;"	f	file:
advance_past_deleted	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void advance_past_deleted() {$/;"	f	struct:sparse_hashtable_const_iterator
advance_past_deleted	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void advance_past_deleted() {$/;"	f	struct:sparse_hashtable_destructive_iterator
advance_past_deleted	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void advance_past_deleted() {$/;"	f	struct:sparse_hashtable_iterator
advance_past_empty_and_deleted	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void advance_past_empty_and_deleted() {$/;"	f	struct:dense_hashtable_const_iterator
advance_past_empty_and_deleted	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void advance_past_empty_and_deleted() {$/;"	f	struct:dense_hashtable_iterator
alloc_impl	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^    alloc_impl(const A& a) : A(a) { }$/;"	f	class:dense_hashtable::alloc_impl
alloc_impl	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^    alloc_impl(const libc_allocator_with_realloc<A>& a)$/;"	f	class:dense_hashtable::alloc_impl
alloc_impl	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  class alloc_impl : public A {$/;"	c	class:dense_hashtable
alloc_impl	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  class alloc_impl<libc_allocator_with_realloc<A> >$/;"	c	class:dense_hashtable
allocandusespaceviaptr	space.cpp	/^\/*@notnull@*\/ void *allocandusespaceviaptr(char *file,Uint line, $/;"	f
allocate	sparsehash-2.0.2/src/hashtable_test.cc	/^  pointer allocate(size_type n, const_pointer = 0) {$/;"	f	struct:__anon4::Alloc
allocate	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  pointer allocate(size_type n, const_pointer = 0) {$/;"	f	class:libc_allocator_with_realloc
allocate	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^  pointer allocate(size_type n, const_pointer = 0) {$/;"	f	class:instrumented_allocator
allocatedStrings	arraydef.h	/^  Uint stringbufferlength, nextfreeStrings, allocatedStrings;$/;"	m	struct:ArrayStrings
allocator_type	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef typename HT::allocator_type allocator_type;$/;"	t	class:BaseHashtableInterface
allocator_type	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef Alloc allocator_type;$/;"	t	class:dense_hashtable
allocator_type	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef Alloc allocator_type;$/;"	t	class:sparse_hashtable
alphabet	streetyp.h	/^  Uchar *alphabet;$/;"	m	struct:Suffixtree
alphasize	streetyp.h	/^       alphasize,             \/\/ the number of different characters in t$/;"	m	struct:Suffixtree
am__CONFIG_DISTCLEAN_FILES	sparsehash-2.0.2/Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__EXEEXT_1	sparsehash-2.0.2/Makefile	/^am__EXEEXT_1 = template_util_unittest$(EXEEXT) \\$/;"	m
am__aclocal_m4_deps	sparsehash-2.0.2/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/acx_pthread.m4 \\$/;"	m
am__base_list	sparsehash-2.0.2/Makefile	/^am__base_list = \\$/;"	m
am__cd	sparsehash-2.0.2/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	sparsehash-2.0.2/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__depfiles_maybe	sparsehash-2.0.2/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__include	sparsehash-2.0.2/Makefile	/^am__include = include$/;"	m
am__install_max	sparsehash-2.0.2/Makefile	/^am__install_max = 40$/;"	m
am__installdirs	sparsehash-2.0.2/Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(docdir)" \\$/;"	m
am__leading_dot	sparsehash-2.0.2/Makefile	/^am__leading_dot = .$/;"	m
am__mv	sparsehash-2.0.2/Makefile	/^am__mv = mv -f$/;"	m
am__nobase_list	sparsehash-2.0.2/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	sparsehash-2.0.2/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	sparsehash-2.0.2/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__objects_1	sparsehash-2.0.2/Makefile	/^am__objects_1 =$/;"	m
am__quote	sparsehash-2.0.2/Makefile	/^am__quote = $/;"	m
am__remove_distdir	sparsehash-2.0.2/Makefile	/^am__remove_distdir = \\$/;"	m
am__strip_dir	sparsehash-2.0.2/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tar	sparsehash-2.0.2/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tty_colors	sparsehash-2.0.2/Makefile	/^am__tty_colors = \\$/;"	m
am__untar	sparsehash-2.0.2/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__vpath_adj	sparsehash-2.0.2/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	sparsehash-2.0.2/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_hashtable_test_OBJECTS	sparsehash-2.0.2/Makefile	/^am_hashtable_test_OBJECTS = hashtable_test.$(OBJEXT) $(am__objects_1) \\$/;"	m
am_libc_allocator_with_realloc_test_OBJECTS	sparsehash-2.0.2/Makefile	/^am_libc_allocator_with_realloc_test_OBJECTS =  \\$/;"	m
am_simple_compat_test_OBJECTS	sparsehash-2.0.2/Makefile	/^am_simple_compat_test_OBJECTS = simple_compat_test.$(OBJEXT) \\$/;"	m
am_simple_test_OBJECTS	sparsehash-2.0.2/Makefile	/^am_simple_test_OBJECTS = simple_test.$(OBJEXT) $(am__objects_1)$/;"	m
am_sparsetable_unittest_OBJECTS	sparsehash-2.0.2/Makefile	/^am_sparsetable_unittest_OBJECTS = sparsetable_unittest.$(OBJEXT) \\$/;"	m
am_template_util_unittest_OBJECTS	sparsehash-2.0.2/Makefile	/^am_template_util_unittest_OBJECTS = template_util_unittest.$(OBJEXT)$/;"	m
am_time_hash_map_OBJECTS	sparsehash-2.0.2/Makefile	/^am_time_hash_map_OBJECTS = time_hash_map-time_hash_map.$(OBJEXT) \\$/;"	m
am_type_traits_unittest_OBJECTS	sparsehash-2.0.2/Makefile	/^am_type_traits_unittest_OBJECTS = type_traits_unittest.$(OBJEXT) \\$/;"	m
and_	sparsehash-2.0.2/src/sparsehash/template_util.h	/^struct and_ : public integral_constant<bool, (A::value && B::value)> {$/;"	s
arraysize	sparsehash-2.0.2/src/libc_allocator_with_realloc_test.cc	49;"	d	file:
as_fn_append	sparsehash-2.0.2/config.status	/^  as_fn_append ()$/;"	f
as_fn_append	sparsehash-2.0.2/configure	/^  as_fn_append ()$/;"	f
as_fn_arith	sparsehash-2.0.2/config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	sparsehash-2.0.2/configure	/^  as_fn_arith ()$/;"	f
as_fn_error	sparsehash-2.0.2/config.status	/^as_fn_error ()$/;"	f
as_fn_error	sparsehash-2.0.2/configure	/^as_fn_error ()$/;"	f
as_fn_exit	sparsehash-2.0.2/config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	sparsehash-2.0.2/configure	/^as_fn_exit ()$/;"	f
as_fn_failure	sparsehash-2.0.2/configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	sparsehash-2.0.2/config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	sparsehash-2.0.2/configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	sparsehash-2.0.2/configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	sparsehash-2.0.2/configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	sparsehash-2.0.2/config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	sparsehash-2.0.2/configure	/^as_fn_set_status ()$/;"	f
as_fn_success	sparsehash-2.0.2/configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	sparsehash-2.0.2/config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	sparsehash-2.0.2/configure	/^as_fn_unset ()$/;"	f
assigned	sparsehash-2.0.2/doc/sparsetable.html	/^<A NAME="assigned">$/;"	a
base	genDNA.py	/^    base = randint(1,4)$/;"	v
base	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^namespace base {   \/\/ just to make google->opensource transition easier$/;"	n
base	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^namespace base {   \/\/ just to make google->opensource transition easier$/;"	n
bckData	sparsehash-2.0.2/experimental/libchash.h	/^   HTItem bckData;      \/* holds data after being loaded from disk *\/$/;"	m	struct:HashTable
begin	sparsehash-2.0.2/src/hash_test_interface.h	/^  const_iterator begin() const {$/;"	f	class:BaseHashtableInterface
begin	sparsehash-2.0.2/src/hash_test_interface.h	/^  const_local_iterator begin(size_type i) const  {$/;"	f	class:BaseHashtableInterface
begin	sparsehash-2.0.2/src/hash_test_interface.h	/^  iterator begin() {$/;"	f	class:BaseHashtableInterface
begin	sparsehash-2.0.2/src/hash_test_interface.h	/^  local_iterator begin(size_type i) {$/;"	f	class:BaseHashtableInterface
begin	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  const_iterator begin() const { return const_iterator(this, table,$/;"	f	class:dense_hashtable
begin	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  const_local_iterator begin(size_type i) const {$/;"	f	class:dense_hashtable
begin	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  iterator begin()             { return iterator(this, table,$/;"	f	class:dense_hashtable
begin	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  local_iterator begin(size_type i) {$/;"	f	class:dense_hashtable
begin	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  const_iterator begin() const { return const_iterator(this,$/;"	f	class:sparse_hashtable
begin	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  const_local_iterator begin(size_type i) const {$/;"	f	class:sparse_hashtable
begin	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  iterator begin()             { return iterator(this, table.nonempty_begin(),$/;"	f	class:sparse_hashtable
begin	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  local_iterator begin(size_type i) {$/;"	f	class:sparse_hashtable
big_	sparsehash-2.0.2/src/sparsehash/template_util.h	/^struct big_ {$/;"	s
bin	sparsehash-2.0.2/experimental/libchash.c	/^   DenseBin *bin;          \/* state info, to avoid args for NextBucket() *\/$/;"	m	struct:DenseIterator	file:
binSparse	sparsehash-2.0.2/experimental/libchash.c	/^   SparseBin *binSparse;     \/* state info, to avoid args for NextBucket() *\/$/;"	m	struct:SparseIterator	file:
binSparse	sparsehash-2.0.2/experimental/libchash.c	/^   SparseBucket *binSparse;$/;"	m	struct:SparseBin	file:
bindir	sparsehash-2.0.2/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
blocks	space.cpp	/^\/*@null@*\/ static Blockdescription *blocks = NULL;$/;"	v	file:
bmOccupied	sparsehash-2.0.2/experimental/libchash.c	/^   HTBitmap bmOccupied;      \/* bmOccupied[i] is 1 if bucket i has an item *\/$/;"	m	struct:SparseBin	file:
bracket_assign	sparsehash-2.0.2/src/hash_test_interface.h	/^  void bracket_assign(const key_type& key, const AssignValue& value) {$/;"	f	class:BaseHashtableInterface
bracket_assign	sparsehash-2.0.2/src/hash_test_interface.h	/^  void bracket_assign(const typename p::key_type& key, const AssignValue&) {$/;"	f	class:HashtableInterface_DenseHashSet
bracket_assign	sparsehash-2.0.2/src/hash_test_interface.h	/^  void bracket_assign(const typename p::key_type& key, const AssignValue&) {$/;"	f	class:HashtableInterface_SparseHashSet
bracket_assign	sparsehash-2.0.2/src/hash_test_interface.h	/^  void bracket_assign(const typename p::key_type&, const AssignValue&) {$/;"	f	class:HashtableInterface_DenseHashtable
bracket_assign	sparsehash-2.0.2/src/hash_test_interface.h	/^  void bracket_assign(const typename p::key_type&, const AssignValue&) {$/;"	f	class:HashtableInterface_SparseHashtable
bracket_equal	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool bracket_equal(const key_type& key, const AssignValue& expected) {$/;"	f	class:BaseHashtableInterface
bracket_equal	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool bracket_equal(const typename p::key_type& key, const AssignValue&) {$/;"	f	class:HashtableInterface_DenseHashSet
bracket_equal	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool bracket_equal(const typename p::key_type& key, const AssignValue&) {$/;"	f	class:HashtableInterface_SparseHashSet
bracket_equal	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool bracket_equal(const typename p::key_type&, const AssignValue&) {$/;"	f	class:HashtableInterface_DenseHashtable
bracket_equal	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool bracket_equal(const typename p::key_type&, const AssignValue&) {$/;"	f	class:HashtableInterface_SparseHashtable
branchbrother	streetyp.h	/^            branchbrother;  \/\/ the reference to the right brother; $/;"	m	struct:Branchinfo
branchnodeoffset	streetyp.h	/^       branchnodeoffset,      \/\/ number of leafs in tree$/;"	m	struct:Suffixtree
branchtab	streetyp.h	/^       *branchtab,            \/\/ table TBranch$/;"	m	struct:Suffixtree
bucket	sparsehash-2.0.2/src/hash_test_interface.h	/^  size_type bucket(const key_type& key) const {$/;"	f	class:BaseHashtableInterface
bucket	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  size_type bucket(const key_type& key) const {$/;"	f	class:dense_hashtable
bucket	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  size_type bucket(const key_type& key) const {$/;"	f	class:sparse_hashtable
bucket_count	sparsehash-2.0.2/src/hash_test_interface.h	/^  size_type bucket_count() const     { return ht_.bucket_count(); }$/;"	f	class:BaseHashtableInterface
bucket_count	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  size_type bucket_count() const      { return num_buckets; }$/;"	f	class:dense_hashtable
bucket_count	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  size_type bucket_count() const      { return table.size(); }$/;"	f	class:sparse_hashtable
bucket_size	sparsehash-2.0.2/src/hash_test_interface.h	/^  size_type bucket_size(size_type i) const {$/;"	f	class:BaseHashtableInterface
bucket_size	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  size_type bucket_size(size_type i) const {$/;"	f	class:dense_hashtable
bucket_size	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  size_type bucket_size(size_type i) const {$/;"	f	class:sparse_hashtable
bucket_size	sparsehash-2.0.2/src/time_hash_map.cc	/^  static const size_t bucket_size = 4;$/;"	m	class:HashFn	file:
buffer_	sparsehash-2.0.2/src/time_hash_map.cc	/^  char buffer_[Size - sizeof(int)];$/;"	m	class:HashObject	file:
build	sparsehash-2.0.2/Makefile	/^build = $/;"	m
build_alias	sparsehash-2.0.2/Makefile	/^build_alias = $/;"	m
build_cpu	sparsehash-2.0.2/Makefile	/^build_cpu = $/;"	m
build_os	sparsehash-2.0.2/Makefile	/^build_os = $/;"	m
build_triplet	sparsehash-2.0.2/Makefile	/^build_triplet = $/;"	m
build_vendor	sparsehash-2.0.2/Makefile	/^build_vendor = $/;"	m
builddir	sparsehash-2.0.2/Makefile	/^builddir = .$/;"	m
cBuckets	sparsehash-2.0.2/experimental/libchash.c	/^   ulong cBuckets;$/;"	m	struct:DenseIterator	file:
cBuckets	sparsehash-2.0.2/experimental/libchash.c	/^   ulong cBuckets;$/;"	m	struct:SparseIterator	file:
cBuckets	sparsehash-2.0.2/experimental/libchash.h	/^   ulong cBuckets;      \/* size of the table *\/$/;"	m	struct:HashTable
cDeletedItems	sparsehash-2.0.2/experimental/libchash.h	/^   ulong cDeletedItems; \/* # of buckets holding DELETE in the hashtable *\/$/;"	m	struct:HashTable
cDeltaGoalSize	sparsehash-2.0.2/experimental/libchash.h	/^   int cDeltaGoalSize;  \/* # of coming inserts (or deletes, if <0) we expect *\/$/;"	m	struct:HashTable
cItems	sparsehash-2.0.2/experimental/libchash.h	/^   ulong cItems;        \/* number of items currently in the hashtable *\/$/;"	m	struct:HashTable
cOccupied	sparsehash-2.0.2/experimental/libchash.c	/^   short cOccupied;          \/* size of binSparse; useful for iterators, eg *\/$/;"	m	struct:SparseBin	file:
cchKey	sparsehash-2.0.2/experimental/libchash.h	/^   ulong cchKey;        \/* the length of the key, or if it's \\0 terminated *\/$/;"	m	struct:HashTable
chainstart	streetyp.h	/^       *chainstart,           \/\/ address of the node, current chains starts at$/;"	m	struct:Suffixtree
check_SCRIPTS	sparsehash-2.0.2/Makefile	/^check_SCRIPTS = $/;"	m
check_use_deleted	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void check_use_deleted(const char* caller) {$/;"	f	class:dense_hashtable
check_use_deleted	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void check_use_deleted(const char* caller) {$/;"	f	class:sparse_hashtable
checkdoubleexclude	procopt.cpp	/^int checkdoubleexclude(Uint numofopts,OptionDescription *opt,$/;"	f
checkexclude	procopt.cpp	/^int checkexclude(OptionDescription *opt,Sint *excludetab,Uint len)$/;"	f
checklocation	streedbg.cpp	/^void checklocation(Suffixtree *stree,Location *loc)$/;"	f
checkspaceleak	space.cpp	/^void checkspaceleak(void)$/;"	f
checkstree	streedbg.cpp	/^void checkstree(Suffixtree *stree)$/;"	f
chunks	maxmatdef.h	/^       chunks,                  \/\/ number of chunks to split query sequence$/;"	m	struct:MMcallinfo
chunks	maxmatdef.h	/^       chunks,                 \/\/  number of chunks to split query sequence$/;"	m	struct:Matchprocessinfo
class_type	sparsehash-2.0.2/src/time_hash_map.cc	/^  typedef HashObject<Size, Hashsize> class_type;$/;"	t	class:HashObject	file:
class_type	sparsehash-2.0.2/src/time_hash_map.cc	/^  typedef HashObject<sizeof(int), sizeof(int)> class_type;$/;"	t	class:HashObject	file:
clear	sparsehash-2.0.2/src/hash_test_interface.h	/^  void clear() { ht_.clear(); }$/;"	f	class:BaseHashtableInterface
clear	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void clear() {$/;"	f	class:dense_hashtable
clear	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void clear() {$/;"	f	class:sparse_hashtable
clear_deleted	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool clear_deleted(const_iterator &it) {$/;"	f	class:dense_hashtable
clear_deleted	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool clear_deleted(iterator &it) {$/;"	f	class:dense_hashtable
clear_deleted	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool clear_deleted(const_iterator &it) {$/;"	f	class:sparse_hashtable
clear_deleted	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool clear_deleted(iterator &it) {$/;"	f	class:sparse_hashtable
clear_deleted_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  void clear_deleted_key() { ht_.clear_deleted_key(); }$/;"	f	class:BaseHashtableInterface
clear_deleted_key	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void clear_deleted_key() {$/;"	f	class:dense_hashtable
clear_deleted_key	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void clear_deleted_key() {$/;"	f	class:sparse_hashtable
clear_empty_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  void clear_empty_key() { ht_.clear_empty_key(); }$/;"	f	class:BaseHashtableInterface
clear_empty_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  void clear_empty_key() { }$/;"	f	class:HashtableInterface_SparseHashMap
clear_empty_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  void clear_empty_key() { }$/;"	f	class:HashtableInterface_SparseHashSet
clear_empty_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  void clear_empty_key() { }$/;"	f	class:HashtableInterface_SparseHashtable
clear_no_resize	sparsehash-2.0.2/src/hash_test_interface.h	/^  void clear_no_resize() { clear(); }$/;"	f	class:BaseHashtableInterface
clear_no_resize	sparsehash-2.0.2/src/hash_test_interface.h	/^  void clear_no_resize() { this->ht_.clear_no_resize(); }$/;"	f	class:HashtableInterface_DenseHashMap
clear_no_resize	sparsehash-2.0.2/src/hash_test_interface.h	/^  void clear_no_resize() { this->ht_.clear_no_resize(); }$/;"	f	class:HashtableInterface_DenseHashSet
clear_no_resize	sparsehash-2.0.2/src/hash_test_interface.h	/^  void clear_no_resize() { this->ht_.clear_no_resize(); }$/;"	f	class:HashtableInterface_DenseHashtable
clear_no_resize	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void clear_no_resize() {$/;"	f	class:dense_hashtable
clear_to_size	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void clear_to_size(size_type new_num_buckets) {$/;"	f	class:dense_hashtable
cmaxmatch	maxmatdef.h	/^       cmaxmatch,               \/\/ compute all maximal matches$/;"	m	struct:MMcallinfo
cmum	maxmatdef.h	/^       cmum,                   \/\/ compute MUMs$/;"	m	struct:Matchprocessinfo
cmum	maxmatdef.h	/^       cmum;                    \/\/ compute real matches unique in both sequences$/;"	m	struct:MMcallinfo
cmumcand	maxmatdef.h	/^       cmumcand,                \/\/ compute reference-unique maximal matches$/;"	m	struct:MMcallinfo
cmumcand	maxmatdef.h	/^       cmumcand,               \/\/ compute MUM candidates$/;"	m	struct:Matchprocessinfo
commondepthstack	findmaxmat.cpp	/^  ArrayNodeinfo commondepthstack; \/\/ stack to store depth values$/;"	m	struct:Maxmatchinfo	file:
compareMUMcandidates	cleanMUMcand.cpp	/^static Sint compareMUMcandidates(MUMcandidate *p,MUMcandidate *q)$/;"	f	file:
comparelocs	streedbg.cpp	/^static Sint comparelocs(Suffixtree *stree,Location *loc1,Location *loc2)$/;"	f	file:
completelarge	construct.cpp	/^static void completelarge(Suffixtree *stree)$/;"	f	file:
consider_shrink	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  bool consider_shrink() const {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
consider_shrink_	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  bool consider_shrink_;$/;"	m	class:sparsehash_internal::sh_hashtable_settings
const_iterator	sparsehash-2.0.2/src/hash_test_interface.h	/^    const_iterator() : parent_(NULL) { }$/;"	f	class:BaseHashtableInterface::const_iterator
const_iterator	sparsehash-2.0.2/src/hash_test_interface.h	/^    const_iterator(typename BaseHashtableInterface<HT>::iterator it)$/;"	f	class:BaseHashtableInterface::const_iterator
const_iterator	sparsehash-2.0.2/src/hash_test_interface.h	/^    const_iterator(typename HT::const_iterator it,$/;"	f	class:BaseHashtableInterface::const_iterator
const_iterator	sparsehash-2.0.2/src/hash_test_interface.h	/^    const_iterator(typename HT::iterator it,$/;"	f	class:BaseHashtableInterface::const_iterator
const_iterator	sparsehash-2.0.2/src/hash_test_interface.h	/^  class const_iterator : public HT::const_iterator {$/;"	c	class:BaseHashtableInterface
const_iterator	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  const_iterator;$/;"	t	class:dense_hashtable
const_iterator	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef dense_hashtable_const_iterator<V,K,HF,ExK,SetK,EqK,A> const_iterator;$/;"	t	struct:dense_hashtable_const_iterator
const_iterator	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef dense_hashtable_const_iterator<V,K,HF,ExK,SetK,EqK,A> const_iterator;$/;"	t	struct:dense_hashtable_iterator
const_iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  const_iterator;$/;"	t	class:sparse_hashtable
const_iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef sparse_hashtable_const_iterator<V,K,HF,ExK,SetK,EqK,A> const_iterator;$/;"	t	struct:sparse_hashtable_const_iterator
const_iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef sparse_hashtable_const_iterator<V,K,HF,ExK,SetK,EqK,A> const_iterator;$/;"	t	struct:sparse_hashtable_iterator
const_local_iterator	sparsehash-2.0.2/src/hash_test_interface.h	/^    const_local_iterator() : parent_(NULL) { }$/;"	f	class:BaseHashtableInterface::const_local_iterator
const_local_iterator	sparsehash-2.0.2/src/hash_test_interface.h	/^    const_local_iterator(local_iterator it)$/;"	f	class:BaseHashtableInterface::const_local_iterator
const_local_iterator	sparsehash-2.0.2/src/hash_test_interface.h	/^    const_local_iterator(typename HT::const_local_iterator it,$/;"	f	class:BaseHashtableInterface::const_local_iterator
const_local_iterator	sparsehash-2.0.2/src/hash_test_interface.h	/^    const_local_iterator(typename HT::local_iterator it,$/;"	f	class:BaseHashtableInterface::const_local_iterator
const_local_iterator	sparsehash-2.0.2/src/hash_test_interface.h	/^  class const_local_iterator : public HT::const_local_iterator {$/;"	c	class:BaseHashtableInterface
const_local_iterator	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef const_iterator const_local_iterator;$/;"	t	class:dense_hashtable
const_local_iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef const_iterator const_local_iterator;$/;"	t	class:sparse_hashtable
const_pointer	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef typename HT::const_pointer const_pointer;$/;"	t	class:BaseHashtableInterface
const_pointer	sparsehash-2.0.2/src/hashtable_test.cc	/^  typedef const T* const_pointer;$/;"	t	struct:__anon4::Alloc	file:
const_pointer	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef typename value_alloc_type::const_pointer const_pointer;$/;"	t	class:dense_hashtable
const_pointer	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  typedef const T* const_pointer;$/;"	t	class:libc_allocator_with_realloc
const_pointer	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  typedef const void* const_pointer;$/;"	t	class:libc_allocator_with_realloc
const_pointer	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename value_alloc_type::const_pointer const_pointer;$/;"	t	class:sparse_hashtable
const_pointer	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^  typedef const T* const_pointer;$/;"	t	class:instrumented_allocator	file:
const_reference	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef typename HT::const_reference const_reference;$/;"	t	class:BaseHashtableInterface
const_reference	sparsehash-2.0.2/src/hashtable_test.cc	/^  typedef const T& const_reference;$/;"	t	struct:__anon4::Alloc	file:
const_reference	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef typename value_alloc_type::const_reference const_reference;$/;"	t	class:dense_hashtable
const_reference	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  typedef const T& const_reference;$/;"	t	class:libc_allocator_with_realloc
const_reference	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename value_alloc_type::const_reference const_reference;$/;"	t	class:sparse_hashtable
const_reference	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^  typedef const T& const_reference;$/;"	t	class:instrumented_allocator	file:
construct	sparsehash-2.0.2/src/hashtable_test.cc	/^  void construct(pointer p, const value_type& val) {$/;"	f	struct:__anon4::Alloc
construct	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  void construct(pointer p, const value_type& val) {$/;"	f	class:libc_allocator_with_realloc
construct	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^  void construct(pointer p, const value_type& val) {$/;"	f	class:instrumented_allocator
constructprogressstree	construct.cpp	/^Sint constructprogressstree(Suffixtree *stree,Uchar *text,Uint textlen,void (*progress)(Uint,void *),void (*finalprogress)(void *),void *info)$/;"	f
copy_from	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void copy_from(const dense_hashtable &ht, size_type min_buckets_wanted) {$/;"	f	class:dense_hashtable
copy_from	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void copy_from(const sparse_hashtable &ht, size_type min_buckets_wanted) {$/;"	f	class:sparse_hashtable
count	sparsehash-2.0.2/src/hash_test_interface.h	/^  size_type count(const key_type& key) const { return ht_.count(key); }$/;"	f	class:BaseHashtableInterface
count	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  size_type count(const key_type &key) const {$/;"	f	class:dense_hashtable
count	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  size_type count(const key_type &key) const {$/;"	f	class:sparse_hashtable
count_	sparsehash-2.0.2/src/hashtable_test.cc	/^  int* count_;$/;"	m	struct:__anon4::Alloc	file:
createTable	distribute.cpp	/^void createTable(Matchprocessinfo *matchprocessinfo) $/;"	f
creatememorymap	mapfile.cpp	/^\/*@null@*\/ void *creatememorymap(char *file,Uint line,char *filename,bool writemap,Uint *numofbytes)$/;"	f
creatememorymapforfiledesc	mapfile.cpp	/^\/*@null@*\/ void *creatememorymapforfiledesc(char *file,Uint line,Sint fd,bool writemap,Uint $/;"	f
cstring	sparsehash-2.0.2/src/libc_allocator_with_realloc_test.cc	/^                     libc_allocator_with_realloc<char> > cstring;$/;"	t	namespace:__anon3	file:
cstring_vector	sparsehash-2.0.2/src/libc_allocator_with_realloc_test.cc	/^typedef vector<cstring, libc_allocator_with_realloc<cstring> > cstring_vector;$/;"	t	namespace:__anon3	file:
currentbranchtabsize	streetyp.h	/^       currentbranchtabsize,  \/\/ current number of cells in branchtab$/;"	m	struct:Suffixtree
currentdepth	streetyp.h	/^       currentdepth,          \/\/ depth of the new branch node$/;"	m	struct:Suffixtree
currentisrcmatch	maxmatdef.h	/^       currentisrcmatch;       \/\/ true iff currently rc-matches are computed$/;"	m	struct:Matchprocessinfo
currentquerylen	maxmatdef.h	/^       currentquerylen;        \/\/ length of the current query sequence$/;"	m	struct:Matchprocessinfo
currentspace	mapfile.cpp	/^static Uint currentspace = 0,              \/\/ currently mapped num of bytes$/;"	v	file:
currentspace	space.cpp	/^            currentspace = 0,   \/\/ currently allocated num of bytes$/;"	v	file:
data	sparsehash-2.0.2/experimental/libchash.h	/^   ulong data;        \/* 4 bytes for data: either a pointer or an integer *\/$/;"	m	struct:__anon2
dataRead	sparsehash-2.0.2/experimental/libchash.h	/^   char * (*dataRead)(FILE *, int);   \/* how to load data from disk *\/$/;"	m	struct:HashTable
datadir	sparsehash-2.0.2/Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	sparsehash-2.0.2/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
dbstart	mumcand.h	/^       dbstart,      \/\/ start position in the subject-sequence$/;"	m	struct:MUMcandidate
deallocate	sparsehash-2.0.2/src/hashtable_test.cc	/^  void deallocate(pointer p, size_type) {$/;"	f	struct:__anon4::Alloc
deallocate	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  void deallocate(pointer p, size_type) {$/;"	f	class:libc_allocator_with_realloc
deallocate	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^  void deallocate(pointer p, size_type n) {$/;"	f	class:instrumented_allocator
declared	optdesc.h	/^       declared;             \/\/ is the option declared by$/;"	m	struct:OptionDescription
default_data	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool default_data() const {$/;"	f	class:HashtableInterface_DenseHashSet
default_data	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool default_data() const {$/;"	f	class:HashtableInterface_SparseHashSet
default_data	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename ht::data_type default_data() const {$/;"	f	class:HashtableInterface_DenseHashMap
default_data	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename ht::data_type default_data() const {$/;"	f	class:HashtableInterface_SparseHashMap
default_data	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::value_type default_data() const {$/;"	f	class:HashtableInterface_DenseHashtable
default_data	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::value_type default_data() const {$/;"	f	class:HashtableInterface_SparseHashtable
defined	multidef.h	/^  bool defined,          \/\/ show a description$/;"	m	struct:Showdescinfo
deleted_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  key_type deleted_key() const { return ht_.deleted_key(); }$/;"	f	class:BaseHashtableInterface
deleted_key	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  key_type deleted_key() const {$/;"	f	class:dense_hashtable
deleted_key	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  key_type deleted_key() const {$/;"	f	class:sparse_hashtable
deletememorymap	mapfile.cpp	/^Sint deletememorymap(char *file,Uint line,void *mappedfile)$/;"	f
delkey	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^    typename base::remove_const<key_type>::type delkey;$/;"	m	class:dense_hashtable::KeyInfo
delkey	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^    typename base::remove_const<key_type>::type delkey;$/;"	m	class:sparse_hashtable::KeyInfo
dense_hashtable	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  dense_hashtable(const dense_hashtable& ht,$/;"	f	class:dense_hashtable
dense_hashtable	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  explicit dense_hashtable(size_type expected_max_items_in_table = 0,$/;"	f	class:dense_hashtable
dense_hashtable	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^class dense_hashtable {$/;"	c
dense_hashtable_const_iterator	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  dense_hashtable_const_iterator($/;"	f	struct:dense_hashtable_const_iterator
dense_hashtable_const_iterator	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  dense_hashtable_const_iterator()$/;"	f	struct:dense_hashtable_const_iterator
dense_hashtable_const_iterator	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  dense_hashtable_const_iterator(const iterator &it)$/;"	f	struct:dense_hashtable_const_iterator
dense_hashtable_const_iterator	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^struct dense_hashtable_const_iterator {$/;"	s
dense_hashtable_iterator	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  dense_hashtable_iterator() { }$/;"	f	struct:dense_hashtable_iterator
dense_hashtable_iterator	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  dense_hashtable_iterator(const dense_hashtable<V,K,HF,ExK,SetK,EqK,A> *h,$/;"	f	struct:dense_hashtable_iterator
dense_hashtable_iterator	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^struct dense_hashtable_iterator {$/;"	s
depcomp	sparsehash-2.0.2/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depth	streetyp.h	/^       depth;               \/\/ the depth of the branching node$/;"	m	struct:Branchinfo
depth	streetyp.h	/^  Uint depth, headposition;$/;"	m	struct:Pathinfo
depthfirststree	dfs.cpp	/^Sint depthfirststree(Suffixtree *stree,Reference *startnode,$/;"	f
depthofpreviousmaxloc	findmaxmat.cpp	/^       depthofpreviousmaxloc;     \/\/ the depth of the previous maxloc$/;"	m	struct:Maxmatchinfo	file:
description	optdesc.h	/^       *description;         \/\/ help text describing purpose of option$/;"	m	struct:OptionDescription
descspace	multidef.h	/^  ArrayCharacters descspace;           \/\/ the space for the descriptions$/;"	m	struct:Multiseq
destroy	sparsehash-2.0.2/src/hashtable_test.cc	/^  void destroy(pointer p) { p->~value_type(); }$/;"	f	struct:__anon4::Alloc
destroy	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  void destroy(pointer p) { p->~value_type(); }$/;"	f	class:libc_allocator_with_realloc
destroy	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^  void destroy(pointer p) {$/;"	f	class:instrumented_allocator
destroy_buckets	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void destroy_buckets(size_type first, size_type last) {$/;"	f	class:dense_hashtable
destructive_begin	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  destructive_iterator destructive_begin() {$/;"	f	class:sparse_hashtable
destructive_end	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  destructive_iterator destructive_end() {$/;"	f	class:sparse_hashtable
destructive_iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  destructive_iterator;$/;"	t	class:sparse_hashtable
difference_type	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef typename HT::difference_type difference_type;$/;"	t	class:BaseHashtableInterface
difference_type	sparsehash-2.0.2/src/hashtable_test.cc	/^  typedef ptrdiff_t difference_type;$/;"	t	struct:__anon4::Alloc	file:
difference_type	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef typename value_alloc_type::difference_type difference_type;$/;"	t	class:dense_hashtable
difference_type	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef typename value_alloc_type::difference_type difference_type;$/;"	t	struct:dense_hashtable_const_iterator
difference_type	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef typename value_alloc_type::difference_type difference_type;$/;"	t	struct:dense_hashtable_iterator
difference_type	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  typedef ptrdiff_t difference_type;$/;"	t	class:libc_allocator_with_realloc
difference_type	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename value_alloc_type::difference_type difference_type;$/;"	t	class:sparse_hashtable
difference_type	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename value_alloc_type::difference_type difference_type;$/;"	t	struct:sparse_hashtable_const_iterator
difference_type	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename value_alloc_type::difference_type difference_type;$/;"	t	struct:sparse_hashtable_destructive_iterator
difference_type	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename value_alloc_type::difference_type difference_type;$/;"	t	struct:sparse_hashtable_iterator
difference_type	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^  typedef ptrdiff_t difference_type;$/;"	t	class:instrumented_allocator	file:
dist_doc_DATA	sparsehash-2.0.2/Makefile	/^dist_doc_DATA = AUTHORS COPYING ChangeLog INSTALL NEWS README README_windows.txt \\$/;"	m
distcleancheck_listfiles	sparsehash-2.0.2/Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	sparsehash-2.0.2/Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distuninstallcheck_listfiles	sparsehash-2.0.2/Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
dna	genDNA.py	/^dna = {1 : "a", 2 : "c", 3 : "g", 4 : "t"}$/;"	v
docdir	sparsehash-2.0.2/Makefile	/^docdir = $(prefix)\/share\/doc\/$(PACKAGE)-$(VERSION)$/;"	m
dummy	sparsehash-2.0.2/src/sparsehash/template_util.h	/^  char dummy[2];$/;"	m	struct:big_
dvidir	sparsehash-2.0.2/Makefile	/^dvidir = ${docdir}$/;"	m
dynamicstrdup	space.cpp	/^\/*@notnull@*\/ char *dynamicstrdup(char *file,Uint line,char *source)$/;"	f
edgelen	streetyp.h	/^  Uint edgelen,         \/\/ length of edge$/;"	m	struct:Location
empty	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool empty() const                 { return ht_.empty(); }$/;"	f	class:BaseHashtableInterface
empty	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool empty() const          { return size() == 0; }$/;"	f	class:dense_hashtable
empty	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool empty() const                  { return size() == 0; }$/;"	f	class:sparse_hashtable
empty_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  key_type empty_key() const { return ht_.empty_key(); }$/;"	f	class:BaseHashtableInterface
empty_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type empty_key() const { return typename p::key_type(); }$/;"	f	class:HashtableInterface_SparseHashMap
empty_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type empty_key() const { return typename p::key_type(); }$/;"	f	class:HashtableInterface_SparseHashSet
empty_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type empty_key() const { return typename p::key_type(); }$/;"	f	class:HashtableInterface_SparseHashtable
empty_key	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  value_type empty_key() const {$/;"	f	class:dense_hashtable
emptyval	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^    value_type emptyval;    \/\/ which key marks unused entries$/;"	m	class:dense_hashtable::ValInfo
encoding	distribute.cpp	/^Uint encoding(Uchar *example, int wordsize) $/;"	f
end	sparsehash-2.0.2/src/hash_test_interface.h	/^  const_iterator end() const   {$/;"	f	class:BaseHashtableInterface
end	sparsehash-2.0.2/src/hash_test_interface.h	/^  const_local_iterator end(size_type i) const    {$/;"	f	class:BaseHashtableInterface
end	sparsehash-2.0.2/src/hash_test_interface.h	/^  iterator end() {$/;"	f	class:BaseHashtableInterface
end	sparsehash-2.0.2/src/hash_test_interface.h	/^  local_iterator end(size_type i) {$/;"	f	class:BaseHashtableInterface
end	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  const_iterator end() const   { return const_iterator(this, table + num_buckets,$/;"	f	class:dense_hashtable
end	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  const_local_iterator end(size_type i) const {$/;"	f	class:dense_hashtable
end	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  iterator end()               { return iterator(this, table + num_buckets,$/;"	f	class:dense_hashtable
end	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  local_iterator end(size_type i) {$/;"	f	class:dense_hashtable
end	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  pointer pos, end;$/;"	m	struct:dense_hashtable_const_iterator
end	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  pointer pos, end;$/;"	m	struct:dense_hashtable_iterator
end	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  const_iterator end() const   { return const_iterator(this,$/;"	f	class:sparse_hashtable
end	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  const_local_iterator end(size_type i) const {$/;"	f	class:sparse_hashtable
end	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  iterator end()               { return iterator(this, table.nonempty_end(),$/;"	f	class:sparse_hashtable
end	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  local_iterator end(size_type i) {$/;"	f	class:sparse_hashtable
end	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  st_iterator pos, end;$/;"	m	struct:sparse_hashtable_const_iterator
end	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  st_iterator pos, end;$/;"	m	struct:sparse_hashtable_destructive_iterator
end	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  st_iterator pos, end;$/;"	m	struct:sparse_hashtable_iterator
enlarge_factor	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  float enlarge_factor() const {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
enlarge_factor_	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  float enlarge_factor_;         \/\/ how full before resize$/;"	m	class:sparsehash_internal::sh_hashtable_settings
enlarge_size	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  size_type enlarge_size(size_type x) const {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
enlarge_threshold	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  size_type enlarge_threshold() const {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
enlarge_threshold_	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  size_type enlarge_threshold_;  \/\/ table.size() * enlarge_factor$/;"	m	class:sparsehash_internal::sh_hashtable_settings
enumeratemaxmatches	findmaxmat.cpp	/^static Sint enumeratemaxmatches (Maxmatchinfo *maxmatchinfo,$/;"	f	file:
enumlocations	streedbg.cpp	/^void enumlocations(Suffixtree *stree,$/;"	f
enumlocationssubtree	streedbg.cpp	/^static void enumlocationssubtree(Suffixtree *stree,Uint *btptr,$/;"	f	file:
equal_range	sparsehash-2.0.2/src/hash_test_interface.h	/^  std::pair<const_iterator, const_iterator> equal_range(const key_type& key)$/;"	f	class:BaseHashtableInterface
equal_range	sparsehash-2.0.2/src/hash_test_interface.h	/^  std::pair<iterator, iterator> equal_range(const key_type& key) {$/;"	f	class:BaseHashtableInterface
equal_range	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  std::pair<const_iterator,const_iterator> equal_range(const key_type& key)$/;"	f	class:dense_hashtable
equal_range	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  std::pair<iterator,iterator> equal_range(const key_type& key) {$/;"	f	class:dense_hashtable
equal_range	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  std::pair<const_iterator,const_iterator> equal_range(const key_type& key)$/;"	f	class:sparse_hashtable
equal_range	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  std::pair<iterator,iterator> equal_range(const key_type& key) {$/;"	f	class:sparse_hashtable
equals	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^    bool equals(const key_type& a, const key_type& b) const {$/;"	f	class:dense_hashtable::KeyInfo
equals	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool equals(const key_type& a, const key_type& b) const {$/;"	f	class:dense_hashtable
equals	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^    bool equals(const key_type& a, const key_type& b) const {$/;"	f	class:sparse_hashtable::KeyInfo
equals	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool equals(const key_type& a, const key_type& b) const {$/;"	f	class:sparse_hashtable
erase	sparsehash-2.0.2/src/hash_test_interface.h	/^  size_type erase(const key_type& key)   { return ht_.erase(key); }$/;"	f	class:BaseHashtableInterface
erase	sparsehash-2.0.2/src/hash_test_interface.h	/^  void erase(typename HT::iterator f, typename HT::iterator l) {$/;"	f	class:BaseHashtableInterface
erase	sparsehash-2.0.2/src/hash_test_interface.h	/^  void erase(typename HT::iterator it)   { ht_.erase(it); }$/;"	f	class:BaseHashtableInterface
erase	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  size_type erase(const key_type& key) {$/;"	f	class:dense_hashtable
erase	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void erase(const_iterator f, const_iterator l) {$/;"	f	class:dense_hashtable
erase	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void erase(const_iterator pos) {$/;"	f	class:dense_hashtable
erase	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void erase(iterator f, iterator l) {$/;"	f	class:dense_hashtable
erase	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void erase(iterator pos) {$/;"	f	class:dense_hashtable
erase	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  size_type erase(const key_type& key) {$/;"	f	class:sparse_hashtable
erase	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void erase(const_iterator f, const_iterator l) {$/;"	f	class:sparse_hashtable
erase	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void erase(const_iterator pos) {$/;"	f	class:sparse_hashtable
erase	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void erase(iterator f, iterator l) {$/;"	f	class:sparse_hashtable
erase	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void erase(iterator pos) {$/;"	f	class:sparse_hashtable
errorcode	seterror.cpp	/^static Sint errorcode = 0;$/;"	v	file:
errormessage	seterror.cpp	/^static char errormessage[MAXERRORMSG+1];$/;"	v	file:
exec_prefix	sparsehash-2.0.2/Makefile	/^	echo 'exec_prefix='`echo '$(exec_prefix)' | sed 's@^$(prefix)@$${prefix}@'` >> "$@".tmp$/;"	m
exec_prefix	sparsehash-2.0.2/Makefile	/^exec_prefix = ${prefix}$/;"	m
extract_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  ExtractKey extract_key;$/;"	m	class:HashtableInterface_DenseHashtable
extract_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  ExtractKey extract_key;$/;"	m	class:HashtableInterface_SparseHashtable
extractsubtree	streedbg.cpp	/^void extractsubtree(Suffixtree *stree,Uint *btptr,sparsetable<Uint> &tNodes)$/;"	f
fSaveKeys	sparsehash-2.0.2/experimental/libchash.h	/^   int fSaveKeys;       \/* 1 if we copy keys locally; 2 if keys in one block *\/$/;"	m	struct:HashTable
false_	sparsehash-2.0.2/src/sparsehash/template_util.h	/^typedef false_type false_;$/;"	t
false_type	sparsehash-2.0.2/src/sparsehash/template_util.h	/^typedef integral_constant<bool, false> false_type;$/;"	t
fileallocated	space.cpp	/^  char *fileallocated; \/\/ the filenames where the block was allocated$/;"	m	struct:Blockdescription	file:
filemapped	mapfile.cpp	/^static char *filemapped[MAXMAPPEDFILES] = {NULL};  $/;"	v	file:
fillTable	distribute.cpp	/^void fillTable(Suffixtree *stree, Table &table, Uchar *buffer,Uint *btptr, short int wordsize)$/;"	f
fill_range_with_empty	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void fill_range_with_empty(pointer table_start, pointer table_end) {$/;"	f	class:dense_hashtable
find	sparsehash-2.0.2/src/hash_test_interface.h	/^  const_iterator find(const key_type& key) const {$/;"	f	class:BaseHashtableInterface
find	sparsehash-2.0.2/src/hash_test_interface.h	/^  iterator find(const key_type& key) {$/;"	f	class:BaseHashtableInterface
find	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  const_iterator find(const key_type& key) const {$/;"	f	class:dense_hashtable
find	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  iterator find(const key_type& key) {$/;"	f	class:dense_hashtable
find	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  const_iterator find(const key_type& key) const {$/;"	f	class:sparse_hashtable
find	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  iterator find(const key_type& key) {$/;"	f	class:sparse_hashtable
find_or_insert	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  value_type& find_or_insert(const key_type& key) {$/;"	f	class:dense_hashtable
find_or_insert	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  value_type& find_or_insert(const key_type& key) {$/;"	f	class:sparse_hashtable
find_position	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  std::pair<size_type, size_type> find_position(const key_type &key) const {$/;"	f	class:dense_hashtable
find_position	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  std::pair<size_type, size_type> find_position(const key_type &key) const {$/;"	f	class:sparse_hashtable
findmaxmatches	findmaxmat.cpp	/^Sint findmaxmatches(Uchar *reference,$/;"	f
findmaxmatchesonbothstrands	procmaxmat.cpp	/^static Sint findmaxmatchesonbothstrands(void *info,Uint seqnum,$/;"	f	file:
findmumcandidates	findmumcand.cpp	/^Sint findmumcandidates(Uchar *reference, Uint referencelen, Table &table, Uint minmatchlength, Uint chunks, Uint prefix, Processmatchfunction processmumcandidate, void *processinfo, Uchar *query, Uint querylen, Uint seqnum)$/;"	f
findprefixpathfromnodestree	scanpref.cpp	/^\/*@null@*\/Uchar *findprefixpathfromnodestree(Suffixtree *stree,$/;"	f
findprefixpathstree	scanpref.cpp	/^\/*@null@*\/ Uchar *findprefixpathstree(Suffixtree *stree,$/;"	f
firstchild	streetyp.h	/^  Reference firstchild,     \/\/ the reference to the first child$/;"	m	struct:Branchinfo
firstnotallocated	streetyp.h	/^       *firstnotallocated,    \/\/ refers to the last address, such that at$/;"	m	struct:Suffixtree
firstptr	streetyp.h	/^  Uchar *firstptr;     \/\/ pointer to first character of edge label$/;"	m	struct:Location
forward	maxmatdef.h	/^       forward,                 \/\/ compute matches on forward strand$/;"	m	struct:MMcallinfo
forward	maxmatdef.h	/^       forward,                \/\/ compute forward matches$/;"	m	struct:Matchprocessinfo
fourcolumn	maxmatdef.h	/^       fourcolumn,              \/\/ always use 4 column format$/;"	m	struct:MMcallinfo
fourcolumn	maxmatdef.h	/^       fourcolumn,             \/\/ is option \\texttt{-F} on?$/;"	m	struct:Matchprocessinfo
fpData	sparsehash-2.0.2/experimental/libchash.h	/^   FILE *fpData;        \/* if non-NULL, what item->data points into *\/$/;"	m	struct:HashTable
freemultiseq	multiseq.cpp	/^void freemultiseq(Multiseq *multiseq)$/;"	f
freespaceviaptr	space.cpp	/^void freespaceviaptr(char *file,Uint line,void *ptr)$/;"	f
freestree	construct.cpp	/^void freestree(Suffixtree *stree)$/;"	f
g_expected	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^static const char g_expected[] = ($/;"	v	file:
g_num_copies	sparsehash-2.0.2/src/time_hash_map.cc	/^static int g_num_copies;$/;"	v	file:
g_num_hashes	sparsehash-2.0.2/src/time_hash_map.cc	/^static int g_num_hashes;$/;"	v	file:
generalcounter	streetyp.h	/^  void *generalcounter;$/;"	m	struct:Suffixtree
getMaxNodesNumber	streedbg.cpp	/^Uint getMaxNodesNumber(Suffixtree *stree)$/;"	f
get_allocator	sparsehash-2.0.2/src/hash_test_interface.h	/^  allocator_type get_allocator() const { return ht_.get_allocator(); }$/;"	f	class:BaseHashtableInterface
get_allocator	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  allocator_type get_allocator() const {$/;"	f	class:dense_hashtable
get_allocator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  allocator_type get_allocator() const    { return table.get_allocator(); }$/;"	f	class:sparse_hashtable
get_data	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool get_data(const typename p::value_type&) const {$/;"	f	class:HashtableInterface_DenseHashSet
get_data	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool get_data(const typename p::value_type&) const {$/;"	f	class:HashtableInterface_SparseHashSet
get_data	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename ht::data_type get_data(const typename p::value_type& value) const {$/;"	f	class:HashtableInterface_DenseHashMap
get_data	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename ht::data_type get_data(const typename p::value_type& value) const {$/;"	f	class:HashtableInterface_SparseHashMap
get_data	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::value_type get_data(const typename p::value_type& value) const {$/;"	f	class:HashtableInterface_DenseHashtable
get_data	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::value_type get_data(const typename p::value_type& value) const {$/;"	f	class:HashtableInterface_SparseHashtable
get_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type get_key(const typename p::value_type& value) const {$/;"	f	class:HashtableInterface_DenseHashMap
get_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type get_key(const typename p::value_type& value) const {$/;"	f	class:HashtableInterface_DenseHashSet
get_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type get_key(const typename p::value_type& value) const {$/;"	f	class:HashtableInterface_DenseHashtable
get_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type get_key(const typename p::value_type& value) const {$/;"	f	class:HashtableInterface_SparseHashMap
get_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type get_key(const typename p::value_type& value) const {$/;"	f	class:HashtableInterface_SparseHashSet
get_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type get_key(const typename p::value_type& value) const {$/;"	f	class:HashtableInterface_SparseHashtable
get_key	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^    typename ExtractKey::result_type get_key(const_reference v) const {$/;"	f	class:dense_hashtable::KeyInfo
get_key	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typename ExtractKey::result_type get_key(const_reference v) const {$/;"	f	class:dense_hashtable
get_key	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^    typename ExtractKey::result_type get_key(const_reference v) const {$/;"	f	class:sparse_hashtable::KeyInfo
get_key	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typename ExtractKey::result_type get_key(const_reference v) const {$/;"	f	class:sparse_hashtable
get_resizing_parameters	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void get_resizing_parameters(float* shrink, float* grow) const {$/;"	f	class:dense_hashtable
get_resizing_parameters	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void get_resizing_parameters(float* shrink, float* grow) const {$/;"	f	class:sparse_hashtable
getbranchinfostree	access.cpp	/^void getbranchinfostree(Suffixtree *stree,Uint whichinfo,$/;"	f
geterror	seterror.cpp	/^Sint geterror(void)$/;"	f
getheadstringstree	access.cpp	/^void getheadstringstree(Suffixtree *stree,Stringtype *str)$/;"	f
getlargelinkconstruction	construct.cpp	/^static Uint getlargelinkconstruction(Suffixtree *stree)$/;"	f	file:
getlargelinkstree	access.cpp	/^Uint getlargelinkstree(\/*@unused@*\/ Suffixtree *stree,Bref btptr,Uint depth)$/;"	f
getleafinfostree	access.cpp	/^void getleafinfostree(Suffixtree *stree,Leafinfo *leafinfo,Lref lptr)$/;"	f
getmaxdesclen	procmaxmat.cpp	/^static Sint getmaxdesclen(Multiseq *multiseq)$/;"	f	file:
getmaxmatinput	maxmatinp.cpp	/^Sint getmaxmatinput (Multiseq *subjectmultiseq, bool matchnucleotidesonly, char *subjectfile)$/;"	f
getmaxtextlenstree	access.cpp	/^Uint getmaxtextlenstree(void)$/;"	f
getoptindent	procopt.cpp	/^static Uint getoptindent(int *excludetab,OptionDescription *opt,Uint numofopt)$/;"	f	file:
getrecordnum	multiseq.cpp	/^Sint getrecordnum(Uint *recordseps,Uint numofrecords,Uint totalwidth,$/;"	f
getseqnum	multiseq.cpp	/^Sint getseqnum(Multiseq *multiseq,Uint position)$/;"	f
getspacepeak	space.cpp	/^Uint getspacepeak(void)$/;"	f
googleinclude_HEADERS	sparsehash-2.0.2/Makefile	/^googleinclude_HEADERS = \\$/;"	m
googleincludedir	sparsehash-2.0.2/Makefile	/^googleincludedir = $(includedir)\/google$/;"	m
googleinternalinclude_HEADERS	sparsehash-2.0.2/Makefile	/^googleinternalinclude_HEADERS = \\$/;"	m
googleinternalincludedir	sparsehash-2.0.2/Makefile	/^googleinternalincludedir = $(includedir)\/google\/sparsehash$/;"	m
grgKeyTruncMask	sparsehash-2.0.2/experimental/libchash.c	/^char grgKeyTruncMask[sizeof(ulong)][sizeof(ulong)];$/;"	v
has_trivial_assign	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class A, int N> struct has_trivial_assign<A[N]>$/;"	s
has_trivial_assign	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T, class U> struct has_trivial_assign<std::pair<T, U> >$/;"	s
has_trivial_assign	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct has_trivial_assign : is_pod<T> { };$/;"	s
has_trivial_assign	sparsehash-2.0.2/src/type_traits_unittest.cc	/^template<> struct has_trivial_assign<D> : true_type { };$/;"	s	file:
has_trivial_constructor	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class A, int N> struct has_trivial_constructor<A[N]>$/;"	s
has_trivial_constructor	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T, class U> struct has_trivial_constructor<std::pair<T, U> >$/;"	s
has_trivial_constructor	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct has_trivial_constructor : is_pod<T> { };$/;"	s
has_trivial_constructor	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct has_trivial_constructor<const T>$/;"	s
has_trivial_constructor	sparsehash-2.0.2/src/type_traits_unittest.cc	/^template<> struct has_trivial_constructor<E> : true_type { };$/;"	s	file:
has_trivial_copy	sparsehash-2.0.2/src/hashtable_test.cc	/^template<> struct has_trivial_copy<Memmove> : true_type { };$/;"	s	file:
has_trivial_copy	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class A, int N> struct has_trivial_copy<A[N]>$/;"	s
has_trivial_copy	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T, class U> struct has_trivial_copy<std::pair<T, U> >$/;"	s
has_trivial_copy	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct has_trivial_copy : is_pod<T> { };$/;"	s
has_trivial_copy	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct has_trivial_copy<const T> : has_trivial_copy<T> { };$/;"	s
has_trivial_copy	sparsehash-2.0.2/src/time_hash_map.cc	/^struct has_trivial_copy< HashObject<Size, Hashsize> > : true_type { };$/;"	s	file:
has_trivial_copy	sparsehash-2.0.2/src/type_traits_unittest.cc	/^template<> struct has_trivial_copy<C> : true_type { };$/;"	s	file:
has_trivial_destructor	sparsehash-2.0.2/src/hashtable_test.cc	/^template<> struct has_trivial_destructor<Memmove> : true_type { };$/;"	s	file:
has_trivial_destructor	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class A, int N> struct has_trivial_destructor<A[N]>$/;"	s
has_trivial_destructor	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T, class U> struct has_trivial_destructor<std::pair<T, U> >$/;"	s
has_trivial_destructor	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct has_trivial_destructor : is_pod<T> { };$/;"	s
has_trivial_destructor	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct has_trivial_destructor<const T>$/;"	s
has_trivial_destructor	sparsehash-2.0.2/src/time_hash_map.cc	/^struct has_trivial_destructor< HashObject<Size, Hashsize> > : true_type { };$/;"	s	file:
has_trivial_destructor	sparsehash-2.0.2/src/type_traits_unittest.cc	/^template<> struct has_trivial_destructor<F> : true_type { };$/;"	s	file:
hash	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  size_type hash(const key_type& v) const {$/;"	f	class:dense_hashtable
hash	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  size_type hash(const key_type& v) const {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
hash	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  size_type hash(const key_type& v) const {$/;"	f	class:sparse_hashtable
hash_funct	sparsehash-2.0.2/src/hash_test_interface.h	/^  hasher hash_funct() const { return ht_.hash_funct(); }$/;"	f	class:BaseHashtableInterface
hash_funct	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  hasher hash_funct() const               { return settings; }$/;"	f	class:dense_hashtable
hash_funct	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  hasher hash_funct() const               { return settings; }$/;"	f	class:sparse_hashtable
hash_function	sparsehash-2.0.2/src/hash_test_interface.h	/^  hasher hash_function() const { return ht_.hash_function(); }$/;"	f	class:BaseHashtableInterface
hash_function	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::hasher hash_function() { return this->hash_funct(); }$/;"	f	class:HashtableInterface_DenseHashtable
hash_function	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::hasher hash_function() { return this->hash_funct(); }$/;"	f	class:HashtableInterface_SparseHashtable
hash_munger	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  template<class HashKey> class hash_munger {$/;"	c	class:sparsehash_internal::sh_hashtable_settings
hash_munger	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  template<class HashKey> class hash_munger<HashKey*> {$/;"	c	class:sparsehash_internal::sh_hashtable_settings
hasher	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef typename HT::hasher hasher;$/;"	t	class:BaseHashtableInterface
hasher	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef HashFcn hasher;$/;"	t	class:dense_hashtable
hasher	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  typedef HashFunc hasher;$/;"	t	class:sparsehash_internal::sh_hashtable_settings
hasher	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef HashFcn hasher;$/;"	t	class:sparse_hashtable
hashfn	sparsehash-2.0.2/doc/performance.html	/^<H2><A name="hashfn">A Note on Hash Functions<\/A><\/H2>$/;"	a
hashtable_test_LDADD	sparsehash-2.0.2/Makefile	/^hashtable_test_LDADD = $(LDADD)$/;"	m
hashtable_test_OBJECTS	sparsehash-2.0.2/Makefile	/^hashtable_test_OBJECTS = $(am_hashtable_test_OBJECTS) \\$/;"	m
hashtable_test_SOURCES	sparsehash-2.0.2/Makefile	/^hashtable_test_SOURCES = \\$/;"	m
headend	streetyp.h	/^         *headend,            \/\/ of the head location \\((\\overline{u},v)\\). $/;"	m	struct:Suffixtree
headnode	streetyp.h	/^       *headnode,             \/\/ left component of head location$/;"	m	struct:Suffixtree
headnodedepth	streetyp.h	/^       headnodedepth,         \/\/ the depth of the headnode$/;"	m	struct:Suffixtree
headposition	streetyp.h	/^  Uint depth, headposition;$/;"	m	struct:Pathinfo
headposition	streetyp.h	/^  Uint headposition,        \/\/ the head position of the branching node$/;"	m	struct:Branchinfo
headstart	streetyp.h	/^  Uchar *headstart,          \/\/ these references represent the right component$/;"	m	struct:Suffixtree
host	sparsehash-2.0.2/Makefile	/^host = $/;"	m
host_alias	sparsehash-2.0.2/Makefile	/^host_alias = $/;"	m
host_cpu	sparsehash-2.0.2/Makefile	/^host_cpu = $/;"	m
host_os	sparsehash-2.0.2/Makefile	/^host_os = $/;"	m
host_triplet	sparsehash-2.0.2/Makefile	/^host_triplet = $/;"	m
host_vendor	sparsehash-2.0.2/Makefile	/^host_vendor = $/;"	m
ht	sparsehash-2.0.2/src/hash_test_interface.h	/^                           EqualKey, Alloc> ht;$/;"	t	class:HashtableInterface_DenseHashtable
ht	sparsehash-2.0.2/src/hash_test_interface.h	/^                           EqualKey, Alloc> ht;$/;"	t	class:HashtableInterface_SparseHashtable
ht	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef dense_hash_map<Key, T, HashFcn, EqualKey, Alloc> ht;$/;"	t	class:HashtableInterface_DenseHashMap
ht	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef dense_hash_set<Value, HashFcn, EqualKey, Alloc> ht;$/;"	t	class:HashtableInterface_DenseHashSet
ht	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef sparse_hash_map<Key, T, HashFcn, EqualKey, Alloc> ht;$/;"	t	class:HashtableInterface_SparseHashMap
ht	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef sparse_hash_set<Value, HashFcn, EqualKey, Alloc> ht;$/;"	t	class:HashtableInterface_SparseHashSet
ht	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  const dense_hashtable<V,K,HF,ExK,SetK,EqK,A> *ht;$/;"	m	struct:dense_hashtable_const_iterator
ht	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  const dense_hashtable<V,K,HF,ExK,SetK,EqK,A> *ht;$/;"	m	struct:dense_hashtable_iterator
ht	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  const sparse_hashtable<V,K,HF,ExK,SetK,EqK,A> *ht;$/;"	m	struct:sparse_hashtable_const_iterator
ht	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  const sparse_hashtable<V,K,HF,ExK,SetK,EqK,A> *ht;$/;"	m	struct:sparse_hashtable_destructive_iterator
ht	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  const sparse_hashtable<V,K,HF,ExK,SetK,EqK,A> *ht;$/;"	m	struct:sparse_hashtable_iterator
ht_	sparsehash-2.0.2/src/hash_test_interface.h	/^  HT ht_;$/;"	m	class:BaseHashtableInterface
ht_	sparsehash-2.0.2/src/hashtable_test.cc	/^  HashtableType ht_;$/;"	m	class:__anon4::HashtableTest	file:
htmldir	sparsehash-2.0.2/Makefile	/^htmldir = ${docdir}$/;"	m
i	sparsehash-2.0.2/src/hashtable_test.cc	/^  int i;$/;"	m	struct:__anon5::Memmove	file:
i	sparsehash-2.0.2/src/hashtable_test.cc	/^  int i;$/;"	m	struct:__anon5::NoMemmove	file:
i_	sparsehash-2.0.2/src/time_hash_map.cc	/^  int i_;        \/\/ the key used for hashing$/;"	m	class:HashObject	file:
id	sparsehash-2.0.2/src/hashtable_test.cc	/^  int id() const { return id_; }$/;"	f	struct:__anon4::Alloc
id	sparsehash-2.0.2/src/hashtable_test.cc	/^  int id() const { return id_; }$/;"	f	struct:__anon4::Hasher
id_	sparsehash-2.0.2/src/hashtable_test.cc	/^  int id_;$/;"	m	struct:__anon4::Alloc	file:
id_	sparsehash-2.0.2/src/hashtable_test.cc	/^  mutable int id_;$/;"	m	struct:__anon4::Hasher	file:
identity_	sparsehash-2.0.2/src/sparsehash/template_util.h	/^struct identity_ {$/;"	s
if_	sparsehash-2.0.2/src/sparsehash/template_util.h	/^struct if_<false, A, B> {$/;"	s
if_	sparsehash-2.0.2/src/sparsehash/template_util.h	/^struct if_{$/;"	s
inc_num_ht_copies	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  void inc_num_ht_copies() {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
includedir	sparsehash-2.0.2/Makefile	/^	echo 'includedir='`echo '$(includedir)' | sed 's@^$(prefix)@$${prefix}@'` >> "$@".tmp$/;"	m
includedir	sparsehash-2.0.2/Makefile	/^includedir = ${prefix}\/include$/;"	m
infodir	sparsehash-2.0.2/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
inheritfrompath	findmaxmat.cpp	/^static void inheritfrompath(ArrayPathinfo *matchpath,Location *maxloc,Nodeinfo *stacktop,Bref nodeptr,Uint accessindex,Uint inheritdepth)$/;"	f	file:
initSuffixtree	construct.cpp	/^static void initSuffixtree(Suffixtree *stree,Uchar *text,Uint textlen)$/;"	f	file:
initmultiseq	multiseq.cpp	/^void initmultiseq(Multiseq *multiseq)$/;"	f
initoptions	procopt.cpp	/^void initoptions(OptionDescription *options,Uint numofoptions)$/;"	f
insert	sparsehash-2.0.2/src/hash_test_interface.h	/^  iterator insert(typename HT::iterator, const value_type& obj) {$/;"	f	class:BaseHashtableInterface
insert	sparsehash-2.0.2/src/hash_test_interface.h	/^  std::pair<iterator, bool> insert(const value_type& obj) {$/;"	f	class:BaseHashtableInterface
insert	sparsehash-2.0.2/src/hash_test_interface.h	/^  void insert(InputIterator f, InputIterator l) {$/;"	f	class:BaseHashtableInterface
insert	sparsehash-2.0.2/src/hash_test_interface.h	/^  void insert(typename HT::const_iterator f, typename HT::const_iterator l) {$/;"	f	class:BaseHashtableInterface
insert	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  std::pair<iterator, bool> insert(const_reference obj) {$/;"	f	class:dense_hashtable
insert	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void insert(ForwardIterator f, ForwardIterator l, std::forward_iterator_tag) {$/;"	f	class:dense_hashtable
insert	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void insert(InputIterator f, InputIterator l) {$/;"	f	class:dense_hashtable
insert	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void insert(InputIterator f, InputIterator l, std::input_iterator_tag) {$/;"	f	class:dense_hashtable
insert	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  std::pair<iterator, bool> insert(const_reference obj) {$/;"	f	class:sparse_hashtable
insert	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void insert(ForwardIterator f, ForwardIterator l, std::forward_iterator_tag) {$/;"	f	class:sparse_hashtable
insert	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void insert(InputIterator f, InputIterator l) {$/;"	f	class:sparse_hashtable
insert	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void insert(InputIterator f, InputIterator l, std::input_iterator_tag) {$/;"	f	class:sparse_hashtable
insert_at	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  iterator insert_at(const_reference obj, size_type pos) {$/;"	f	class:dense_hashtable
insert_at	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  iterator insert_at(const_reference obj, size_type pos) {$/;"	f	class:sparse_hashtable
insert_noresize	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  std::pair<iterator, bool> insert_noresize(const_reference obj) {$/;"	f	class:dense_hashtable
insert_noresize	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  std::pair<iterator, bool> insert_noresize(const_reference obj) {$/;"	f	class:sparse_hashtable
insertbranchnode	construct.cpp	/^static void insertbranchnode(Suffixtree *stree)$/;"	f	file:
insertinleaflist	dfs.cpp	/^static Sint insertinleaflist(Uint leafindex,\/*@unused@*\/ Bref lcpnode,$/;"	f	file:
insertleaf	construct.cpp	/^static void insertleaf(Suffixtree *stree)$/;"	f	file:
insertleafcalls	streetyp.h	/^  Uint insertleafcalls,$/;"	m	struct:Suffixtree
insertnode	streetyp.h	/^       insertnode,            \/\/ the node the split edge leads to $/;"	m	struct:Suffixtree
insertprev	streetyp.h	/^       insertprev,            \/\/ the edge preceeding the split edge$/;"	m	struct:Suffixtree
install_sh	sparsehash-2.0.2/Makefile	/^install_sh = ${SHELL} \/home\/jcgarcia\/Toci\/sparsehash-2.0.2\/install-sh$/;"	m
install_sh_DATA	sparsehash-2.0.2/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	sparsehash-2.0.2/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	sparsehash-2.0.2/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
instrumented_allocator	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^  explicit instrumented_allocator(const instrumented_allocator<U>&) {}$/;"	f	class:instrumented_allocator
instrumented_allocator	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^  instrumented_allocator() {}$/;"	f	class:instrumented_allocator
instrumented_allocator	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^  instrumented_allocator(const instrumented_allocator&) {}$/;"	f	class:instrumented_allocator
instrumented_allocator	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^template <class T> class instrumented_allocator {$/;"	c	file:
int2ref	access.cpp	/^static void int2ref(Suffixtree *stree,Reference *ref,Uint i)$/;"	f	file:
int32	sparsehash-2.0.2/src/type_traits_unittest.cc	/^typedef int int32;$/;"	t	file:
int64	sparsehash-2.0.2/src/type_traits_unittest.cc	/^typedef long int64;$/;"	t	file:
int_alloc	sparsehash-2.0.2/src/libc_allocator_with_realloc_test.cc	/^typedef libc_allocator_with_realloc<int> int_alloc;$/;"	t	namespace:__anon3	file:
integral_constant	sparsehash-2.0.2/src/sparsehash/template_util.h	/^struct integral_constant {$/;"	s
internal	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^namespace internal {$/;"	n
internalinclude_HEADERS	sparsehash-2.0.2/Makefile	/^internalinclude_HEADERS = \\$/;"	m
internalincludedir	sparsehash-2.0.2/Makefile	/^internalincludedir = $(sparsehashincludedir)\/internal$/;"	m
intp_alloc	sparsehash-2.0.2/src/libc_allocator_with_realloc_test.cc	/^typedef int_alloc::rebind<int*>::other intp_alloc;$/;"	t	namespace:__anon3	file:
io	sparsehash-2.0.2/doc/dense_hash_map.html	/^<h3><A NAME="io">Input\/Output<\/A><\/h3>$/;"	a
io	sparsehash-2.0.2/doc/dense_hash_set.html	/^<h3><A NAME=io>Input\/Output<\/A><\/h3>$/;"	a
io	sparsehash-2.0.2/doc/sparse_hash_map.html	/^<h3><A NAME=io>Input\/Output<\/A><\/h3>$/;"	a
io	sparsehash-2.0.2/doc/sparse_hash_set.html	/^<h3><A NAME=io>Input\/Output<\/A><\/h3>$/;"	a
io	sparsehash-2.0.2/doc/sparsetable.html	/^<h3><A NAME=io>Input\/Output<\/A><\/h3>$/;"	a
is_class_or_union	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_class_or_union {$/;"	s	namespace:internal
is_convertible	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^struct is_convertible$/;"	s
is_custom_alloc	sparsehash-2.0.2/src/hashtable_test.cc	/^  bool is_custom_alloc() const { return true; }$/;"	f	struct:__anon4::Alloc
is_enum	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_enum$/;"	s
is_enum	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_enum<const T> : is_enum<T> { };$/;"	s
is_enum	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_enum<const volatile T> : is_enum<T> { };$/;"	s
is_enum	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_enum<volatile T> : is_enum<T> { };$/;"	s
is_enum_impl	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <bool NotUnum, class T> struct is_enum_impl$/;"	s	namespace:internal
is_enum_impl	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_enum_impl<true, T> : false_type { };$/;"	s	namespace:internal
is_floating_point	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_floating_point : false_type { };$/;"	s
is_floating_point	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_floating_point<const T>$/;"	s
is_floating_point	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_floating_point<const volatile T>$/;"	s
is_floating_point	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_floating_point<volatile T>$/;"	s
is_floating_point	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<> struct is_floating_point<double> : true_type { };$/;"	s
is_floating_point	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<> struct is_floating_point<float> : true_type { };$/;"	s
is_floating_point	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<> struct is_floating_point<long double> : true_type { };$/;"	s
is_integral	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_integral : false_type { };$/;"	s
is_integral	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_integral<const T> : is_integral<T> { };$/;"	s
is_integral	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_integral<const volatile T> : is_integral<T> { };$/;"	s
is_integral	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_integral<volatile T> : is_integral<T> { };$/;"	s
is_integral	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<> struct is_integral<__wchar_t> : true_type { };$/;"	s
is_integral	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<> struct is_integral<bool> : true_type { };$/;"	s
is_integral	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<> struct is_integral<char> : true_type { };$/;"	s
is_integral	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<> struct is_integral<int> : true_type { };$/;"	s
is_integral	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<> struct is_integral<long long> : true_type { };$/;"	s
is_integral	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<> struct is_integral<long> : true_type { };$/;"	s
is_integral	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<> struct is_integral<short> : true_type { };$/;"	s
is_integral	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<> struct is_integral<signed char> : true_type { };$/;"	s
is_integral	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<> struct is_integral<unsigned char> : true_type { };$/;"	s
is_integral	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<> struct is_integral<unsigned int> : true_type { };$/;"	s
is_integral	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<> struct is_integral<unsigned long long> : true_type { };$/;"	s
is_integral	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<> struct is_integral<unsigned long> : true_type { };$/;"	s
is_integral	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<> struct is_integral<unsigned short> : true_type { };$/;"	s
is_integral	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<> struct is_integral<wchar_t> : true_type { };$/;"	s
is_pod	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_pod$/;"	s
is_pod	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_pod<const T> : is_pod<T> { };$/;"	s
is_pod	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_pod<const volatile T> : is_pod<T> { };$/;"	s
is_pod	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_pod<volatile T> : is_pod<T> { };$/;"	s
is_pointer	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_pointer : false_type { };$/;"	s
is_pointer	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_pointer<T*> : true_type { };$/;"	s
is_pointer	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_pointer<const T> : is_pointer<T> { };$/;"	s
is_pointer	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_pointer<const volatile T> : is_pointer<T> { };$/;"	s
is_pointer	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <class T> struct is_pointer<volatile T> : is_pointer<T> { };$/;"	s
is_reference	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct is_reference : false_type {};$/;"	s
is_reference	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct is_reference<T&> : true_type {};$/;"	s
is_same	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T, typename U> struct is_same : public false_type { };$/;"	s
is_same	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct is_same<T, T> : public true_type { };$/;"	s
isalreadyset	optdesc.h	/^  bool isalreadyset,         \/\/ has the option already been set?$/;"	m	struct:OptionDescription
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::const_iterator& it) const {$/;"	f	class:HashtableInterface_DenseHashMap
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::const_iterator& it) const {$/;"	f	class:HashtableInterface_DenseHashSet
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::const_iterator& it) const {$/;"	f	class:HashtableInterface_DenseHashtable
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::const_iterator& it) const {$/;"	f	class:HashtableInterface_SparseHashMap
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::const_iterator& it) const {$/;"	f	class:HashtableInterface_SparseHashSet
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::const_iterator& it) const {$/;"	f	class:HashtableInterface_SparseHashtable
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::const_local_iterator& it)$/;"	f	class:HashtableInterface_DenseHashMap
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::const_local_iterator& it)$/;"	f	class:HashtableInterface_DenseHashSet
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::const_local_iterator& it)$/;"	f	class:HashtableInterface_DenseHashtable
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::const_local_iterator& it)$/;"	f	class:HashtableInterface_SparseHashMap
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::const_local_iterator& it)$/;"	f	class:HashtableInterface_SparseHashSet
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::const_local_iterator& it)$/;"	f	class:HashtableInterface_SparseHashtable
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::iterator& it) const {$/;"	f	class:HashtableInterface_DenseHashMap
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::iterator& it) const {$/;"	f	class:HashtableInterface_DenseHashSet
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::iterator& it) const {$/;"	f	class:HashtableInterface_DenseHashtable
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::iterator& it) const {$/;"	f	class:HashtableInterface_SparseHashMap
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::iterator& it) const {$/;"	f	class:HashtableInterface_SparseHashSet
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::iterator& it) const {$/;"	f	class:HashtableInterface_SparseHashtable
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::local_iterator& it) const {$/;"	f	class:HashtableInterface_DenseHashMap
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::local_iterator& it) const {$/;"	f	class:HashtableInterface_DenseHashSet
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::local_iterator& it) const {$/;"	f	class:HashtableInterface_DenseHashtable
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::local_iterator& it) const {$/;"	f	class:HashtableInterface_SparseHashMap
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::local_iterator& it) const {$/;"	f	class:HashtableInterface_SparseHashSet
it_to_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  typename p::key_type it_to_key(const typename p::local_iterator& it) const {$/;"	f	class:HashtableInterface_SparseHashtable
iter	sparsehash-2.0.2/doc/dense_hash_map.html	/^<h3><A NAME=iter>Validity of Iterators<\/A><\/h3>$/;"	a
iter	sparsehash-2.0.2/doc/dense_hash_set.html	/^<h3><A NAME=iter>Validity of Iterators<\/A><\/h3>$/;"	a
iter	sparsehash-2.0.2/doc/sparse_hash_map.html	/^<h3><A NAME=iter>Validity of Iterators<\/A><\/h3>$/;"	a
iter	sparsehash-2.0.2/doc/sparse_hash_set.html	/^<h3><A NAME=iter>Validity of Iterators<\/A><\/h3>$/;"	a
iter	sparsehash-2.0.2/experimental/libchash.h	/^   TableIterator *iter; \/* used in First\/NextBucket *\/$/;"	m	struct:HashTable
iterator	sparsehash-2.0.2/src/hash_test_interface.h	/^    iterator() : parent_(NULL) { }   \/\/ this allows code like "iterator it;"$/;"	f	class:BaseHashtableInterface::iterator
iterator	sparsehash-2.0.2/src/hash_test_interface.h	/^    iterator(typename HT::iterator it,$/;"	f	class:BaseHashtableInterface::iterator
iterator	sparsehash-2.0.2/src/hash_test_interface.h	/^  class iterator : public HT::iterator {$/;"	c	class:BaseHashtableInterface
iterator	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  iterator;$/;"	t	class:dense_hashtable
iterator	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef dense_hashtable_iterator<V,K,HF,ExK,SetK,EqK,A>       iterator;$/;"	t	struct:dense_hashtable_const_iterator
iterator	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef dense_hashtable_iterator<V,K,HF,ExK,SetK,EqK,A>       iterator;$/;"	t	struct:dense_hashtable_iterator
iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  iterator;$/;"	t	class:sparse_hashtable
iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef sparse_hashtable_destructive_iterator<V,K,HF,ExK,SetK,EqK,A> iterator;$/;"	t	struct:sparse_hashtable_destructive_iterator
iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef sparse_hashtable_iterator<V,K,HF,ExK,SetK,EqK,A>       iterator;$/;"	t	struct:sparse_hashtable_const_iterator
iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef sparse_hashtable_iterator<V,K,HF,ExK,SetK,EqK,A>       iterator;$/;"	t	struct:sparse_hashtable_iterator
iterator_category	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef std::forward_iterator_tag iterator_category;  \/\/ very little defined!$/;"	t	struct:dense_hashtable_const_iterator
iterator_category	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef std::forward_iterator_tag iterator_category;  \/\/ very little defined!$/;"	t	struct:dense_hashtable_iterator
iterator_category	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef std::forward_iterator_tag iterator_category;  \/\/ very little defined!$/;"	t	struct:sparse_hashtable_const_iterator
iterator_category	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef std::forward_iterator_tag iterator_category;  \/\/ very little defined!$/;"	t	struct:sparse_hashtable_destructive_iterator
iterator_category	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef std::forward_iterator_tag iterator_category;  \/\/ very little defined!$/;"	t	struct:sparse_hashtable_iterator
kDefault	sparsehash-2.0.2/src/hashtable_test.cc	/^  static const char* const kDefault;$/;"	m	struct:__anon4::ValueType	file:
kDefault	sparsehash-2.0.2/src/hashtable_test.cc	/^const char* const ValueType::kDefault = "hi";$/;"	m	class:__anon4::ValueType	file:
kDefaultIters	sparsehash-2.0.2/src/time_hash_map.cc	/^static const int kDefaultIters = 10000000;$/;"	v	file:
kDeletedCharStar	sparsehash-2.0.2/src/hashtable_test.cc	/^extern const char* const kDeletedCharStar = "--deleted char*--";$/;"	v
kDeletedInt	sparsehash-2.0.2/src/hashtable_test.cc	/^extern const int kDeletedInt = -1234676543;  \/\/ an unlikely-to-pick int$/;"	v
kEmptyCharStar	sparsehash-2.0.2/src/hashtable_test.cc	/^extern const char* const kEmptyCharStar = "--empty char*--";$/;"	v
kEmptyInt	sparsehash-2.0.2/src/hashtable_test.cc	/^extern const int kEmptyInt = 0;$/;"	v
key	sparsehash-2.0.2/experimental/libchash.h	/^   ulong key;         \/* 4 bytes for the key: either a pointer or an int *\/$/;"	m	struct:__anon2
key	sparsehash-2.0.2/src/hash_test_interface.h	/^    key_type key() { return parent_->it_to_key(*this); }$/;"	f	class:BaseHashtableInterface::const_iterator
key	sparsehash-2.0.2/src/hash_test_interface.h	/^    key_type key() { return parent_->it_to_key(*this); }$/;"	f	class:BaseHashtableInterface::const_local_iterator
key	sparsehash-2.0.2/src/hash_test_interface.h	/^    key_type key() { return parent_->it_to_key(*this); }$/;"	f	class:BaseHashtableInterface::iterator
key	sparsehash-2.0.2/src/hash_test_interface.h	/^    key_type key() { return parent_->it_to_key(*this); }$/;"	f	class:BaseHashtableInterface::local_iterator
key_eq	sparsehash-2.0.2/src/hash_test_interface.h	/^  key_equal key_eq() const { return ht_.key_eq(); }$/;"	f	class:BaseHashtableInterface
key_eq	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  key_equal key_eq() const                { return key_info; }$/;"	f	class:dense_hashtable
key_eq	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  key_equal key_eq() const                { return key_info; }$/;"	f	class:sparse_hashtable
key_equal	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef typename HT::key_equal key_equal;$/;"	t	class:BaseHashtableInterface
key_equal	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef EqualKey key_equal;$/;"	t	class:dense_hashtable
key_equal	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef EqualKey key_equal;$/;"	t	class:sparse_hashtable
key_info	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  KeyInfo key_info;$/;"	m	class:dense_hashtable
key_info	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  KeyInfo key_info;$/;"	m	class:sparse_hashtable
key_type	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef typename HT::key_type key_type;$/;"	t	class:BaseHashtableInterface
key_type	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef Key key_type;$/;"	t	class:dense_hashtable
key_type	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  typedef Key key_type;$/;"	t	class:sparsehash_internal::sh_hashtable_settings
key_type	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef Key key_type;$/;"	t	class:sparse_hashtable
largelinklinkwork	streetyp.h	/^       largelinklinkwork,$/;"	m	struct:Suffixtree
largelinks	streetyp.h	/^       largelinks,$/;"	m	struct:Suffixtree
largelinkwork	streetyp.h	/^       largelinkwork,$/;"	m	struct:Suffixtree
largenode	streetyp.h	/^       largenode,             \/\/ number of large nodes$/;"	m	struct:Suffixtree
lastcharindex	streetyp.h	/^  Sint lastcharindex;$/;"	m	struct:Suffixtree
lcp	findmumcand.cpp	/^static Uint lcp(Uchar *start1,Uchar *end1,Uchar *start2,Uchar *end2)$/;"	f	file:
lcp	scanpref.cpp	/^static Uint lcp(Uchar *start1,Uchar *end1,Uchar *start2,Uchar *end2)$/;"	f	file:
leafcounts	streetyp.h	/^       *leafcounts;           \/\/ holds counts of the number of leafs in subtree$/;"	m	struct:Suffixtree
leaftab	streetyp.h	/^       *leaftab,              \/\/ stores the brother-references of the leafs$/;"	m	struct:Suffixtree
length	genDNA.py	/^length = sys.argv[1]$/;"	v
length	types.h	/^      Uint start, length;$/;"	m	struct:ListType
lib_LTLIBRARIES	sparsehash-2.0.2/Makefile	/^lib_LTLIBRARIES = $/;"	m
libc_allocator_with_realloc	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  libc_allocator_with_realloc() {}$/;"	f	class:libc_allocator_with_realloc
libc_allocator_with_realloc	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  libc_allocator_with_realloc(const libc_allocator_with_realloc&) {}$/;"	f	class:libc_allocator_with_realloc
libc_allocator_with_realloc	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  libc_allocator_with_realloc(const libc_allocator_with_realloc<U>&) {}$/;"	f	class:libc_allocator_with_realloc
libc_allocator_with_realloc	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^class libc_allocator_with_realloc {$/;"	c
libc_allocator_with_realloc	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^class libc_allocator_with_realloc<void> {$/;"	c
libc_allocator_with_realloc_test_LDADD	sparsehash-2.0.2/Makefile	/^libc_allocator_with_realloc_test_LDADD = $(LDADD)$/;"	m
libc_allocator_with_realloc_test_OBJECTS	sparsehash-2.0.2/Makefile	/^libc_allocator_with_realloc_test_OBJECTS =  \\$/;"	m
libc_allocator_with_realloc_test_SOURCES	sparsehash-2.0.2/Makefile	/^libc_allocator_with_realloc_test_SOURCES = \\$/;"	m
libdir	sparsehash-2.0.2/Makefile	/^	echo 'libdir='`echo '$(libdir)' | sed 's@^$(exec_prefix)@$${exec_prefix}@'` >> "$@".tmp$/;"	m
libdir	sparsehash-2.0.2/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	sparsehash-2.0.2/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
lineallocated	space.cpp	/^  Uint lineallocated;  \/\/ the linenumber where the$/;"	m	struct:Blockdescription	file:
linemapped	mapfile.cpp	/^static Uint linemapped[MAXMAPPEDFILES] = {0};       $/;"	v	file:
linklocstree	linkloc.cpp	/^void linklocstree(Suffixtree *stree,Location *outloc,Location *inloc)$/;"	f
linkrootchildren	construct.cpp	/^static void linkrootchildren(Suffixtree *stree)$/;"	f	file:
load_factor	sparsehash-2.0.2/src/hash_test_interface.h	/^  float load_factor() const { return ht_.load_factor(); }$/;"	f	class:BaseHashtableInterface
loc2stringstree	streedbg.cpp	/^static void loc2stringstree(Suffixtree *stree,Stringtype *s,Location *loc)$/;"	f	file:
local_iterator	sparsehash-2.0.2/src/hash_test_interface.h	/^    local_iterator() : parent_(NULL) { }$/;"	f	class:BaseHashtableInterface::local_iterator
local_iterator	sparsehash-2.0.2/src/hash_test_interface.h	/^    local_iterator(typename HT::local_iterator it,$/;"	f	class:BaseHashtableInterface::local_iterator
local_iterator	sparsehash-2.0.2/src/hash_test_interface.h	/^  class local_iterator : public HT::local_iterator {$/;"	c	class:BaseHashtableInterface
local_iterator	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef iterator local_iterator;$/;"	t	class:dense_hashtable
local_iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef iterator local_iterator;$/;"	t	class:sparse_hashtable
localedir	sparsehash-2.0.2/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	sparsehash-2.0.2/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
locstring	streetyp.h	/^  Stringtype locstring; \/\/ string represented by location$/;"	m	struct:Location
main	sparsehash-2.0.2/config.guess	/^		main()$/;"	f
main	sparsehash-2.0.2/config.guess	/^	main ()$/;"	f
main	sparsehash-2.0.2/config.guess	/^main ()$/;"	f
main	sparsehash-2.0.2/experimental/example.c	/^int main(int argc, char** argv) {$/;"	f
main	sparsehash-2.0.2/src/hashtable_test.cc	/^int main(int, char **) {$/;"	f
main	sparsehash-2.0.2/src/libc_allocator_with_realloc_test.cc	/^int main(int, char **) {$/;"	f
main	sparsehash-2.0.2/src/simple_compat_test.cc	/^int main(int argc, char**) {$/;"	f
main	sparsehash-2.0.2/src/simple_test.cc	/^int main(int argc, char**) {$/;"	f
main	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^int main(int argc, char **argv) {          \/\/ though we ignore the args$/;"	f
main	sparsehash-2.0.2/src/template_util_unittest.cc	/^int main(int, char **) {$/;"	f
main	sparsehash-2.0.2/src/time_hash_map.cc	/^int main(int argc, char** argv) {$/;"	f
main	sparsehash-2.0.2/src/type_traits_unittest.cc	/^int main(int, char **) {$/;"	f
main	toci.cpp	/^int main(int argc, char *argv[])$/;"	f
major	sparsehash-2.0.2/packages/deb/rules	/^major=`ls src\/.libs\/lib*.so.* | \\$/;"	m
makedepthtabstree	depthtab.cpp	/^void makedepthtabstree(ArrayUint *depthtab,Suffixtree *stree)$/;"	f
makeleaflist	dfs.cpp	/^Sint makeleaflist(Suffixtree *stree,ArrayUint *leaflist,Reference *start)$/;"	f
makeleastlengthtext	maxmatopt.cpp	/^static void makeleastlengthtext(char *spacefortext)$/;"	f	file:
mandir	sparsehash-2.0.2/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mappedbytes	mapfile.cpp	/^            mappedbytes[MAXMAPPEDFILES] = {0};  \/\/ size of the memory map$/;"	v	file:
markpos	multidef.h	/^  ArrayPosition markpos;$/;"	m	struct:Multiseq
matchnucleotidesonly	maxmatdef.h	/^       matchnucleotidesonly,    \/\/ match ONLY acgt's$/;"	m	struct:MMcallinfo
matchpath	findmaxmat.cpp	/^  ArrayPathinfo matchpath;        \/\/ path of br. nodes from ploc to maxloc$/;"	m	struct:Maxmatchinfo	file:
max_bucket_count	sparsehash-2.0.2/src/hash_test_interface.h	/^  size_type max_bucket_count() const { return ht_.max_bucket_count(); }$/;"	f	class:BaseHashtableInterface
max_bucket_count	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  size_type max_bucket_count() const  { return max_size(); }$/;"	f	class:dense_hashtable
max_bucket_count	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  size_type max_bucket_count() const  { return max_size(); }$/;"	f	class:sparse_hashtable
max_load_factor	sparsehash-2.0.2/src/hash_test_interface.h	/^  float max_load_factor() const { return ht_.max_load_factor(); }$/;"	f	class:BaseHashtableInterface
max_load_factor	sparsehash-2.0.2/src/hash_test_interface.h	/^  float max_load_factor() const {$/;"	f	class:HashtableInterface_DenseHashtable
max_load_factor	sparsehash-2.0.2/src/hash_test_interface.h	/^  float max_load_factor() const {$/;"	f	class:HashtableInterface_SparseHashtable
max_load_factor	sparsehash-2.0.2/src/hash_test_interface.h	/^  void max_load_factor(float grow) { ht_.max_load_factor(grow); }$/;"	f	class:BaseHashtableInterface
max_load_factor	sparsehash-2.0.2/src/hash_test_interface.h	/^  void max_load_factor(float new_grow) {$/;"	f	class:HashtableInterface_DenseHashtable
max_load_factor	sparsehash-2.0.2/src/hash_test_interface.h	/^  void max_load_factor(float new_grow) {$/;"	f	class:HashtableInterface_SparseHashtable
max_size	sparsehash-2.0.2/src/hash_test_interface.h	/^  size_type max_size() const         { return ht_.max_size(); }$/;"	f	class:BaseHashtableInterface
max_size	sparsehash-2.0.2/src/hashtable_test.cc	/^  size_type max_size() const  {$/;"	f	struct:__anon4::Alloc
max_size	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  size_type max_size() const  { return val_info.max_size(); }$/;"	f	class:dense_hashtable
max_size	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  size_type max_size() const  {$/;"	f	class:libc_allocator_with_realloc
max_size	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  size_type max_size() const          { return table.max_size(); }$/;"	f	class:sparse_hashtable
max_size	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^  size_type max_size() const  {$/;"	f	class:instrumented_allocator
maxbranchdepth	streetyp.h	/^       maxbranchdepth,        \/\/ maximal depth of branching node$/;"	m	struct:Suffixtree
maxdesclength	maxmatdef.h	/^       maxdesclength,          \/\/ maximum length of a description$/;"	m	struct:Matchprocessinfo
maxerrormsg	seterror.cpp	/^Sint maxerrormsg(void)$/;"	f
maxlength	multidef.h	/^       maxlength;        \/\/ maximal number of chars of description to be shown$/;"	m	struct:Showdescinfo
maxloc	findmaxmat.cpp	/^  Location maxloc;                \/\/ location of \\texttt{pmax}$/;"	m	struct:Maxmatchinfo	file:
maxset	streetyp.h	/^       *maxset;$/;"	m	struct:Suffixtree
maybe_shrink	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool maybe_shrink() {$/;"	f	class:dense_hashtable
maybe_shrink	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool maybe_shrink() {$/;"	f	class:sparse_hashtable
measure_map	sparsehash-2.0.2/src/time_hash_map.cc	/^static void measure_map(const char* label, int obj_size, int iters,$/;"	f	file:
memoryptr	mapfile.cpp	/^static void *memoryptr[MAXMAPPEDFILES] = {NULL};$/;"	v	file:
messagespace	seterror.cpp	/^char *messagespace(void)$/;"	f
min_buckets	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  size_type min_buckets(size_type num_elts, size_type min_buckets_wanted) {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
min_buckets	sparsehash-2.0.2/src/time_hash_map.cc	/^  static const size_t min_buckets = 8;$/;"	m	class:HashFn	file:
min_load_factor	sparsehash-2.0.2/src/hash_test_interface.h	/^  float min_load_factor() const { return ht_.min_load_factor(); }$/;"	f	class:BaseHashtableInterface
min_load_factor	sparsehash-2.0.2/src/hash_test_interface.h	/^  float min_load_factor() const {$/;"	f	class:HashtableInterface_DenseHashtable
min_load_factor	sparsehash-2.0.2/src/hash_test_interface.h	/^  float min_load_factor() const {$/;"	f	class:HashtableInterface_SparseHashtable
min_load_factor	sparsehash-2.0.2/src/hash_test_interface.h	/^  void min_load_factor(float new_shrink) {$/;"	f	class:HashtableInterface_DenseHashtable
min_load_factor	sparsehash-2.0.2/src/hash_test_interface.h	/^  void min_load_factor(float new_shrink) {$/;"	f	class:HashtableInterface_SparseHashtable
min_load_factor	sparsehash-2.0.2/src/hash_test_interface.h	/^  void min_load_factor(float shrink) { ht_.min_load_factor(shrink); }$/;"	f	class:BaseHashtableInterface
minmatchlength	findmaxmat.cpp	/^       minmatchlength,            \/\/ min length of a match to be reported$/;"	m	struct:Maxmatchinfo	file:
minmatchlength	maxmatdef.h	/^  Uint minmatchlength,          \/\/ minimal length of a match to be reported$/;"	m	struct:MMcallinfo
minmatchlength	maxmatdef.h	/^  Uint minmatchlength,         \/\/ minimum length of a match$/;"	m	struct:Matchprocessinfo
mix	sparsehash-2.0.2/experimental/libchash.c	836;"	d	file:
mix	sparsehash-2.0.2/experimental/libchash.c	857;"	d	file:
mkdir_p	sparsehash-2.0.2/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkinstalldirs	sparsehash-2.0.2/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mmaddspace	mapfile.cpp	/^static void mmaddspace(Uint space)$/;"	f	file:
mmcheckspaceleak	mapfile.cpp	/^void mmcheckspaceleak(void)$/;"	f
mmgetspacepeak	mapfile.cpp	/^Uint mmgetspacepeak(void)$/;"	f
mmsubtractspace	mapfile.cpp	/^static void mmsubtractspace(Uint space)$/;"	f	file:
mmwrapspace	mapfile.cpp	/^Sint mmwrapspace(void)$/;"	f
move_from	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void move_from(MoveDontCopyT mover, sparse_hashtable &ht,$/;"	f	class:sparse_hashtable
mumcandtab	maxmatdef.h	/^  ArrayMUMcandidate mumcandtab;\/\/ a table containing MUM-candidates$/;"	m	struct:Matchprocessinfo
mumlength	mumcand.h	/^  Uint mumlength,    \/\/ length of the mum$/;"	m	struct:MUMcandidate
mumuniqueinquery	cleanMUMcand.cpp	/^Sint mumuniqueinquery(void *processinfo,$/;"	f
n_	sparsehash-2.0.2/src/type_traits_unittest.cc	/^  int n_;$/;"	m	class:B	file:
n_	sparsehash-2.0.2/src/type_traits_unittest.cc	/^  int n_;$/;"	m	class:C	file:
n_	sparsehash-2.0.2/src/type_traits_unittest.cc	/^  int n_;$/;"	m	class:D	file:
n_	sparsehash-2.0.2/src/type_traits_unittest.cc	/^  int n_;$/;"	m	class:E	file:
n_	sparsehash-2.0.2/src/type_traits_unittest.cc	/^  int n_;$/;"	m	class:F	file:
n_	sparsehash-2.0.2/src/type_traits_unittest.cc	/^  int n_;$/;"	m	struct:A	file:
new	sparsehash-2.0.2/doc/dense_hash_map.html	/^<h3><A NAME="new">New members<\/A><\/h3>$/;"	a
new	sparsehash-2.0.2/doc/dense_hash_set.html	/^<h3><A NAME="new">New members<\/A><\/h3>$/;"	a
new	sparsehash-2.0.2/doc/sparse_hash_map.html	/^<h3><A NAME="new">New members<\/A><\/h3>$/;"	a
new	sparsehash-2.0.2/doc/sparse_hash_set.html	/^<h3><A NAME="new">New members<\/A><\/h3>$/;"	a
nextfreeStrings	arraydef.h	/^  Uint stringbufferlength, nextfreeStrings, allocatedStrings;$/;"	m	struct:ArrayStrings
nextfreeblock	space.cpp	/^            nextfreeblock = 0,  \/\/ index of next free block$/;"	v	file:
nextfreebranch	streetyp.h	/^       *nextfreebranch,       \/\/ reference to next free base addr. in branchtab$/;"	m	struct:Suffixtree
nextfreebranchnum	streetyp.h	/^       nextfreebranchnum,     \/\/ the number of the next free branch node$/;"	m	struct:Suffixtree
nextfreeleafnum	streetyp.h	/^  Uint nextfreeleafnum,       \/\/ the number of the next leaf$/;"	m	struct:Suffixtree
nextfreeleafptr	streetyp.h	/^       *nextfreeleafptr,      \/\/ points to next free entry in leaftab$/;"	m	struct:Suffixtree
nextnode	streetyp.h	/^  Reference nextnode;   \/\/ reference to node the edge points to$/;"	m	struct:Location
nextnode	streetyp.h	/^  Reference nextnode;$/;"	m	struct:Simpleloc
nodecount	streetyp.h	/^       nodecount,$/;"	m	struct:Suffixtree
nodist_hashtable_test_OBJECTS	sparsehash-2.0.2/Makefile	/^nodist_hashtable_test_OBJECTS = $(am__objects_1)$/;"	m
nodist_hashtable_test_SOURCES	sparsehash-2.0.2/Makefile	/^nodist_hashtable_test_SOURCES = $(nodist_internalinclude_HEADERS)$/;"	m
nodist_internalinclude_HEADERS	sparsehash-2.0.2/Makefile	/^nodist_internalinclude_HEADERS = src\/sparsehash\/internal\/sparseconfig.h$/;"	m
nodist_simple_compat_test_OBJECTS	sparsehash-2.0.2/Makefile	/^nodist_simple_compat_test_OBJECTS = $(am__objects_1)$/;"	m
nodist_simple_compat_test_SOURCES	sparsehash-2.0.2/Makefile	/^nodist_simple_compat_test_SOURCES = $(nodist_internalinclude_HEADERS)$/;"	m
nodist_simple_test_OBJECTS	sparsehash-2.0.2/Makefile	/^nodist_simple_test_OBJECTS = $(am__objects_1)$/;"	m
nodist_simple_test_SOURCES	sparsehash-2.0.2/Makefile	/^nodist_simple_test_SOURCES = $(nodist_internalinclude_HEADERS)$/;"	m
nodist_sparsetable_unittest_OBJECTS	sparsehash-2.0.2/Makefile	/^nodist_sparsetable_unittest_OBJECTS = $(am__objects_1)$/;"	m
nodist_sparsetable_unittest_SOURCES	sparsehash-2.0.2/Makefile	/^nodist_sparsetable_unittest_SOURCES = $(nodist_internalinclude_HEADERS)$/;"	m
nodist_template_util_unittest_OBJECTS	sparsehash-2.0.2/Makefile	/^nodist_template_util_unittest_OBJECTS = $(am__objects_1)$/;"	m
nodist_template_util_unittest_SOURCES	sparsehash-2.0.2/Makefile	/^nodist_template_util_unittest_SOURCES = $(nodist_internalinclude_HEADERS)$/;"	m
nodist_time_hash_map_OBJECTS	sparsehash-2.0.2/Makefile	/^nodist_time_hash_map_OBJECTS = $(am__objects_1)$/;"	m
nodist_time_hash_map_SOURCES	sparsehash-2.0.2/Makefile	/^nodist_time_hash_map_SOURCES = $(nodist_internalinclude_HEADERS)$/;"	m
nodist_type_traits_unittest_OBJECTS	sparsehash-2.0.2/Makefile	/^nodist_type_traits_unittest_OBJECTS = $(am__objects_1)$/;"	m
nodist_type_traits_unittest_SOURCES	sparsehash-2.0.2/Makefile	/^nodist_type_traits_unittest_SOURCES = $(nodist_internalinclude_HEADERS)$/;"	m
noinst_PROGRAMS	sparsehash-2.0.2/Makefile	/^noinst_PROGRAMS = $(am__EXEEXT_1) time_hash_map$(EXEEXT)$/;"	m
nonempty_bucket_count	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  size_type nonempty_bucket_count() const { return num_elements; }$/;"	f	class:dense_hashtable
nonmaximal	streetyp.h	/^       *nonmaximal,           \/\/ bit table: if node with headposition \\(i\\) is $/;"	m	struct:Suffixtree
num_buckets	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  size_type num_buckets;$/;"	m	class:dense_hashtable
num_compares	sparsehash-2.0.2/src/hashtable_test.cc	/^  int num_compares() const { return num_compares_; }$/;"	f	struct:__anon4::Hasher
num_compares_	sparsehash-2.0.2/src/hashtable_test.cc	/^  mutable int num_compares_;$/;"	m	struct:__anon4::Hasher	file:
num_copies	sparsehash-2.0.2/src/hashtable_test.cc	/^  static int num_copies;$/;"	m	struct:__anon5::Memmove	file:
num_copies	sparsehash-2.0.2/src/hashtable_test.cc	/^  static int num_copies;$/;"	m	struct:__anon5::NoMemmove	file:
num_copies	sparsehash-2.0.2/src/hashtable_test.cc	/^int Memmove::num_copies = 0;$/;"	m	class:__anon5::Memmove	file:
num_copies	sparsehash-2.0.2/src/hashtable_test.cc	/^int NoMemmove::num_copies = 0;$/;"	m	class:__anon5::NoMemmove	file:
num_deleted	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  size_type num_deleted;  \/\/ how many occupied buckets are marked deleted$/;"	m	class:dense_hashtable
num_deleted	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  size_type num_deleted;   \/\/ how many occupied buckets are marked deleted$/;"	m	class:sparse_hashtable
num_elements	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  size_type num_elements;$/;"	m	class:dense_hashtable
num_hashes	sparsehash-2.0.2/src/hashtable_test.cc	/^  int num_hashes() const { return num_hashes_; }$/;"	f	struct:__anon4::Hasher
num_hashes_	sparsehash-2.0.2/src/hashtable_test.cc	/^  mutable int num_hashes_;$/;"	m	struct:__anon4::Hasher	file:
num_ht_copies	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  size_type num_ht_copies() const {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
num_ht_copies_	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  unsigned int num_ht_copies_;$/;"	m	class:sparsehash_internal::sh_hashtable_settings
num_table_copies	sparsehash-2.0.2/src/hash_test_interface.h	/^  int num_table_copies() const { return 0; }$/;"	f	class:HashtableInterface_DenseHashMap
num_table_copies	sparsehash-2.0.2/src/hash_test_interface.h	/^  int num_table_copies() const { return 0; }$/;"	f	class:HashtableInterface_DenseHashSet
num_table_copies	sparsehash-2.0.2/src/hash_test_interface.h	/^  int num_table_copies() const { return 0; }$/;"	f	class:HashtableInterface_SparseHashMap
num_table_copies	sparsehash-2.0.2/src/hash_test_interface.h	/^  int num_table_copies() const { return 0; }$/;"	f	class:HashtableInterface_SparseHashSet
num_table_copies	sparsehash-2.0.2/src/hash_test_interface.h	/^  int num_table_copies() const { return ht_.num_table_copies(); }$/;"	f	class:BaseHashtableInterface
num_table_copies	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  int num_table_copies() const { return settings.num_ht_copies(); }$/;"	f	class:dense_hashtable
num_table_copies	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  int num_table_copies() const { return settings.num_ht_copies(); }$/;"	f	class:sparse_hashtable
numberofblocks	space.cpp	/^static Uint numberofblocks = 0, \/\/ numberofblocks$/;"	v	file:
numberofcells	space.cpp	/^       numberofcells;  \/\/ number of cells in the block$/;"	m	struct:Blockdescription	file:
numofqueryfiles	maxmatdef.h	/^       numofqueryfiles;         \/\/ number of query files$/;"	m	struct:MMcallinfo
numofsequences	multidef.h	/^       numofsequences,                 \/\/ the number of sequences$/;"	m	struct:Multiseq
occursinlist	procopt.cpp	/^static bool occursinlist(Uint i,int *list)$/;"	f	file:
oldincludedir	sparsehash-2.0.2/Makefile	/^oldincludedir = \/usr\/include$/;"	m
onmaxpath	findmaxmat.cpp	/^  bool onmaxpath;$/;"	m	struct:Nodeinfo	file:
onsuccpath	streetyp.h	/^       onsuccpath,            \/\/ refers to node on success path of headnode$/;"	m	struct:Suffixtree
operator !=	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool operator!=(const BaseHashtableInterface& other) const {$/;"	f	class:BaseHashtableInterface
operator !=	sparsehash-2.0.2/src/hashtable_test.cc	/^  bool operator!=(const Alloc<T,SizeT,MAX_SIZE>& that) {$/;"	f	struct:__anon4::Alloc
operator !=	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool operator!=(const const_iterator& it) const { return pos != it.pos; }$/;"	f	struct:dense_hashtable_const_iterator
operator !=	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool operator!=(const dense_hashtable& ht) const {$/;"	f	class:dense_hashtable
operator !=	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool operator!=(const iterator& it) const { return pos != it.pos; }$/;"	f	struct:dense_hashtable_iterator
operator !=	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^inline bool operator!=(const libc_allocator_with_realloc<T>&,$/;"	f
operator !=	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool operator!=(const const_iterator& it) const { return pos != it.pos; }$/;"	f	struct:sparse_hashtable_const_iterator
operator !=	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool operator!=(const iterator& it) const { return pos != it.pos; }$/;"	f	struct:sparse_hashtable_destructive_iterator
operator !=	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool operator!=(const iterator& it) const { return pos != it.pos; }$/;"	f	struct:sparse_hashtable_iterator
operator !=	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool operator!=(const sparse_hashtable& ht) const {$/;"	f	class:sparse_hashtable
operator !=	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^inline bool operator!=(const instrumented_allocator<T>&,$/;"	f
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  Value operator()(Value& v) { return -v; }$/;"	f	struct:__anon4::Negation
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  bool operator()(FILE* fp, const int& value) {$/;"	f	class:__anon4::ValueSerializer
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  bool operator()(FILE* fp, const string& value) {$/;"	f	class:__anon4::ValueSerializer
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  bool operator()(FILE* fp, int* value) {$/;"	f	class:__anon4::ValueSerializer
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  bool operator()(FILE* fp, string* value) {$/;"	f	class:__anon4::ValueSerializer
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  bool operator()(INPUT* fp, ValueType* v) {$/;"	f	class:__anon4::ValueSerializer
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  bool operator()(INPUT* fp, const char** value) {$/;"	f	class:__anon4::ValueSerializer
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  bool operator()(INPUT* fp, const std::pair<const First, Second>& value) {$/;"	f	class:__anon4::ValueSerializer
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  bool operator()(OUTPUT* fp, const ValueType& v) {$/;"	f	class:__anon4::ValueSerializer
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  bool operator()(OUTPUT* fp, const char* const& value) {$/;"	f	class:__anon4::ValueSerializer
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  bool operator()(OUTPUT* fp, std::pair<const First, Second>* value) {$/;"	f	class:__anon4::ValueSerializer
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  bool operator()(const char* a, const char* b) const {$/;"	f	struct:__anon4::Hasher
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  bool operator()(const string& a, const string& b) const {$/;"	f	struct:__anon4::Hasher
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  bool operator()(int a, int b) const {$/;"	f	struct:__anon4::Hasher
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  const Value operator()(const Value& v) const { return -v; }$/;"	f	struct:__anon4::Negation
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  const char* operator()(const char* s) const {$/;"	f	struct:__anon4::Identity
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  const string operator()(const string& s) const {$/;"	f	struct:__anon4::Capital
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  size_t operator()(const char* a) const {$/;"	f	struct:__anon4::Hasher
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  size_t operator()(const int* a) const {$/;"	f	struct:__anon4::Hasher
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  size_t operator()(const string& a) const {$/;"	f	struct:__anon4::Hasher
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  size_t operator()(int a) const {$/;"	f	struct:__anon4::Hasher
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  string operator()(string& s) {$/;"	f	struct:__anon4::Capital
operator ()	sparsehash-2.0.2/src/hashtable_test.cc	/^  void operator()(KeyAndValueT* value, const KeyAndValueT& new_key) const {$/;"	f	struct:__anon4::SetKey
operator ()	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  bool operator()(INPUT* fp, value_type* value) const {$/;"	f	struct:sparsehash_internal::pod_serializer
operator ()	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  bool operator()(OUTPUT* fp, const value_type& value) const {$/;"	f	struct:sparsehash_internal::pod_serializer
operator ()	sparsehash-2.0.2/src/time_hash_map.cc	/^  bool operator()(const HashObject<Size,Hashsize>& a,$/;"	f	class:HashFn
operator ()	sparsehash-2.0.2/src/time_hash_map.cc	/^  bool operator()(const HashObject<Size,Hashsize>* a,$/;"	f	class:HashFn
operator ()	sparsehash-2.0.2/src/time_hash_map.cc	/^  size_t operator()(const HashObject<Size,Hashsize>& obj) const {$/;"	f	class:HashFn
operator ()	sparsehash-2.0.2/src/time_hash_map.cc	/^  size_t operator()(const HashObject<Size,Hashsize>* obj) const {$/;"	f	class:HashFn
operator *	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  reference operator*() const { return *pos; }$/;"	f	struct:dense_hashtable_const_iterator
operator *	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  reference operator*() const { return *pos; }$/;"	f	struct:dense_hashtable_iterator
operator *	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  reference operator*() const { return *pos; }$/;"	f	struct:sparse_hashtable_const_iterator
operator *	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  reference operator*() const { return *pos; }$/;"	f	struct:sparse_hashtable_destructive_iterator
operator *	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  reference operator*() const { return *pos; }$/;"	f	struct:sparse_hashtable_iterator
operator ++	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  const_iterator operator++(int) { const_iterator tmp(*this); ++*this; return tmp; }$/;"	f	struct:dense_hashtable_const_iterator
operator ++	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  const_iterator& operator++()   {$/;"	f	struct:dense_hashtable_const_iterator
operator ++	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  iterator operator++(int) { iterator tmp(*this); ++*this; return tmp; }$/;"	f	struct:dense_hashtable_iterator
operator ++	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  iterator& operator++()   {$/;"	f	struct:dense_hashtable_iterator
operator ++	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  const_iterator operator++(int) { const_iterator tmp(*this); ++*this; return tmp; }$/;"	f	struct:sparse_hashtable_const_iterator
operator ++	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  const_iterator& operator++() {$/;"	f	struct:sparse_hashtable_const_iterator
operator ++	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  iterator operator++(int) { iterator tmp(*this); ++*this; return tmp; }$/;"	f	struct:sparse_hashtable_destructive_iterator
operator ++	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  iterator operator++(int) { iterator tmp(*this); ++*this; return tmp; }$/;"	f	struct:sparse_hashtable_iterator
operator ++	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  iterator& operator++()   {$/;"	f	struct:sparse_hashtable_destructive_iterator
operator ++	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  iterator& operator++()   {$/;"	f	struct:sparse_hashtable_iterator
operator ->	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  pointer operator->() const { return &(operator*()); }$/;"	f	struct:dense_hashtable_const_iterator
operator ->	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  pointer operator->() const { return &(operator*()); }$/;"	f	struct:dense_hashtable_iterator
operator ->	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  pointer operator->() const { return &(operator*()); }$/;"	f	struct:sparse_hashtable_const_iterator
operator ->	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  pointer operator->() const { return &(operator*()); }$/;"	f	struct:sparse_hashtable_destructive_iterator
operator ->	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  pointer operator->() const { return &(operator*()); }$/;"	f	struct:sparse_hashtable_iterator
operator <	sparsehash-2.0.2/src/time_hash_map.cc	/^  bool operator< (const class_type& that) const { return this->i_ < that.i_; }$/;"	f	class:HashObject
operator <=	sparsehash-2.0.2/src/time_hash_map.cc	/^  bool operator<=(const class_type& that) const { return this->i_ <= that.i_; }$/;"	f	class:HashObject
operator =	sparsehash-2.0.2/src/hashtable_test.cc	/^  void operator=(const ValueType& that) { set_s(that.s_); }$/;"	f	struct:__anon4::ValueType
operator =	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  dense_hashtable& operator= (const dense_hashtable& ht) {$/;"	f	class:dense_hashtable
operator =	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  sparse_hashtable& operator= (const sparse_hashtable& ht) {$/;"	f	class:sparse_hashtable
operator =	sparsehash-2.0.2/src/time_hash_map.cc	/^  void operator=(const HashObject& that) {$/;"	f	class:HashObject
operator ==	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool operator==(const BaseHashtableInterface& other) const {$/;"	f	class:BaseHashtableInterface
operator ==	sparsehash-2.0.2/src/hashtable_test.cc	/^  bool operator==(const Alloc<T,SizeT,MAX_SIZE>& that) {$/;"	f	struct:__anon4::Alloc
operator ==	sparsehash-2.0.2/src/hashtable_test.cc	/^  bool operator==(const ValueType& that) const {$/;"	f	struct:__anon4::ValueType
operator ==	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool operator==(const const_iterator& it) const { return pos == it.pos; }$/;"	f	struct:dense_hashtable_const_iterator
operator ==	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool operator==(const dense_hashtable& ht) const {$/;"	f	class:dense_hashtable
operator ==	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool operator==(const iterator& it) const { return pos == it.pos; }$/;"	f	struct:dense_hashtable_iterator
operator ==	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^inline bool operator==(const libc_allocator_with_realloc<T>&,$/;"	f
operator ==	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool operator==(const const_iterator& it) const { return pos == it.pos; }$/;"	f	struct:sparse_hashtable_const_iterator
operator ==	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool operator==(const iterator& it) const { return pos == it.pos; }$/;"	f	struct:sparse_hashtable_destructive_iterator
operator ==	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool operator==(const iterator& it) const { return pos == it.pos; }$/;"	f	struct:sparse_hashtable_iterator
operator ==	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool operator==(const sparse_hashtable& ht) const {$/;"	f	class:sparse_hashtable
operator ==	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^inline bool operator==(const instrumented_allocator<T>&,$/;"	f
operator ==	sparsehash-2.0.2/src/time_hash_map.cc	/^  bool operator==(const class_type& that) const { return this->i_ == that.i_; }$/;"	f	class:HashObject
optname	optdesc.h	/^  char *optname,             \/\/ the option string, begins with -$/;"	m	struct:OptionDescription
optval	optdesc.h	/^  Uint optval;               \/\/ the unique number of an option$/;"	m	struct:OptionDescription
or_	sparsehash-2.0.2/src/sparsehash/template_util.h	/^struct or_ : public integral_constant<bool, (A::value || B::value)> {$/;"	s
originalsequence	multidef.h	/^        *originalsequence;             \/\/ NULL or points to orig. sequence$/;"	m	struct:Multiseq
other	sparsehash-2.0.2/src/hashtable_test.cc	/^    typedef Alloc<U, SizeT, MAX_SIZE> other;$/;"	t	struct:__anon4::Alloc::rebind	file:
other	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^    typedef libc_allocator_with_realloc<U> other;$/;"	t	struct:libc_allocator_with_realloc::rebind
other	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^    typedef instrumented_allocator<U> other;$/;"	t	struct:instrumented_allocator::rebind	file:
out	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^static char* out = outbuf;       \/\/ where to write next$/;"	v	file:
outbuf	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^static char outbuf[10240];       \/\/ big enough for these tests$/;"	v	file:
overallsequences	multiseq.cpp	/^Sint overallsequences(bool rcmode,Multiseq *multiseq,void *applyinfo,$/;"	f
p	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef BaseHashtableInterface<ht> p;  \/\/ parent$/;"	t	class:HashtableInterface_DenseHashMap
p	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef BaseHashtableInterface<ht> p;  \/\/ parent$/;"	t	class:HashtableInterface_DenseHashSet
p	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef BaseHashtableInterface<ht> p;  \/\/ parent$/;"	t	class:HashtableInterface_DenseHashtable
p	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef BaseHashtableInterface<ht> p;  \/\/ parent$/;"	t	class:HashtableInterface_SparseHashMap
p	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef BaseHashtableInterface<ht> p;  \/\/ parent$/;"	t	class:HashtableInterface_SparseHashSet
p	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef BaseHashtableInterface<ht> p;  \/\/ parent$/;"	t	class:HashtableInterface_SparseHashtable
parent_	sparsehash-2.0.2/src/hash_test_interface.h	/^    const BaseHashtableInterface* parent_;$/;"	m	class:BaseHashtableInterface::const_iterator
parent_	sparsehash-2.0.2/src/hash_test_interface.h	/^    const BaseHashtableInterface* parent_;$/;"	m	class:BaseHashtableInterface::const_local_iterator
parent_	sparsehash-2.0.2/src/hash_test_interface.h	/^    const BaseHashtableInterface* parent_;$/;"	m	class:BaseHashtableInterface::iterator
parent_	sparsehash-2.0.2/src/hash_test_interface.h	/^    const BaseHashtableInterface* parent_;$/;"	m	class:BaseHashtableInterface::local_iterator
parsemaxmatoptions	maxmatopt.cpp	/^Sint parsemaxmatoptions(MMcallinfo *mmcallinfo,int argc, char *argv[])$/;"	f
pdfdir	sparsehash-2.0.2/Makefile	/^pdfdir = ${docdir}$/;"	m
pkgconfig_DATA	sparsehash-2.0.2/Makefile	/^pkgconfig_DATA = lib${PACKAGE}.pc$/;"	m
pkgconfigdir	sparsehash-2.0.2/Makefile	/^pkgconfigdir = $(libdir)\/pkgconfig$/;"	m
pkgdatadir	sparsehash-2.0.2/Makefile	/^pkgdatadir = $(datadir)\/sparsehash$/;"	m
pkgincludedir	sparsehash-2.0.2/Makefile	/^pkgincludedir = $(includedir)\/sparsehash$/;"	m
pkglibdir	sparsehash-2.0.2/Makefile	/^pkglibdir = $(libdir)\/sparsehash$/;"	m
pkglibexecdir	sparsehash-2.0.2/Makefile	/^pkglibexecdir = $(libexecdir)\/sparsehash$/;"	m
pod_serializer	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^template <typename value_type> struct pod_serializer {$/;"	s	namespace:sparsehash_internal
pointer	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef typename HT::pointer pointer;$/;"	t	class:BaseHashtableInterface
pointer	sparsehash-2.0.2/src/hashtable_test.cc	/^  typedef T* pointer;$/;"	t	struct:__anon4::Alloc	file:
pointer	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^    typedef typename A::pointer pointer;$/;"	t	class:dense_hashtable::alloc_impl
pointer	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^    typedef typename libc_allocator_with_realloc<A>::pointer pointer;$/;"	t	class:dense_hashtable::alloc_impl
pointer	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef typename value_alloc_type::const_pointer pointer;$/;"	t	struct:dense_hashtable_const_iterator
pointer	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef typename value_alloc_type::pointer pointer;$/;"	t	class:dense_hashtable
pointer	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef typename value_alloc_type::pointer pointer;$/;"	t	struct:dense_hashtable_iterator
pointer	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  typedef T* pointer;$/;"	t	class:libc_allocator_with_realloc
pointer	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  typedef void* pointer;$/;"	t	class:libc_allocator_with_realloc
pointer	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename value_alloc_type::const_pointer pointer;$/;"	t	struct:sparse_hashtable_const_iterator
pointer	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename value_alloc_type::pointer pointer;$/;"	t	class:sparse_hashtable
pointer	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename value_alloc_type::pointer pointer;$/;"	t	struct:sparse_hashtable_destructive_iterator
pointer	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename value_alloc_type::pointer pointer;$/;"	t	struct:sparse_hashtable_iterator
pointer	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^  typedef T* pointer;$/;"	t	class:instrumented_allocator	file:
pos	sparsehash-2.0.2/experimental/libchash.c	/^   long pos;               \/* the actual iterator *\/$/;"	m	struct:DenseIterator	file:
pos	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  pointer pos, end;$/;"	m	struct:dense_hashtable_const_iterator
pos	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  pointer pos, end;$/;"	m	struct:dense_hashtable_iterator
pos	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  st_iterator pos, end;$/;"	m	struct:sparse_hashtable_const_iterator
pos	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  st_iterator pos, end;$/;"	m	struct:sparse_hashtable_destructive_iterator
pos	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  st_iterator pos, end;$/;"	m	struct:sparse_hashtable_iterator
pos2pospair	multiseq.cpp	/^Sint pos2pospair(Multiseq *multiseq,PairUint *pos,Uint position)$/;"	f
posGroup	sparsehash-2.0.2/experimental/libchash.c	/^   long posGroup;$/;"	m	struct:SparseIterator	file:
posLastFind	sparsehash-2.0.2/experimental/libchash.h	/^   HTItem *posLastFind; \/* position of last Find() command *\/$/;"	m	struct:HashTable
posOffset	sparsehash-2.0.2/experimental/libchash.c	/^   long posOffset;$/;"	m	struct:SparseIterator	file:
prefix	maxmatdef.h	/^       prefix,                  \/\/ length of prefix for Direct Access Table$/;"	m	struct:MMcallinfo
prefix	maxmatdef.h	/^       prefix,                  \/\/ length of prefix for Direct Access Table$/;"	m	struct:Matchprocessinfo
prefix	sparsehash-2.0.2/Makefile	/^	echo 'prefix=$(prefix)' > "$@".tmp$/;"	m
prefix	sparsehash-2.0.2/Makefile	/^prefix = \/usr\/local$/;"	m
previousnode	streetyp.h	/^  Bref previousnode;    \/\/ reference to previous node (which is branching)$/;"	m	struct:Location
print_uname	sparsehash-2.0.2/src/time_hash_map.cc	/^static void print_uname() {$/;"	f	file:
processbranch1	findmaxmat.cpp	/^static bool processbranch1(Bref nodeptr,void *info)$/;"	f	file:
processbranch2	findmaxmat.cpp	/^static Sint processbranch2(\/*@unused@*\/ Bref nodeptr,void *info)$/;"	f	file:
processinfo	findmaxmat.cpp	/^  void *processinfo;            \/\/ first arg. when calling previous function$/;"	m	struct:Maxmatchinfo	file:
processleaf	findmaxmat.cpp	/^static Sint processleaf(Uint leafindex,\/*@unused@*\/ Bref lcpnode,void *info)$/;"	f	file:
processmatch	findmaxmat.cpp	/^  Processmatchfunction processmatch; \/\/ this function processes found match$/;"	m	struct:Maxmatchinfo	file:
procmaxmatches	procmaxmat.cpp	/^Sint procmaxmatches(MMcallinfo *mmcallinfo,Multiseq *subjectmultiseq)$/;"	f
procoption	procopt.cpp	/^Sint procoption(OptionDescription *opt,Uint numofopt,char *optstring)$/;"	f
program	maxmatdef.h	/^  char program[PATH_MAX+1],     \/\/ the path of the program$/;"	m	struct:MMcallinfo
program_transform_name	sparsehash-2.0.2/Makefile	/^program_transform_name = s,x,x,$/;"	m
prototypes	sparsehash-2.0.2/configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
psdir	sparsehash-2.0.2/Makefile	/^psdir = ${docdir}$/;"	m
query	findmaxmat.cpp	/^  Uchar *query,                   \/\/ the query string$/;"	m	struct:Maxmatchinfo	file:
querycommondepth	findmaxmat.cpp	/^  Uint querycommondepth;$/;"	m	struct:Nodeinfo	file:
queryfilelist	maxmatdef.h	/^       queryfilelist[MAXNUMOFQUERYFILES][PATH_MAX+1]; $/;"	m	struct:MMcallinfo
querylen	findmaxmat.cpp	/^  Uint querylen,                  \/\/ length of the current query$/;"	m	struct:Maxmatchinfo	file:
querymultiseq	maxmatdef.h	/^           querymultiseq;      \/\/ the Multiseq record of the queries$/;"	m	struct:Matchprocessinfo
queryseq	mumcand.h	/^       queryseq,     \/\/ number of the query sequence$/;"	m	struct:MUMcandidate
queryseqnum	findmaxmat.cpp	/^       queryseqnum,               \/\/ number of query sequence$/;"	m	struct:Maxmatchinfo	file:
querystart	mumcand.h	/^       querystart;   \/\/ start position in the query sequence      $/;"	m	struct:MUMcandidate
querysuffix	findmaxmat.cpp	/^        *querysuffix;             \/\/ current suffix of query$/;"	m	struct:Maxmatchinfo	file:
randint	genDNA.py	/^from random import randint$/;"	i
random_element	sparsehash-2.0.2/src/hash_test_interface.h	/^  const_iterator random_element(class ACMRandom* r) const {$/;"	f	class:BaseHashtableInterface
random_element	sparsehash-2.0.2/src/hash_test_interface.h	/^  iterator random_element(class ACMRandom* r)  {$/;"	f	class:BaseHashtableInterface
rcsequence	multidef.h	/^        *rcsequence,                   \/\/ NULL or points to $/;"	m	struct:Multiseq
read_bigendian_number	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^bool read_bigendian_number(INPUT* fp, IntType* value, size_t length) {$/;"	f	namespace:sparsehash_internal
read_data	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^inline bool read_data(INPUT* fp, void* data, size_t length) {$/;"	f	namespace:sparsehash_internal
read_data_internal	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^inline bool read_data_internal(INPUT* fp, void*,$/;"	f	namespace:sparsehash_internal
read_data_internal	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^inline bool read_data_internal(Ignored*, FILE* fp,$/;"	f	namespace:sparsehash_internal
read_data_internal	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^inline bool read_data_internal(Ignored*, std::istream* fp,$/;"	f	namespace:sparsehash_internal
read_data_internal_for_istream	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^inline bool read_data_internal_for_istream(ISTREAM* fp,$/;"	f	namespace:sparsehash_internal
read_metadata	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool read_metadata(INPUT *fp) {$/;"	f	class:BaseHashtableInterface
read_metadata	sparsehash-2.0.2/src/hash_test_interface.h	/^  template <typename INPUT> bool read_metadata(INPUT *) { return false; }$/;"	f	class:HashtableInterface_DenseHashMap
read_metadata	sparsehash-2.0.2/src/hash_test_interface.h	/^  template <typename INPUT> bool read_metadata(INPUT *) { return false; }$/;"	f	class:HashtableInterface_DenseHashSet
read_metadata	sparsehash-2.0.2/src/hash_test_interface.h	/^  template <typename INPUT> bool read_metadata(INPUT *) { return false; }$/;"	f	class:HashtableInterface_DenseHashtable
read_metadata	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool read_metadata(INPUT *fp) {$/;"	f	class:sparse_hashtable
read_nopointer_data	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool read_nopointer_data(INPUT *fp) {$/;"	f	class:BaseHashtableInterface
read_nopointer_data	sparsehash-2.0.2/src/hash_test_interface.h	/^  template <typename INPUT> bool read_nopointer_data(INPUT *) {$/;"	f	class:HashtableInterface_DenseHashMap
read_nopointer_data	sparsehash-2.0.2/src/hash_test_interface.h	/^  template <typename INPUT> bool read_nopointer_data(INPUT *) {$/;"	f	class:HashtableInterface_DenseHashSet
read_nopointer_data	sparsehash-2.0.2/src/hash_test_interface.h	/^  template <typename INPUT> bool read_nopointer_data(INPUT *) {$/;"	f	class:HashtableInterface_DenseHashtable
read_nopointer_data	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool read_nopointer_data(INPUT *fp) {$/;"	f	class:sparse_hashtable
realloc_or_die	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^    pointer realloc_or_die(pointer \/*ptr*\/, size_type \/*n*\/) {$/;"	f	class:dense_hashtable::alloc_impl
realloc_or_die	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^    pointer realloc_or_die(pointer ptr, size_type n) {$/;"	f	class:dense_hashtable::alloc_impl
reallocate	sparsehash-2.0.2/src/hashtable_test.cc	/^  pointer reallocate(pointer p, size_type n) {$/;"	f	struct:__anon4::Alloc
reallocate	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  pointer reallocate(pointer p, size_type n) {$/;"	f	class:libc_allocator_with_realloc
rebind	sparsehash-2.0.2/src/hashtable_test.cc	/^  struct rebind {$/;"	s	struct:__anon4::Alloc	file:
rebind	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  struct rebind {$/;"	s	class:libc_allocator_with_realloc
rebind	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^  struct rebind {$/;"	s	class:instrumented_allocator	file:
ref	streetyp.h	/^  Bref ref;$/;"	m	struct:Pathinfo
reference	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef typename HT::reference reference;$/;"	t	class:BaseHashtableInterface
reference	sparsehash-2.0.2/src/hashtable_test.cc	/^  typedef T& reference;$/;"	t	struct:__anon4::Alloc	file:
reference	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef typename value_alloc_type::const_reference reference;$/;"	t	struct:dense_hashtable_const_iterator
reference	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef typename value_alloc_type::reference reference;$/;"	t	class:dense_hashtable
reference	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef typename value_alloc_type::reference reference;$/;"	t	struct:dense_hashtable_iterator
reference	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  typedef T& reference;$/;"	t	class:libc_allocator_with_realloc
reference	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename value_alloc_type::const_reference reference;$/;"	t	struct:sparse_hashtable_const_iterator
reference	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename value_alloc_type::reference reference;$/;"	t	class:sparse_hashtable
reference	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename value_alloc_type::reference reference;$/;"	t	struct:sparse_hashtable_destructive_iterator
reference	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename value_alloc_type::reference reference;$/;"	t	struct:sparse_hashtable_iterator
reference	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^  typedef T& reference;$/;"	t	class:instrumented_allocator	file:
rehash	sparsehash-2.0.2/src/hash_test_interface.h	/^  void rehash(size_type hint)    { ht_.rehash(hint); }$/;"	f	class:BaseHashtableInterface
rehash	sparsehash-2.0.2/src/hash_test_interface.h	/^  void rehash(typename p::size_type hint) { this->resize(hint); }$/;"	f	class:HashtableInterface_DenseHashtable
rehash	sparsehash-2.0.2/src/hash_test_interface.h	/^  void rehash(typename p::size_type hint) { this->resize(hint); }$/;"	f	class:HashtableInterface_SparseHashtable
relposition	multidef.h	/^       relposition;  \/\/ the relative position of the sequence$/;"	m	struct:Seqinfo
remain	streetyp.h	/^       remain;          \/\/ number of remaining characters on edge$/;"	m	struct:Location
remain	streetyp.h	/^  Uint remain,$/;"	m	struct:Simpleloc
remove_const	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_const { typedef T type; };$/;"	s
remove_const	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_const<T const> { typedef T type; };$/;"	s
remove_cv	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_cv {$/;"	s
remove_pointer	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_pointer { typedef T type; };$/;"	s
remove_pointer	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_pointer<T* const volatile> {$/;"	s
remove_pointer	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_pointer<T* const> { typedef T type; };$/;"	s
remove_pointer	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_pointer<T* volatile> { typedef T type; };$/;"	s
remove_pointer	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_pointer<T*> { typedef T type; };$/;"	s
remove_reference	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_reference { typedef T type; };$/;"	s
remove_reference	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_reference<T&> { typedef T type; };$/;"	s
remove_volatile	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_volatile { typedef T type; };$/;"	s
remove_volatile	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_volatile<T volatile> { typedef T type; };$/;"	s
replaceblanks	multidef.h	/^       replaceblanks,    \/\/ replaceblanks by underscore$/;"	m	struct:Showdescinfo
report	sparsehash-2.0.2/src/time_hash_map.cc	/^static void report(char const* title, double t,$/;"	f	file:
rescan	construct.cpp	/^static void rescan (Suffixtree *stree)$/;"	f	file:
rescanstree	linkloc.cpp	/^void rescanstree(Suffixtree *stree,Location *loc,$/;"	f
reset_thresholds	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  void reset_thresholds(size_type num_buckets) {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
reseterror	seterror.cpp	/^void reseterror(void)$/;"	f
resize	sparsehash-2.0.2/src/hash_test_interface.h	/^  void resize(size_type hint)    { ht_.resize(hint); }$/;"	f	class:BaseHashtableInterface
resize	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void resize(size_type req_elements) {       \/\/ resize to this or larger$/;"	f	class:dense_hashtable
resize	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void resize(size_type req_elements) {       \/\/ resize to this or larger$/;"	f	class:sparse_hashtable
resize	sparsehash-2.0.2/src/time_hash_map.cc	/^  void resize(size_t r) { this->rehash(r); }$/;"	f	class:EasyUseHashMap
resize	sparsehash-2.0.2/src/time_hash_map.cc	/^  void resize(size_t r) { }$/;"	f	class:EasyUseHashMap
resize	sparsehash-2.0.2/src/time_hash_map.cc	/^  void resize(size_t) { }   \/\/ map<> doesn't support resize$/;"	f	class:EasyUseMap
resize_delta	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool resize_delta(size_type delta) {$/;"	f	class:dense_hashtable
resize_delta	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool resize_delta(size_type delta) {$/;"	f	class:sparse_hashtable
resize_table	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void resize_table(size_type \/*old_size*\/, size_type new_size,$/;"	f	class:dense_hashtable
resize_table	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void resize_table(size_type old_size, size_type new_size, base::false_type) {$/;"	f	class:dense_hashtable
result_type	sparsehash-2.0.2/src/hashtable_test.cc	/^  typedef Value result_type;$/;"	t	struct:__anon4::Negation	file:
result_type	sparsehash-2.0.2/src/hashtable_test.cc	/^  typedef const char* result_type;$/;"	t	struct:__anon4::Identity	file:
result_type	sparsehash-2.0.2/src/hashtable_test.cc	/^  typedef string result_type;$/;"	t	struct:__anon4::Capital	file:
reversecomplement	maxmatdef.h	/^       reversecomplement,       \/\/ compute matches on reverse strand$/;"	m	struct:MMcallinfo
reversecomplement	maxmatdef.h	/^       reversecomplement,      \/\/ compute reverse complement matches$/;"	m	struct:Matchprocessinfo
rgBuckets	sparsehash-2.0.2/experimental/libchash.c	/^   DenseBucket *rgBuckets;      \/* A bin is an array of buckets *\/$/;"	m	struct:DenseBin	file:
rootchildren	streetyp.h	/^       *rootchildren;         \/\/ references to successors of root$/;"	m	struct:Suffixtree
rootsucclocationsstree	access.cpp	/^void rootsucclocationsstree(Suffixtree *stree,ArraySimpleloc *ll)$/;"	f
s	sparsehash-2.0.2/src/hashtable_test.cc	/^  const char* s() const { return s_; }$/;"	f	struct:__anon4::ValueType
s_	sparsehash-2.0.2/src/hashtable_test.cc	/^  const char* s_;$/;"	m	struct:__anon4::ValueType	file:
s_	sparsehash-2.0.2/src/hashtable_test.cc	/^  string* const s_;$/;"	m	class:__anon5::StringIO	file:
safestringcopy	safescpy.cpp	/^Sint safestringcopy(char *dest,char *source,Sint maxlen)$/;"	f
sbindir	sparsehash-2.0.2/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
scanmultiplefastafile	maxmatinp.cpp	/^Sint scanmultiplefastafile (Multiseq *multiseq,$/;"	f
scanprefix	construct.cpp	/^static void scanprefix(Suffixtree *stree)$/;"	f	file:
scanprefixfromnodestree	scanpref.cpp	/^Uchar *scanprefixfromnodestree(Suffixtree *stree,Location *loc,Bref btptr,Uchar *left,Uchar *right,Uint rescanlength)$/;"	f
scanprefixstree	scanpref.cpp	/^Uchar *scanprefixstree(Suffixtree *stree,Location *outloc,$/;"	f
secondtime	streetyp.h	/^  bool secondtime;$/;"	m	struct:DFSstate
sentinel	streetyp.h	/^         *sentinel;           \/\/ points to the position of the \\(\\$\\)-symbol$/;"	m	struct:Suffixtree
seq	genDNA.py	/^seq = []$/;"	v
seqlength	multidef.h	/^       seqlength,    \/\/ the length of the sequence$/;"	m	struct:Seqinfo
seqnum	multidef.h	/^  Uint seqnum,       \/\/ the sequence number in multiseq$/;"	m	struct:Seqinfo
seqstartpos	multidef.h	/^       seqstartpos,  \/\/ the position of the first character in multiseq.sequence$/;"	m	struct:Seqinfo
sequence	multidef.h	/^  Uchar *sequence,                     \/\/ the concatenated sequences$/;"	m	struct:Multiseq
serialize	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool serialize(ValueSerializer serializer, OUTPUT *fp) {$/;"	f	class:BaseHashtableInterface
serialize	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool serialize(ValueSerializer serializer, OUTPUT *fp) {$/;"	f	class:dense_hashtable
serialize	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool serialize(ValueSerializer serializer, OUTPUT *fp) {$/;"	f	class:sparse_hashtable
set_consider_shrink	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  void set_consider_shrink(bool t) {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
set_deleted	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool set_deleted(const_iterator &it) {$/;"	f	class:dense_hashtable
set_deleted	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool set_deleted(iterator &it) {$/;"	f	class:dense_hashtable
set_deleted	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool set_deleted(const_iterator &it) {$/;"	f	class:sparse_hashtable
set_deleted	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool set_deleted(iterator &it) {$/;"	f	class:sparse_hashtable
set_deleted_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  void set_deleted_key(const key_type& k) { ht_.set_deleted_key(k); }$/;"	f	class:BaseHashtableInterface
set_deleted_key	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void set_deleted_key(const key_type &key) {$/;"	f	class:dense_hashtable
set_deleted_key	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void set_deleted_key(const key_type &key) {$/;"	f	class:sparse_hashtable
set_empty_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  void set_empty_key(const key_type& k) { ht_.set_empty_key(k); }$/;"	f	class:BaseHashtableInterface
set_empty_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  void set_empty_key(const typename p::key_type& k) { }$/;"	f	class:HashtableInterface_SparseHashMap
set_empty_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  void set_empty_key(const typename p::key_type& k) { }$/;"	f	class:HashtableInterface_SparseHashSet
set_empty_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  void set_empty_key(const typename p::key_type& k) { }$/;"	f	class:HashtableInterface_SparseHashtable
set_empty_key	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void set_empty_key(const_reference val) {$/;"	f	class:dense_hashtable
set_enlarge_factor	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  void set_enlarge_factor(float f) {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
set_enlarge_threshold	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  void set_enlarge_threshold(size_type t) {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
set_key	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^    void set_key(pointer v, const key_type& k) const {$/;"	f	class:dense_hashtable::KeyInfo
set_key	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void set_key(pointer v, const key_type& k) const {$/;"	f	class:dense_hashtable
set_key	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^    void set_key(pointer v, const key_type& k) const {$/;"	f	class:sparse_hashtable::KeyInfo
set_key	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void set_key(pointer v, const key_type& k) const {$/;"	f	class:sparse_hashtable
set_resizing_parameters	sparsehash-2.0.2/src/hash_test_interface.h	/^  void set_resizing_parameters(float shrink, float grow) {$/;"	f	class:BaseHashtableInterface
set_resizing_parameters	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void set_resizing_parameters(float shrink, float grow) {$/;"	f	class:dense_hashtable
set_resizing_parameters	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  void set_resizing_parameters(float shrink, float grow) {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
set_resizing_parameters	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void set_resizing_parameters(float shrink, float grow) {$/;"	f	class:sparse_hashtable
set_s	sparsehash-2.0.2/src/hashtable_test.cc	/^  void set_s(const char* new_s) {$/;"	f	struct:__anon4::ValueType
set_shrink_factor	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  void set_shrink_factor(float f) {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
set_shrink_threshold	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  void set_shrink_threshold(size_type t) {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
set_use_deleted	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  void set_use_deleted(bool t) {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
set_use_empty	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  void set_use_empty(bool t) {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
set_value	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void set_value(pointer dst, const_reference src) {$/;"	f	class:dense_hashtable
set_value	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void set_value(pointer dst, const_reference src) {$/;"	f	class:sparse_hashtable
setatnewleaf	streetyp.h	/^  bool setatnewleaf;          \/\/ nil-reference is stored in new leaf$/;"	m	struct:Suffixtree
setdepthtab	depthtab.cpp	/^static void setdepthtab(ArrayUint *depthtab,Uint depth)$/;"	f	file:
seterror	seterror.cpp	/^void seterror(Sint code)$/;"	f
setlink	streetyp.h	/^       *setlink,              \/\/ address of a nil-reference$/;"	m	struct:Suffixtree
setmaxspace	space.cpp	/^static void setmaxspace(void)$/;"	f	file:
settings	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  Settings settings;$/;"	m	class:dense_hashtable
settings	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  Settings settings;$/;"	m	class:sparse_hashtable
sh_hashtable_settings	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  sh_hashtable_settings(const hasher& hf,$/;"	f	class:sparsehash_internal::sh_hashtable_settings
sh_hashtable_settings	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^class sh_hashtable_settings : public HashFunc {$/;"	c	namespace:sparsehash_internal
sharedstatedir	sparsehash-2.0.2/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
showdepthtab	depthtab.cpp	/^void showdepthtab(ArrayUint *dt)$/;"	f
showexclude	procopt.cpp	/^void showexclude(OptionDescription *opt,Sint *excludetab,Uint len)$/;"	f
showlocation	streedbg.cpp	/^void showlocation(FILE *fp,Suffixtree *stree,Location *loc)$/;"	f
showmaximalmatch	procmaxmat.cpp	/^static Sint showmaximalmatch (void *info,$/;"	f	file:
showoptdesc	procopt.cpp	/^static void showoptdesc(FILE *fp,Uint indentlevel,char *desc)$/;"	f	file:
showoptions	procopt.cpp	/^void showoptions(FILE *outfp,char *program,OptionDescription *opt,$/;"	f
showoptionswithoutexclude	procopt.cpp	/^void showoptionswithoutexclude(FILE *outfp,char *program,$/;"	f
showpathstree	access.cpp	/^void showpathstree(Suffixtree *stree,Bref bnode,$/;"	f
showreversepositions	maxmatdef.h	/^       showreversepositions,    \/\/ give reverse pos. rel. to orig. string$/;"	m	struct:MMcallinfo
showreversepositions	maxmatdef.h	/^       showreversepositions,   \/\/ is option \\texttt{-c} on?$/;"	m	struct:Matchprocessinfo
showseqandmaximalmatch	procmaxmat.cpp	/^static Sint showseqandmaximalmatch (void *info,$/;"	f	file:
showsequencedescription	procmaxmat.cpp	/^static void showsequencedescription(Multiseq *multiseq, Uint maxdesclength,$/;"	f	file:
showsequenceheader	procmaxmat.cpp	/^static void showsequenceheader(Multiseq *multiseq,$/;"	f	file:
showsequencelengths	maxmatdef.h	/^       showsequencelengths,     \/\/ show length of sequences on header line$/;"	m	struct:MMcallinfo
showsequencelengths	maxmatdef.h	/^       showsequencelengths,    \/\/ is option \\texttt{-L} on?$/;"	m	struct:Matchprocessinfo
showstate	streedbg.cpp	/^void showstate(Suffixtree *stree)$/;"	f
showstree	streedbg.cpp	/^void showstree(Suffixtree *stree)$/;"	f
showstring	maxmatdef.h	/^  bool showstring,              \/\/ show the matching string$/;"	m	struct:MMcallinfo
showstring	maxmatdef.h	/^  bool showstring,             \/\/ is option \\texttt{-s} on?$/;"	m	struct:Matchprocessinfo
showsubtree	streedbg.cpp	/^static void showsubtree(Suffixtree *stree,Uint indent,Uint *btptr)$/;"	f	file:
showsymbol	streedbg.cpp	/^char *showsymbol(Uchar c)$/;"	f
showsymbolstree	streetyp.h	/^  char * (*showsymbolstree)(Uchar,Uchar *);$/;"	m	struct:Suffixtree
showtable	streedbg.cpp	/^void showtable(Suffixtree *stree,bool final)$/;"	f
showthesymbolstring	streedbg.cpp	/^void showthesymbolstring(FILE *fp,Uchar *tlast,Uchar *left,$/;"	f
showusage	maxmatopt.cpp	/^static void showusage(char *program,OptionDescription *options,$/;"	f	file:
shrink_factor	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  float shrink_factor() const {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
shrink_factor_	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  float shrink_factor_;          \/\/ how empty before resize$/;"	m	class:sparsehash_internal::sh_hashtable_settings
shrink_size	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  size_type shrink_size(size_type x) const {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
shrink_threshold	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  size_type shrink_threshold() const {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
shrink_threshold_	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  size_type shrink_threshold_;   \/\/ table.size() * shrink_factor$/;"	m	class:sparsehash_internal::sh_hashtable_settings
shuffle	sparsehash-2.0.2/src/time_hash_map.cc	/^static void shuffle(vector<int>* v) {$/;"	f	file:
simple_compat_test_LDADD	sparsehash-2.0.2/Makefile	/^simple_compat_test_LDADD = $(LDADD)$/;"	m
simple_compat_test_OBJECTS	sparsehash-2.0.2/Makefile	/^simple_compat_test_OBJECTS = $(am_simple_compat_test_OBJECTS) \\$/;"	m
simple_compat_test_SOURCES	sparsehash-2.0.2/Makefile	/^simple_compat_test_SOURCES = \\$/;"	m
simple_test_LDADD	sparsehash-2.0.2/Makefile	/^simple_test_LDADD = $(LDADD)$/;"	m
simple_test_OBJECTS	sparsehash-2.0.2/Makefile	/^simple_test_OBJECTS = $(am_simple_test_OBJECTS) \\$/;"	m
simple_test_SOURCES	sparsehash-2.0.2/Makefile	/^simple_test_SOURCES = \\$/;"	m
simplefileOpen	mapfile.cpp	/^Sint simplefileOpen(char *filename,Uint *numofbytes)$/;"	f
size	sparsehash-2.0.2/src/hash_test_interface.h	/^  size_type size() const             { return ht_.size(); }$/;"	f	class:BaseHashtableInterface
size	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  size_type size() const      { return num_elements - num_deleted; }$/;"	f	class:dense_hashtable
size	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  size_type size() const      { return table.num_nonempty() - num_deleted; }$/;"	f	class:sparse_hashtable
size_type	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef typename HT::size_type size_type;$/;"	t	class:BaseHashtableInterface
size_type	sparsehash-2.0.2/src/hashtable_test.cc	/^  typedef SizeT size_type;$/;"	t	struct:__anon4::Alloc	file:
size_type	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^    typedef typename A::size_type size_type;$/;"	t	class:dense_hashtable::alloc_impl
size_type	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^    typedef typename libc_allocator_with_realloc<A>::size_type size_type;$/;"	t	class:dense_hashtable::alloc_impl
size_type	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef typename value_alloc_type::size_type size_type;$/;"	t	class:dense_hashtable
size_type	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef typename value_alloc_type::size_type size_type;$/;"	t	struct:dense_hashtable_const_iterator
size_type	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef typename value_alloc_type::size_type size_type;$/;"	t	struct:dense_hashtable_iterator
size_type	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  typedef SizeType size_type;$/;"	t	class:sparsehash_internal::sh_hashtable_settings
size_type	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  typedef size_t size_type;$/;"	t	class:libc_allocator_with_realloc
size_type	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename value_alloc_type::size_type size_type;$/;"	t	class:sparse_hashtable
size_type	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename value_alloc_type::size_type size_type;$/;"	t	struct:sparse_hashtable_const_iterator
size_type	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename value_alloc_type::size_type size_type;$/;"	t	struct:sparse_hashtable_destructive_iterator
size_type	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename value_alloc_type::size_type size_type;$/;"	t	struct:sparse_hashtable_iterator
size_type	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^  typedef uint16 size_type;$/;"	t	class:instrumented_allocator	file:
sizeofcells	space.cpp	/^  Uint sizeofcells,    \/\/ size of cells of the block$/;"	m	struct:Blockdescription	file:
skipprefix	multidef.h	/^  Uint skipprefix,       \/\/ always skip this number of prefixes$/;"	m	struct:Showdescinfo
small_	sparsehash-2.0.2/src/sparsehash/template_util.h	/^typedef char small_;$/;"	t
smallnode	streetyp.h	/^       smallnode,             \/\/ number of small nodes$/;"	m	struct:Suffixtree
smallnotcompleted	streetyp.h	/^       smallnotcompleted,     \/\/ the number of small nodes in the current chain$/;"	m	struct:Suffixtree
snprintf	sparsehash-2.0.2/src/windows/port.cc	/^int snprintf(char *str, size_t size, const char *format, ...) {$/;"	f
sortMUMcandidates	cleanMUMcand.cpp	/^static void sortMUMcandidates(ArrayMUMcandidate *mumcand)$/;"	f	file:
spaceStrings	arraydef.h	/^  Stringtype *spaceStrings;$/;"	m	struct:ArrayStrings
spaceforbranchtab	construct.cpp	/^static void spaceforbranchtab(Suffixtree *stree)$/;"	f	file:
spacepeak	mapfile.cpp	/^            spacepeak = 0,                 \/\/ maximally mapped num of bytes$/;"	v	file:
spacepeak	space.cpp	/^            spacepeak = 0;      \/\/ maximally allocated num of bytes$/;"	v	file:
spaceptr	space.cpp	/^  void *spaceptr;      \/\/ ptr to the spaceblock$/;"	m	struct:Blockdescription	file:
sparse_hashtable	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  explicit sparse_hashtable(size_type expected_max_items_in_table = 0,$/;"	f	class:sparse_hashtable
sparse_hashtable	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  sparse_hashtable(MoveDontCopyT mover, sparse_hashtable& ht,$/;"	f	class:sparse_hashtable
sparse_hashtable	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  sparse_hashtable(const sparse_hashtable& ht,$/;"	f	class:sparse_hashtable
sparse_hashtable	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^class sparse_hashtable {$/;"	c
sparse_hashtable_const_iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  sparse_hashtable_const_iterator() { }      \/\/ never used internally$/;"	f	struct:sparse_hashtable_const_iterator
sparse_hashtable_const_iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  sparse_hashtable_const_iterator(const iterator &it)$/;"	f	struct:sparse_hashtable_const_iterator
sparse_hashtable_const_iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  sparse_hashtable_const_iterator(const sparse_hashtable<V,K,HF,ExK,SetK,EqK,A> *h,$/;"	f	struct:sparse_hashtable_const_iterator
sparse_hashtable_const_iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^struct sparse_hashtable_const_iterator {$/;"	s
sparse_hashtable_destructive_iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  sparse_hashtable_destructive_iterator() { }          \/\/ never used internally$/;"	f	struct:sparse_hashtable_destructive_iterator
sparse_hashtable_destructive_iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  sparse_hashtable_destructive_iterator(const$/;"	f	struct:sparse_hashtable_destructive_iterator
sparse_hashtable_destructive_iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^struct sparse_hashtable_destructive_iterator {$/;"	s
sparse_hashtable_iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  sparse_hashtable_iterator() { }      \/\/ not ever used internally$/;"	f	struct:sparse_hashtable_iterator
sparse_hashtable_iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  sparse_hashtable_iterator(const sparse_hashtable<V,K,HF,ExK,SetK,EqK,A> *h,$/;"	f	struct:sparse_hashtable_iterator
sparse_hashtable_iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^struct sparse_hashtable_iterator {$/;"	s
sparsehash_internal	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^namespace sparsehash_internal {$/;"	n
sparsehashinclude_HEADERS	sparsehash-2.0.2/Makefile	/^sparsehashinclude_HEADERS = \\$/;"	m
sparsehashincludedir	sparsehash-2.0.2/Makefile	/^sparsehashincludedir = $(includedir)\/sparsehash$/;"	m
sparsetable_unittest_LDADD	sparsehash-2.0.2/Makefile	/^sparsetable_unittest_LDADD = $(LDADD)$/;"	m
sparsetable_unittest_OBJECTS	sparsehash-2.0.2/Makefile	/^sparsetable_unittest_OBJECTS = $(am_sparsetable_unittest_OBJECTS) \\$/;"	m
sparsetable_unittest_SOURCES	sparsehash-2.0.2/Makefile	/^sparsetable_unittest_SOURCES = \\$/;"	m
squash_deleted	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void squash_deleted() {           \/\/ gets rid of any deleted entries we have$/;"	f	class:dense_hashtable
squash_deleted	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void squash_deleted() {           \/\/ gets rid of any deleted entries we have$/;"	f	class:sparse_hashtable
srcdir	sparsehash-2.0.2/Makefile	/^srcdir = .$/;"	m
st_iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^      st_iterator;$/;"	t	struct:sparse_hashtable_const_iterator
st_iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^      st_iterator;$/;"	t	struct:sparse_hashtable_destructive_iterator
st_iterator	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^      st_iterator;$/;"	t	struct:sparse_hashtable_iterator
stack	streetyp.h	/^  ArrayBref stack;$/;"	m	struct:DFSstate
stamp_run	sparsehash-2.0.2/src/time_hash_map.cc	/^static void stamp_run(int iters) {$/;"	f	file:
start	sparsehash-2.0.2/src/time_hash_map.cc	/^  long long int start;$/;"	m	class:Rusage	file:
start	sparsehash-2.0.2/src/time_hash_map.cc	/^  struct rusage start;$/;"	m	class:Rusage	typeref:struct:Rusage::rusage	file:
start	types.h	/^      Uint start, length;$/;"	m	struct:ListType
start_time_t	sparsehash-2.0.2/src/time_hash_map.cc	/^  time_t start_time_t;$/;"	m	class:Rusage	file:
startdesc	multidef.h	/^  Uint *startdesc,                     \/\/ of length numofsequences + 1$/;"	m	struct:Multiseq
storeMUMcandidate	procmaxmat.cpp	/^static Sint storeMUMcandidate (void *info, Uint matchlength, Uint subjectstart, Uint seqnum, Uint querystart)$/;"	f	file:
strdup	sparsehash-2.0.2/src/windows/port.h	62;"	d
stree	findmaxmat.cpp	/^  Suffixtree *stree;              \/\/ reference to suffix tree of subject-seq$/;"	m	struct:Maxmatchinfo	file:
stree	maxmatdef.h	/^  Suffixtree stree;            \/\/ the suffix tree of the subject-sequence$/;"	m	struct:Matchprocessinfo
stresshashfunction	sparsehash-2.0.2/src/time_hash_map.cc	/^static void stresshashfunction(int desired_insertions,$/;"	f	file:
stresshashfunction	sparsehash-2.0.2/src/time_hash_map.cc	/^static void stresshashfunction(int num_inserts) {$/;"	f	file:
stringbuffer	arraydef.h	/^  Uchar *stringbuffer;$/;"	m	struct:ArrayStrings
stringbufferlength	arraydef.h	/^  Uint stringbufferlength, nextfreeStrings, allocatedStrings;$/;"	m	struct:ArrayStrings
subdir	sparsehash-2.0.2/Makefile	/^subdir = .$/;"	m
subjectfile	maxmatdef.h	/^       subjectfile[PATH_MAX+1], \/\/ filename of the subject-sequence$/;"	m	struct:MMcallinfo
subjectmultiseq	maxmatdef.h	/^  Multiseq *subjectmultiseq,   \/\/ reference to multiseq of subject$/;"	m	struct:Matchprocessinfo
subtractspace	space.cpp	/^static void subtractspace(Uint space)$/;"	f	file:
succlocationsstree	access.cpp	/^void succlocationsstree(Suffixtree *stree,bool nosentinel,Simpleloc *loc,$/;"	f
suffixlink	streetyp.h	/^  Bref suffixlink;          \/\/ the suffix link is always to a branching node$/;"	m	struct:Branchinfo
sum_allocate_bytes	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^static size_t sum_allocate_bytes;$/;"	v	file:
sum_deallocate_bytes	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^static size_t sum_deallocate_bytes;$/;"	v	file:
supports_brackets	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_brackets() const { return false; }$/;"	f	class:HashtableInterface_DenseHashSet
supports_brackets	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_brackets() const { return false; }$/;"	f	class:HashtableInterface_DenseHashtable
supports_brackets	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_brackets() const { return false; }$/;"	f	class:HashtableInterface_SparseHashSet
supports_brackets	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_brackets() const { return false; }$/;"	f	class:HashtableInterface_SparseHashtable
supports_brackets	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_brackets() const { return true; }$/;"	f	class:HashtableInterface_DenseHashMap
supports_brackets	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_brackets() const { return true; }$/;"	f	class:HashtableInterface_SparseHashMap
supports_clear_no_resize	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_clear_no_resize() const { return false; }$/;"	f	class:HashtableInterface_SparseHashMap
supports_clear_no_resize	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_clear_no_resize() const { return false; }$/;"	f	class:HashtableInterface_SparseHashSet
supports_clear_no_resize	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_clear_no_resize() const { return false; }$/;"	f	class:HashtableInterface_SparseHashtable
supports_clear_no_resize	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_clear_no_resize() const { return true; }$/;"	f	class:HashtableInterface_DenseHashMap
supports_clear_no_resize	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_clear_no_resize() const { return true; }$/;"	f	class:HashtableInterface_DenseHashSet
supports_clear_no_resize	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_clear_no_resize() const { return true; }$/;"	f	class:HashtableInterface_DenseHashtable
supports_deleted_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_deleted_key() const { return true; }$/;"	f	class:HashtableInterface_DenseHashMap
supports_deleted_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_deleted_key() const { return true; }$/;"	f	class:HashtableInterface_DenseHashSet
supports_deleted_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_deleted_key() const { return true; }$/;"	f	class:HashtableInterface_DenseHashtable
supports_deleted_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_deleted_key() const { return true; }$/;"	f	class:HashtableInterface_SparseHashMap
supports_deleted_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_deleted_key() const { return true; }$/;"	f	class:HashtableInterface_SparseHashSet
supports_deleted_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_deleted_key() const { return true; }$/;"	f	class:HashtableInterface_SparseHashtable
supports_empty_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_empty_key() const { return false; }$/;"	f	class:HashtableInterface_SparseHashMap
supports_empty_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_empty_key() const { return false; }$/;"	f	class:HashtableInterface_SparseHashSet
supports_empty_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_empty_key() const { return false; }$/;"	f	class:HashtableInterface_SparseHashtable
supports_empty_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_empty_key() const { return true; }$/;"	f	class:HashtableInterface_DenseHashMap
supports_empty_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_empty_key() const { return true; }$/;"	f	class:HashtableInterface_DenseHashSet
supports_empty_key	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_empty_key() const { return true; }$/;"	f	class:HashtableInterface_DenseHashtable
supports_num_table_copies	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_num_table_copies() const { return false; }$/;"	f	class:HashtableInterface_DenseHashMap
supports_num_table_copies	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_num_table_copies() const { return false; }$/;"	f	class:HashtableInterface_DenseHashSet
supports_num_table_copies	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_num_table_copies() const { return false; }$/;"	f	class:HashtableInterface_SparseHashMap
supports_num_table_copies	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_num_table_copies() const { return false; }$/;"	f	class:HashtableInterface_SparseHashSet
supports_num_table_copies	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_num_table_copies() const { return true; }$/;"	f	class:HashtableInterface_DenseHashtable
supports_num_table_copies	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_num_table_copies() const { return true; }$/;"	f	class:HashtableInterface_SparseHashtable
supports_readwrite	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_readwrite() const { return false; }$/;"	f	class:HashtableInterface_DenseHashMap
supports_readwrite	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_readwrite() const { return false; }$/;"	f	class:HashtableInterface_DenseHashSet
supports_readwrite	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_readwrite() const { return false; }$/;"	f	class:HashtableInterface_DenseHashtable
supports_readwrite	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_readwrite() const { return true; }$/;"	f	class:HashtableInterface_SparseHashMap
supports_readwrite	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_readwrite() const { return true; }$/;"	f	class:HashtableInterface_SparseHashSet
supports_readwrite	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_readwrite() const { return true; }$/;"	f	class:HashtableInterface_SparseHashtable
supports_serialization	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_serialization() const { return true; }$/;"	f	class:HashtableInterface_DenseHashMap
supports_serialization	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_serialization() const { return true; }$/;"	f	class:HashtableInterface_DenseHashSet
supports_serialization	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_serialization() const { return true; }$/;"	f	class:HashtableInterface_DenseHashtable
supports_serialization	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_serialization() const { return true; }$/;"	f	class:HashtableInterface_SparseHashMap
supports_serialization	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_serialization() const { return true; }$/;"	f	class:HashtableInterface_SparseHashSet
supports_serialization	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool supports_serialization() const { return true; }$/;"	f	class:HashtableInterface_SparseHashtable
swap	sparsehash-2.0.2/src/hash_test_interface.h	/^  void swap(BaseHashtableInterface& other) { ht_.swap(other.ht_); }$/;"	f	class:BaseHashtableInterface
swap	sparsehash-2.0.2/src/hash_test_interface.h	/^void swap(HashtableInterface_DenseHashMap<K,T,Empty,H,E,A>& a,$/;"	f
swap	sparsehash-2.0.2/src/hash_test_interface.h	/^void swap(HashtableInterface_DenseHashSet<K,Empty,H,E,A>& a,$/;"	f
swap	sparsehash-2.0.2/src/hash_test_interface.h	/^void swap(HashtableInterface_DenseHashtable<V,K,Empty,HF,EK,SK,Eq,A>& a,$/;"	f
swap	sparsehash-2.0.2/src/hash_test_interface.h	/^void swap(HashtableInterface_SparseHashMap<K,T,H,E,A>& a,$/;"	f
swap	sparsehash-2.0.2/src/hash_test_interface.h	/^void swap(HashtableInterface_SparseHashSet<K,H,E,A>& a,$/;"	f
swap	sparsehash-2.0.2/src/hash_test_interface.h	/^void swap(HashtableInterface_SparseHashtable<V,K,HF,EK,SK,Eq,A>& a,$/;"	f
swap	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  void swap(dense_hashtable& ht) {$/;"	f	class:dense_hashtable
swap	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^inline void swap(dense_hashtable<V,K,HF,ExK,SetK,EqK,A> &x,$/;"	f
swap	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  void swap(sparse_hashtable& ht) {$/;"	f	class:sparse_hashtable
swap	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^inline void swap(sparse_hashtable<V,K,HF,ExK,SetK,EqK,A> &x,$/;"	f
sys	genDNA.py	/^import sys$/;"	i
sysconfdir	sparsehash-2.0.2/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
table	maxmatdef.h	/^  Table table;                 \/\/ Table to quickly discard suffixes$/;"	m	struct:Matchprocessinfo
table	sparsehash-2.0.2/experimental/libchash.h	/^   Table *table;        \/* The actual contents of the hashtable *\/$/;"	m	struct:HashTable
table	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  pointer table;$/;"	m	class:dense_hashtable
table	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  Table table;     \/\/ holds num_buckets and num_elements too$/;"	m	class:sparse_hashtable
taillcp	construct.cpp	/^static Uint taillcp(Suffixtree *stree,Uchar *start1, Uchar *end1)$/;"	f	file:
tailptr	streetyp.h	/^         *tailptr;            \/\/ points to the tail$/;"	m	struct:Suffixtree
tardir	sparsehash-2.0.2/Makefile	/^	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz$/;"	m
tardir	sparsehash-2.0.2/Makefile	/^	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2$/;"	m
tardir	sparsehash-2.0.2/Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	sparsehash-2.0.2/Makefile	/^	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma$/;"	m
tardir	sparsehash-2.0.2/Makefile	/^	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz$/;"	m
target_alias	sparsehash-2.0.2/Makefile	/^target_alias = $/;"	m
tcmalloc_flags	sparsehash-2.0.2/Makefile	/^tcmalloc_flags = $/;"	m
tcmalloc_libs	sparsehash-2.0.2/Makefile	/^tcmalloc_libs = $/;"	m
template_util_unittest_LDADD	sparsehash-2.0.2/Makefile	/^template_util_unittest_LDADD = $(LDADD)$/;"	m
template_util_unittest_OBJECTS	sparsehash-2.0.2/Makefile	/^template_util_unittest_OBJECTS = $(am_template_util_unittest_OBJECTS) \\$/;"	m
template_util_unittest_SOURCES	sparsehash-2.0.2/Makefile	/^template_util_unittest_SOURCES = \\$/;"	m
test_all_maps	sparsehash-2.0.2/src/time_hash_map.cc	/^static void test_all_maps(int obj_size, int iters) {$/;"	f	file:
test_deleted	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool test_deleted(const const_iterator &it) const {$/;"	f	class:dense_hashtable
test_deleted	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool test_deleted(const iterator &it) const {$/;"	f	class:dense_hashtable
test_deleted	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool test_deleted(size_type bucknum) const {$/;"	f	class:dense_hashtable
test_deleted	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool test_deleted(const const_iterator &it) const {$/;"	f	class:sparse_hashtable
test_deleted	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool test_deleted(const destructive_iterator &it) const {$/;"	f	class:sparse_hashtable
test_deleted	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool test_deleted(const iterator &it) const {$/;"	f	class:sparse_hashtable
test_deleted	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool test_deleted(size_type bucknum) const {$/;"	f	class:sparse_hashtable
test_deleted_key	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool test_deleted_key(const key_type& key) const {$/;"	f	class:dense_hashtable
test_deleted_key	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool test_deleted_key(const key_type& key) const {$/;"	f	class:sparse_hashtable
test_empty	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool test_empty(const const_iterator &it) const {$/;"	f	class:dense_hashtable
test_empty	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool test_empty(const iterator &it) const {$/;"	f	class:dense_hashtable
test_empty	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool test_empty(size_type bucknum) const {$/;"	f	class:dense_hashtable
testing	sparsehash-2.0.2/src/testutil.h	/^namespace testing {$/;"	n
text	streetyp.h	/^  Uchar *text,               \/\/ points to the input string$/;"	m	struct:Suffixtree
textlen	streetyp.h	/^  Uint textlen,               \/\/ the length of the input string$/;"	m	struct:Suffixtree
textpos	streetyp.h	/^       textpos;  \/\/ these last two items are redundant and can be computed$/;"	m	struct:Simpleloc
time_hash_map_CXXFLAGS	sparsehash-2.0.2/Makefile	/^time_hash_map_CXXFLAGS =  $(AM_CXXFLAGS)$/;"	m
time_hash_map_DEPENDENCIES	sparsehash-2.0.2/Makefile	/^time_hash_map_DEPENDENCIES =$/;"	m
time_hash_map_LDADD	sparsehash-2.0.2/Makefile	/^time_hash_map_LDADD = $/;"	m
time_hash_map_LDFLAGS	sparsehash-2.0.2/Makefile	/^time_hash_map_LDFLAGS = $/;"	m
time_hash_map_LINK	sparsehash-2.0.2/Makefile	/^time_hash_map_LINK = $(CXXLD) $(time_hash_map_CXXFLAGS) $(CXXFLAGS) \\$/;"	m
time_hash_map_OBJECTS	sparsehash-2.0.2/Makefile	/^time_hash_map_OBJECTS = $(am_time_hash_map_OBJECTS) \\$/;"	m
time_hash_map_SOURCES	sparsehash-2.0.2/Makefile	/^time_hash_map_SOURCES = \\$/;"	m
time_map_fetch	sparsehash-2.0.2/src/time_hash_map.cc	/^static void time_map_fetch(int iters, const vector<int>& indices,$/;"	f	file:
time_map_fetch_empty	sparsehash-2.0.2/src/time_hash_map.cc	/^static void time_map_fetch_empty(int iters) {$/;"	f	file:
time_map_fetch_random	sparsehash-2.0.2/src/time_hash_map.cc	/^static void time_map_fetch_random(int iters) {$/;"	f	file:
time_map_fetch_sequential	sparsehash-2.0.2/src/time_hash_map.cc	/^static void time_map_fetch_sequential(int iters) {$/;"	f	file:
time_map_grow	sparsehash-2.0.2/src/time_hash_map.cc	/^static void time_map_grow(int iters) {$/;"	f	file:
time_map_grow_predicted	sparsehash-2.0.2/src/time_hash_map.cc	/^static void time_map_grow_predicted(int iters) {$/;"	f	file:
time_map_iterate	sparsehash-2.0.2/src/time_hash_map.cc	/^static void time_map_iterate(int iters) {$/;"	f	file:
time_map_remove	sparsehash-2.0.2/src/time_hash_map.cc	/^static void time_map_remove(int iters) {$/;"	f	file:
time_map_replace	sparsehash-2.0.2/src/time_hash_map.cc	/^static void time_map_replace(int iters) {$/;"	f	file:
time_map_toggle	sparsehash-2.0.2/src/time_hash_map.cc	/^static void time_map_toggle(int iters) {$/;"	f	file:
toleaf	streetyp.h	/^  bool toleaf;$/;"	m	struct:Reference
top_build_prefix	sparsehash-2.0.2/Makefile	/^top_build_prefix = $/;"	m
top_builddir	sparsehash-2.0.2/Makefile	/^top_builddir = .$/;"	m
top_distdir	sparsehash-2.0.2/Makefile	/^top_distdir = $(distdir)$/;"	m
top_srcdir	sparsehash-2.0.2/Makefile	/^top_srcdir = .$/;"	m
totallength	multidef.h	/^       totallength;                    \/\/ the total length of all sequences$/;"	m	struct:Multiseq
transform	sparsehash-2.0.2/Makefile	/^transform = $(program_transform_name)$/;"	m
true_	sparsehash-2.0.2/src/sparsehash/template_util.h	/^typedef true_type  true_;$/;"	t
true_type	sparsehash-2.0.2/src/sparsehash/template_util.h	/^typedef integral_constant<bool, true>  true_type;$/;"	t
type	sparsehash-2.0.2/src/sparsehash/template_util.h	/^  typedef A type;$/;"	t	struct:if_
type	sparsehash-2.0.2/src/sparsehash/template_util.h	/^  typedef B type;$/;"	t	struct:if_
type	sparsehash-2.0.2/src/sparsehash/template_util.h	/^  typedef T type;$/;"	t	struct:identity_
type	sparsehash-2.0.2/src/sparsehash/template_util.h	/^  typedef integral_constant<T, v> type;$/;"	t	struct:integral_constant
type	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^  typedef T type; };$/;"	t	struct:remove_pointer
type	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^  typedef typename remove_const<typename remove_volatile<T>::type>::type type;$/;"	t	struct:remove_cv
type	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <typename T> struct add_reference { typedef T& type; };$/;"	t	struct:add_reference
type	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template <typename T> struct add_reference<T&> { typedef T& type; };$/;"	t	struct:add_reference
type	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_const { typedef T type; };$/;"	t	struct:remove_const
type	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_const<T const> { typedef T type; };$/;"	t	struct:remove_const
type	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_pointer { typedef T type; };$/;"	t	struct:remove_pointer
type	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_pointer<T* const> { typedef T type; };$/;"	t	struct:remove_pointer
type	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_pointer<T* volatile> { typedef T type; };$/;"	t	struct:remove_pointer
type	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_pointer<T*> { typedef T type; };$/;"	t	struct:remove_pointer
type	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_reference { typedef T type; };$/;"	t	struct:remove_reference
type	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_reference<T&> { typedef T type; };$/;"	t	struct:remove_reference
type	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_volatile { typedef T type; };$/;"	t	struct:remove_volatile
type	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^template<typename T> struct remove_volatile<T volatile> { typedef T type; };$/;"	t	struct:remove_volatile
type1	sparsehash-2.0.2/src/testutil.h	/^  typedef C1 type1;$/;"	t	struct:testing::TypeList18
type1	sparsehash-2.0.2/src/testutil.h	/^  typedef C1 type1;$/;"	t	struct:testing::TypeList6
type10	sparsehash-2.0.2/src/testutil.h	/^  typedef C10 type10;$/;"	t	struct:testing::TypeList18
type11	sparsehash-2.0.2/src/testutil.h	/^  typedef C11 type11;$/;"	t	struct:testing::TypeList18
type12	sparsehash-2.0.2/src/testutil.h	/^  typedef C12 type12;$/;"	t	struct:testing::TypeList18
type13	sparsehash-2.0.2/src/testutil.h	/^  typedef C13 type13;$/;"	t	struct:testing::TypeList18
type14	sparsehash-2.0.2/src/testutil.h	/^  typedef C14 type14;$/;"	t	struct:testing::TypeList18
type15	sparsehash-2.0.2/src/testutil.h	/^  typedef C15 type15;$/;"	t	struct:testing::TypeList18
type16	sparsehash-2.0.2/src/testutil.h	/^  typedef C16 type16;$/;"	t	struct:testing::TypeList18
type17	sparsehash-2.0.2/src/testutil.h	/^  typedef C17 type17;$/;"	t	struct:testing::TypeList18
type18	sparsehash-2.0.2/src/testutil.h	/^  typedef C18 type18;$/;"	t	struct:testing::TypeList18
type2	sparsehash-2.0.2/src/testutil.h	/^  typedef C2 type2;$/;"	t	struct:testing::TypeList18
type2	sparsehash-2.0.2/src/testutil.h	/^  typedef C2 type2;$/;"	t	struct:testing::TypeList6
type3	sparsehash-2.0.2/src/testutil.h	/^  typedef C3 type3;$/;"	t	struct:testing::TypeList18
type3	sparsehash-2.0.2/src/testutil.h	/^  typedef C3 type3;$/;"	t	struct:testing::TypeList6
type4	sparsehash-2.0.2/src/testutil.h	/^  typedef C4 type4;$/;"	t	struct:testing::TypeList18
type4	sparsehash-2.0.2/src/testutil.h	/^  typedef C4 type4;$/;"	t	struct:testing::TypeList6
type5	sparsehash-2.0.2/src/testutil.h	/^  typedef C5 type5;$/;"	t	struct:testing::TypeList18
type5	sparsehash-2.0.2/src/testutil.h	/^  typedef C5 type5;$/;"	t	struct:testing::TypeList6
type6	sparsehash-2.0.2/src/testutil.h	/^  typedef C6 type6;$/;"	t	struct:testing::TypeList18
type6	sparsehash-2.0.2/src/testutil.h	/^  typedef C6 type6;$/;"	t	struct:testing::TypeList6
type7	sparsehash-2.0.2/src/testutil.h	/^  typedef C7 type7;$/;"	t	struct:testing::TypeList18
type8	sparsehash-2.0.2/src/testutil.h	/^  typedef C8 type8;$/;"	t	struct:testing::TypeList18
type9	sparsehash-2.0.2/src/testutil.h	/^  typedef C9 type9;$/;"	t	struct:testing::TypeList18
type_equals_	sparsehash-2.0.2/src/sparsehash/template_util.h	/^struct type_equals_ : public false_ {$/;"	s
type_equals_	sparsehash-2.0.2/src/sparsehash/template_util.h	/^struct type_equals_<A, A> : public true_ {$/;"	s
type_traits_unittest_LDADD	sparsehash-2.0.2/Makefile	/^type_traits_unittest_LDADD = $(LDADD)$/;"	m
type_traits_unittest_OBJECTS	sparsehash-2.0.2/Makefile	/^type_traits_unittest_OBJECTS = $(am_type_traits_unittest_OBJECTS) \\$/;"	m
type_traits_unittest_SOURCES	sparsehash-2.0.2/Makefile	/^type_traits_unittest_SOURCES = \\$/;"	m
uint0	types.h	/^      Uint uint0, uint1, uint2;$/;"	m	struct:ThreeUint
uint0	types.h	/^    Uint uint0, uint1;$/;"	m	struct:PairUint
uint1	types.h	/^      Uint uint0, uint1, uint2;$/;"	m	struct:ThreeUint
uint1	types.h	/^    Uint uint0, uint1;$/;"	m	struct:PairUint
uint16	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^typedef u_int16_t uint16;$/;"	t	file:
uint2	types.h	/^      Uint uint0, uint1, uint2;$/;"	m	struct:ThreeUint
uint8	sparsehash-2.0.2/src/hashtable_test.cc	/^typedef unsigned char uint8;$/;"	t	file:
ulong	sparsehash-2.0.2/experimental/libchash.h	120;"	d
unlink	sparsehash-2.0.2/src/windows/port.h	61;"	d
unserialize	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool unserialize(ValueSerializer serializer, INPUT *fp) {$/;"	f	class:BaseHashtableInterface
unserialize	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  bool unserialize(ValueSerializer serializer, INPUT *fp) {$/;"	f	class:dense_hashtable
unserialize	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool unserialize(ValueSerializer serializer, INPUT *fp) {$/;"	f	class:sparse_hashtable
untilfirstblank	multidef.h	/^       untilfirstblank;  \/\/ only show sequence until first blank$/;"	m	struct:Showdescinfo
use_deleted	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  bool use_deleted() const {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
use_deleted_	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  bool use_deleted_;  \/\/ false until delkey has been set$/;"	m	class:sparsehash_internal::sh_hashtable_settings
use_empty	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  bool use_empty() const {$/;"	f	class:sparsehash_internal::sh_hashtable_settings
use_empty_	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^  bool use_empty_;    \/\/ used only by densehashtable, not sparsehashtable$/;"	m	class:sparsehash_internal::sh_hashtable_settings
val_info	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  ValInfo val_info;       \/\/ holds emptyval, and also the allocator$/;"	m	class:dense_hashtable
value	sparsehash-2.0.2/src/sparsehash/template_util.h	/^  static const T value = v;$/;"	m	struct:integral_constant
value	sparsehash-2.0.2/src/sparsehash/template_util.h	/^template <class T, T v> const T integral_constant<T, v>::value;$/;"	m	class:integral_constant
value	sparsehash-2.0.2/src/sparsehash/type_traits.h	/^  static const bool value = sizeof(tester<T>(0)) == sizeof(small_);$/;"	m	struct:internal::is_class_or_union
value_alloc_type	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef typename A::template rebind<V>::other value_alloc_type;$/;"	t	struct:dense_hashtable_const_iterator
value_alloc_type	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef typename A::template rebind<V>::other value_alloc_type;$/;"	t	struct:dense_hashtable_iterator
value_alloc_type	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef typename Alloc::template rebind<Value>::other value_alloc_type;$/;"	t	class:dense_hashtable
value_alloc_type	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename A::template rebind<V>::other value_alloc_type;$/;"	t	struct:sparse_hashtable_const_iterator
value_alloc_type	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename A::template rebind<V>::other value_alloc_type;$/;"	t	struct:sparse_hashtable_destructive_iterator
value_alloc_type	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename A::template rebind<V>::other value_alloc_type;$/;"	t	struct:sparse_hashtable_iterator
value_alloc_type	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef typename Alloc::template rebind<Value>::other value_alloc_type;$/;"	t	class:sparse_hashtable
value_type	sparsehash-2.0.2/src/hash_test_interface.h	/^  typedef typename HT::value_type value_type;$/;"	t	class:BaseHashtableInterface
value_type	sparsehash-2.0.2/src/hashtable_test.cc	/^  typedef T value_type;$/;"	t	struct:__anon4::Alloc	file:
value_type	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^    typedef typename alloc_impl<value_alloc_type>::value_type value_type;$/;"	t	class:dense_hashtable::ValInfo
value_type	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef V value_type;$/;"	t	struct:dense_hashtable_const_iterator
value_type	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef V value_type;$/;"	t	struct:dense_hashtable_iterator
value_type	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  typedef Value value_type;$/;"	t	class:dense_hashtable
value_type	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  typedef T value_type;$/;"	t	class:libc_allocator_with_realloc
value_type	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  typedef void value_type;$/;"	t	class:libc_allocator_with_realloc
value_type	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef V value_type;$/;"	t	struct:sparse_hashtable_const_iterator
value_type	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef V value_type;$/;"	t	struct:sparse_hashtable_destructive_iterator
value_type	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef V value_type;$/;"	t	struct:sparse_hashtable_iterator
value_type	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  typedef Value value_type;$/;"	t	class:sparse_hashtable
value_type	sparsehash-2.0.2/src/sparsehash/template_util.h	/^  typedef T value_type;$/;"	t	struct:integral_constant
value_type	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^  typedef T value_type;$/;"	t	class:instrumented_allocator	file:
version	sparsehash-2.0.2/packages/deb/rules	/^version=`ls src\/.libs\/lib*.so.* | \\$/;"	m
wccSequence	procmaxmat.cpp	/^static void wccSequence (Uchar *seq,$/;"	f	file:
wrapspace	space.cpp	/^void wrapspace(void)$/;"	f
write_bigendian_number	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^bool write_bigendian_number(OUTPUT* fp, IntType value, size_t length) {$/;"	f	namespace:sparsehash_internal
write_data	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^inline bool write_data(OUTPUT* fp, const void* data, size_t length) {$/;"	f	namespace:sparsehash_internal
write_data_internal	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^inline bool write_data_internal(Ignored*, FILE* fp,$/;"	f	namespace:sparsehash_internal
write_data_internal	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^inline bool write_data_internal(Ignored*, std::ostream* fp,$/;"	f	namespace:sparsehash_internal
write_data_internal	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^inline bool write_data_internal(OUTPUT* fp, void*,$/;"	f	namespace:sparsehash_internal
write_data_internal_for_ostream	sparsehash-2.0.2/src/sparsehash/internal/hashtable-common.h	/^inline bool write_data_internal_for_ostream(OSTREAM* fp,$/;"	f	namespace:sparsehash_internal
write_metadata	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool write_metadata(OUTPUT *fp) {$/;"	f	class:BaseHashtableInterface
write_metadata	sparsehash-2.0.2/src/hash_test_interface.h	/^  template <typename OUTPUT> bool write_metadata(OUTPUT *) { return false; }$/;"	f	class:HashtableInterface_DenseHashMap
write_metadata	sparsehash-2.0.2/src/hash_test_interface.h	/^  template <typename OUTPUT> bool write_metadata(OUTPUT *) { return false; }$/;"	f	class:HashtableInterface_DenseHashSet
write_metadata	sparsehash-2.0.2/src/hash_test_interface.h	/^  template <typename OUTPUT> bool write_metadata(OUTPUT *) { return false; }$/;"	f	class:HashtableInterface_DenseHashtable
write_metadata	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool write_metadata(OUTPUT *fp) {$/;"	f	class:sparse_hashtable
write_nopointer_data	sparsehash-2.0.2/src/hash_test_interface.h	/^  bool write_nopointer_data(OUTPUT *fp) {$/;"	f	class:BaseHashtableInterface
write_nopointer_data	sparsehash-2.0.2/src/hash_test_interface.h	/^  template <typename OUTPUT> bool write_nopointer_data(OUTPUT *) {$/;"	f	class:HashtableInterface_DenseHashMap
write_nopointer_data	sparsehash-2.0.2/src/hash_test_interface.h	/^  template <typename OUTPUT> bool write_nopointer_data(OUTPUT *) {$/;"	f	class:HashtableInterface_DenseHashSet
write_nopointer_data	sparsehash-2.0.2/src/hash_test_interface.h	/^  template <typename OUTPUT> bool write_nopointer_data(OUTPUT *) {$/;"	f	class:HashtableInterface_DenseHashtable
write_nopointer_data	sparsehash-2.0.2/src/sparsehash/internal/sparsehashtable.h	/^  bool write_nopointer_data(OUTPUT *fp) {$/;"	f	class:sparse_hashtable
~Alloc	sparsehash-2.0.2/src/hashtable_test.cc	/^  ~Alloc() {}$/;"	f	struct:__anon4::Alloc
~Base	sparsehash-2.0.2/src/type_traits_unittest.cc	/^  virtual ~Base() { }$/;"	f	class:__anon7::Base
~BaseHashtableInterface	sparsehash-2.0.2/src/hash_test_interface.h	/^  virtual ~BaseHashtableInterface() {}$/;"	f	class:BaseHashtableInterface
~ValueType	sparsehash-2.0.2/src/hashtable_test.cc	/^  ~ValueType() { set_s(NULL); }$/;"	f	struct:__anon4::ValueType
~dense_hashtable	sparsehash-2.0.2/src/sparsehash/internal/densehashtable.h	/^  ~dense_hashtable() {$/;"	f	class:dense_hashtable
~instrumented_allocator	sparsehash-2.0.2/src/sparsetable_unittest.cc	/^  ~instrumented_allocator() {}$/;"	f	class:instrumented_allocator
~libc_allocator_with_realloc	sparsehash-2.0.2/src/sparsehash/internal/libc_allocator_with_realloc.h	/^  ~libc_allocator_with_realloc() {}$/;"	f	class:libc_allocator_with_realloc
